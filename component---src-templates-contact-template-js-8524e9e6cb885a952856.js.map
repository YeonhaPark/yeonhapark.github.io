{"version":3,"file":"component---src-templates-contact-template-js-8524e9e6cb885a952856.js","mappings":";wLACIA,EAAgBC,GAASA,aAAiBC,YAC9C,MAAMC,EACE,OADFA,EAEI,SAFJA,EAGG,QAEHC,EAAkB,CACtBC,OAAQ,SACRC,SAAU,WACVC,SAAU,WACVC,UAAW,YACXC,IAAK,OAEDC,EAAS,SACTC,EAAY,YACZC,EACC,MADDA,EAEC,MAFDA,EAGO,YAHPA,EAIO,YAJPA,EAKK,UALLA,EAMM,WANNA,EAOM,WAEZ,SAASC,EAAqBC,EAAMC,EAAyBC,GAC3D,IAAI,IACFC,GACEH,EACAd,EAAciB,IAAQD,IACxBC,EAAIC,iBAAiBH,EAA0BZ,EAAgBA,EAAca,GAC7EC,EAAIC,iBAAiBf,EAAaa,GAEtC,CACA,IAAIG,EAAoBlB,GAAkB,MAATA,EACjC,MAAMmB,EAAenB,GAA0B,iBAAVA,EACrC,IAAIoB,EAAWpB,IAAUkB,EAAkBlB,KAAWqB,MAAMC,QAAQtB,IAAUmB,EAAanB,MAAYA,aAAiBuB,MACpHC,EAAQxB,GAAS,QAAQyB,KAAKzB,GAC9B0B,EAAU1B,GAASA,EAAM2B,OAAOC,SAChCC,EAAeC,GAASJ,EAAQI,EAAMC,QAAQ,SAAU,IAAIA,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAAIC,MAAM,MAC7G,SAASC,EAAIC,EAAQC,EAAMnC,GACzB,IAAIoC,GAAS,EACb,MAAMC,EAAWb,EAAMW,GAAQ,CAACA,GAAQN,EAAaM,GAC/CG,EAASD,EAASC,OAClBC,EAAYD,EAAS,EAC3B,OAASF,EAAQE,GAAQ,CACvB,MAAME,EAAMH,EAASD,GACrB,IAAIK,EAAWzC,EACf,GAAIoC,IAAUG,EAAW,CACvB,MAAMG,EAAWR,EAAOM,GACxBC,EAAWrB,EAASsB,IAAarB,MAAMC,QAAQoB,GAAYA,EAAYC,OAAON,EAASD,EAAQ,IAAW,CAAC,EAAN,EACvG,CACAF,EAAOM,GAAOC,EACdP,EAASA,EAAOM,EAClB,CACA,OAAON,CACT,CACA,IAAIU,EAAwB,SAAUC,GACpC,IAAI7C,EAAQ8C,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACjF,IAAK,MAAMN,KAAOK,EACfrB,EAAMgB,GAAoCxC,EAAMwC,GAAOK,EAAKL,GAA/CP,EAAIjC,EAAOwC,EAAKK,EAAKL,IAErC,OAAOxC,CACT,EACIgD,EAAcC,QAAeF,IAARE,EACrBC,EAAM,WACR,IAAIC,EAAML,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC3EX,EAAOW,UAAUR,OAAS,EAAIQ,UAAU,QAAKC,EAC7CK,EAAeN,UAAUR,OAAS,EAAIQ,UAAU,QAAKC,EACzD,MAAMM,EAAS3B,EAAQS,EAAKH,MAAM,cAAcsB,QAAO,CAACD,EAAQb,IAAQtB,EAAkBmC,GAAUA,EAASA,EAAOb,IAAMW,GAC1H,OAAOH,EAAYK,IAAWA,IAAWF,EAAMH,EAAYG,EAAIhB,IAASiB,EAAeD,EAAIhB,GAAQkB,CACrG,EACIE,EAAoB,CAACC,EAAQC,KAC/B,IAAK,MAAMjB,KAAOgB,EAChB,GAAIN,EAAIO,EAAajB,GAAM,CACzB,MAAMkB,EAAQF,EAAOhB,GACrB,GAAIkB,EAAO,CACT,GAAIA,EAAM1C,IAAI2C,OAASX,EAAYU,EAAM1C,IAAI2C,SAC3C,MACK,GAAID,EAAME,QAAS,CACxBF,EAAME,QAAQ,GAAG5C,IAAI2C,QACrB,KACF,CACF,CACF,CACF,EAEEE,EAA0B,CAAC7C,EAAK8C,KAC9B/D,EAAciB,IAAQA,EAAI+C,sBAC5B/C,EAAI+C,oBAAoB7D,EAAc4D,GACtC9C,EAAI+C,oBAAoB7D,EAAe4D,GACvC9C,EAAI+C,oBAAoB7D,EAAa4D,GACvC,EAEF,MAAME,EAAgB,CACpBC,SAAS,EACTjE,MAAO,MAET,IAAIkE,EAAgBN,GAAWvC,MAAMC,QAAQsC,GAAWA,EAAQN,QAAO,CAACa,EAAUC,IAAWA,GAAUA,EAAOpD,IAAIqD,QAAU,CAC1HJ,SAAS,EACTjE,MAAOoE,EAAOpD,IAAIhB,OAChBmE,GAAUH,GAAiBA,EAY3BM,EAAeC,GAA4B,UAAjBA,EAAQC,KAClCC,EAAcF,GAA4B,SAAjBA,EAAQC,KACjCE,EAAkBH,GAA4B,aAAjBA,EAAQC,KACrCG,EAAmBJ,GAAWA,EAAQC,OAAS,GAAGI,OAAOnE,EAAQ,aACrE,MAAMoE,EAAgB,CACpB7E,OAAO,EACPiE,SAAS,GAELa,EAAc,CAClB9E,OAAO,EACPiE,SAAS,GAEX,IAAIc,EAAmBnB,IACrB,GAAIvC,MAAMC,QAAQsC,GAAU,CAC1B,GAAIA,EAAQtB,OAAS,EAAG,CACtB,MAAM0C,EAASpB,EAAQjC,QAAOyC,GAAUA,GAAUA,EAAOpD,IAAIqD,UAASY,KAAIC,IACxE,IACElE,KAAK,MACHhB,IAEAkF,EACJ,OAAOlF,CAAK,IAEd,MAAO,CACLA,MAAOgF,EACPf,UAAWe,EAAO1C,OAEtB,CACA,MAAM,QACJ+B,EAAO,MACPrE,EAAK,WACLmF,GACEvB,EAAQ,GAAG5C,IACf,OAAOqD,EAAUc,IAAenC,EAAYmC,EAAWnF,OAASgD,EAAYhD,IAAoB,KAAVA,EAAe8E,EAAc,CACjH9E,MAAOA,EACPiE,SAAS,GACPa,EAAcD,CACpB,CACA,OAAOA,CAAa,EAEtB,SAASO,EAAcC,EAAWC,EAAMC,EAAuBC,EAAiBC,GAC9E,MAAM/B,EAAQ2B,EAAUK,QAAQJ,GAChC,GAAI5B,EAAO,CACT,MACE1C,KAAK,MACHhB,EAAK,SACL2F,GACD,IACD3E,EAAG,cACH4E,EAAa,YACbC,EAAW,WACXC,GACEpC,EACJ,GAAIiC,GAAYH,EACd,OAEF,OAAIf,EAAYzD,GACPA,EAAI+E,MAETzB,EAAatD,GACRkD,EAAcR,EAAME,SAAS5D,MAElC2E,EAAiB3D,IAzEI4C,EA0EO5C,EAAI4C,QA1EA,IAAIA,GAASjC,QAAOqE,IAC1D,IAAI,SACFC,GACED,EACJ,OAAOC,CAAQ,IACdhB,KAAIiB,IACL,IAAI,MACFlG,GACEkG,EACJ,OAAOlG,CAAK,KAmEN0E,EAAgB1D,GACX+D,EAAiBrB,EAAME,SAAS5D,MAElCyF,EAAqBzF,EAAQ4F,EAA0B,KAAV5F,EAAemG,KAAOnG,EAAQ6F,EAAc7E,EAAI6E,YAAcC,EAAaA,EAAW9F,GAASA,CACrJ,CAhF2B4D,MAiF3B,GAAI2B,EACF,OAAOrC,EAAIqC,EAAsBG,QAASJ,EAE9C,CACA,SAASc,EAAW7B,GAClB,OAAKA,GAGCA,aAAmBtE,aAAgBsE,EAAQ8B,WAAaC,KAAKC,eAG5DH,EAAW7B,EAAQiC,WAC5B,CACA,IAAIC,EAAgBzG,GAASoB,EAASpB,KAAW0G,OAAOC,KAAK3G,GAAOsC,OAChEsE,EAAY5G,GAA0B,kBAAVA,EAShC,SAAS6G,EAAM3E,EAAQC,GACrB,MAAM2E,EAAatF,EAAMW,GAAQ,CAACA,GAAQN,EAAaM,GACjD4E,EAAmC,GAArBD,EAAWxE,OAAcJ,EAV/C,SAAiBA,EAAQ4E,GACvB,MAAMxE,EAASwE,EAAWE,MAAM,GAAI,GAAG1E,OACvC,IAAIF,EAAQ,EACZ,KAAOA,EAAQE,GACbJ,EAASc,EAAYd,GAAUE,IAAUF,EAAO4E,EAAW1E,MAE7D,OAAOF,CACT,CAGwD+E,CAAQ/E,EAAQ4E,GAChEtE,EAAMsE,EAAWA,EAAWxE,OAAS,GAC3C,IAAI4E,EACAH,UACKA,EAAYvE,GAErB,IAAK,IAAI2E,EAAI,EAAGA,EAAIL,EAAWE,MAAM,GAAI,GAAG1E,OAAQ6E,IAAK,CACvD,IACIC,EADAhF,GAAS,EAEb,MAAMiF,EAAeP,EAAWE,MAAM,IAAKG,EAAI,IACzCG,EAAqBD,EAAa/E,OAAS,EAIjD,IAHI6E,EAAI,IACND,EAAiBhF,KAEVE,EAAQiF,EAAa/E,QAAQ,CACpC,MAAMiF,EAAOF,EAAajF,GAC1BgF,EAAYA,EAAYA,EAAUG,GAAQrF,EAAOqF,GAC7CD,IAAuBlF,IAAUhB,EAASgG,IAAcX,EAAcW,IAAc/F,MAAMC,QAAQ8F,KAAeA,EAAUzF,QAAOkB,GAAQzB,EAASyB,KAAU4D,EAAc5D,IAAS+D,EAAU/D,KAAOP,UACvM4E,SAAwBA,EAAeK,UAAerF,EAAOqF,IAE/DL,EAAiBE,CACnB,CACF,CACA,OAAOlF,CACT,CACA,MAAMsF,EAAY,CAACC,EAAYzG,IAAQyG,GAAcA,EAAWzG,MAAQA,EACxE,SAAS0G,EAAkCrC,EAAWtE,EAAc2C,EAAO6B,EAAuBoC,EAAkBC,GAClH,MAAM,IACJ5G,EACAA,KAAK,KACHsE,IAEA5B,EACEmE,EAAWxC,EAAUK,QAAQJ,GACnC,IAAKqC,EAAkB,CACrB,MAAM3H,EAAQoF,EAAcC,EAAWC,EAAMC,IAC5CvC,EAAYhD,IAAUiC,EAAIsD,EAAsBG,QAASJ,EAAMtF,EAClE,CACKgB,EAAIwD,MAASqD,EAIdvD,EAAatD,IAAQ0D,EAAgB1D,GACnCK,MAAMC,QAAQuG,EAASjE,UAAYiE,EAASjE,QAAQtB,QACtDZ,EAAQmG,EAASjE,SAASkE,SAAQ,WAChC,IAAI1D,EAAStB,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC9EV,EAAQU,UAAUR,OAAS,EAAIQ,UAAU,QAAKC,GAC9CqD,EAAWhC,EAAOpD,MAAQwG,EAAUpD,EAAQA,EAAOpD,MAAQ4G,KAC7D/D,EAAwBO,EAAOpD,IAAKD,GACpC8F,EAAMgB,EAASjE,QAAS,IAAIgB,OAAOxC,EAAO,MAE9C,IACIyF,EAASjE,UAAYlC,EAAQmG,EAASjE,SAAStB,eAC1C+C,EAAUK,QAAQJ,WAGpBD,EAAUK,QAAQJ,IAElBc,EAAWpF,IAAQwG,EAAUK,EAAU7G,IAAQ4G,KACxD/D,EAAwB7C,EAAKD,UACtBsE,EAAUK,QAAQJ,WArBlBD,EAAUK,QAAQJ,EAuB7B,CACA,IAAIyC,EAAc/H,GAASkB,EAAkBlB,KAAWmB,EAAanB,GACrE,SAASgI,EAAUC,EAAQC,GACzB,GAAIH,EAAYE,IAAWF,EAAYG,GACrC,OAAOA,EAET,IAAK,MAAM1F,KAAO0F,EAAQ,CACxB,MAAMC,EAAcF,EAAOzF,GACrB4F,EAAcF,EAAO1F,GAC3B,IACEyF,EAAOzF,GAAOpB,EAAS+G,IAAgB/G,EAASgH,IAAgB/G,MAAMC,QAAQ6G,IAAgB9G,MAAMC,QAAQ8G,GAAeJ,EAAUG,EAAaC,GAAeA,CACrJ,CAAZ,MAAOC,GAAK,CAChB,CACA,OAAOJ,CACT,CACA,SAASK,EAAUC,EAASC,EAASC,GACnC,GAAIV,EAAYQ,IAAYR,EAAYS,IAAYD,aAAmBhH,MAAQiH,aAAmBjH,KAChG,OAAOgH,IAAYC,EAErB,KAAK,IAAAE,gBAAeH,GAAU,CAC5B,MAAMI,EAAQjC,OAAOC,KAAK4B,GACpBK,EAAQlC,OAAOC,KAAK6B,GAC1B,GAAIG,EAAMrG,SAAWsG,EAAMtG,OACzB,OAAO,EAET,IAAK,MAAME,KAAOmG,EAAO,CACvB,MAAME,EAAON,EAAQ/F,GACrB,IAAMiG,GAAyB,QAARjG,EAAgB,CACrC,MAAMsG,EAAON,EAAQhG,GACrB,IAAKpB,EAASyH,IAASxH,MAAMC,QAAQuH,MAAWzH,EAAS0H,IAASzH,MAAMC,QAAQwH,KAAUR,EAAUO,EAAMC,EAAML,GAAiBI,IAASC,EACxI,OAAO,CAEX,CACF,CACF,CACA,OAAO,CACT,CACA,SAASC,EAAe/D,EAAQgE,EAAeC,EAAazC,EAAY0C,GACtE,IAAI9G,GAAS,EACb,OAASA,EAAQ4C,EAAO1C,QAAQ,CAC9B,IAAK,MAAME,KAAOwC,EAAO5C,GACnBf,MAAMC,QAAQ0D,EAAO5C,GAAOI,MAC7ByG,EAAY7G,KAAW6G,EAAY7G,GAAS,CAAC,GAC9C6G,EAAY7G,GAAOI,GAAO,GAC1BuG,EAAe/D,EAAO5C,GAAOI,GAAMU,EAAI8F,EAAc5G,IAAU,CAAC,EAAGI,EAAK,IAAKyG,EAAY7G,GAAOI,GAAMyG,EAAY7G,GAAQI,IAE1H8F,EAAUpF,EAAI8F,EAAc5G,IAAU,CAAC,EAAGI,GAAMwC,EAAO5C,GAAOI,IAAQP,EAAIgH,EAAY7G,IAAU,CAAC,EAAGI,GAAOyG,EAAY7G,GAASsE,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGF,EAAY7G,IAAS,CACnL,CAACI,IAAM,IAIbgE,IAAeyC,EAAY3G,eAAiBkE,EAAW0C,EACzD,CACA,OAAOD,CACT,CACA,IAAIG,EAA2B,CAACpE,EAAQgE,EAAeC,IAAgBjB,EAAUe,EAAe/D,EAAQgE,EAAeC,EAAYjC,MAAM,EAAGhC,EAAO1C,SAAUyG,EAAeC,EAAehE,EAAQiE,EAAYjC,MAAM,EAAGhC,EAAO1C,UAC3N+G,EAAWrJ,GAA0B,iBAAVA,EAC3BsJ,GAAkB,CAACjE,EAAWkE,EAAoB5B,EAAkBnC,EAAiBgE,KACvF,MAAMC,EAAS,CAAC,EAChB,IAAK,MAAMnE,KAAQD,EAAUK,SACvB1C,EAAYwG,KAAYH,EAASG,GAAUlE,EAAKoE,WAAWF,GAAUnI,MAAMC,QAAQkI,IAAWA,EAAOG,MAAK9G,GAAQyC,EAAKoE,WAAW7G,SACpI4G,EAAOnE,GAAQF,EAAcC,EAAWC,OAAMvC,EAAWyC,IAG7D,OAAOmC,EAAmB/E,EAAsB6G,GAAUzB,EAAUuB,EAAoB3G,EAAsB6G,GAAQ,EAEpHG,GAAsBC,IACxB,IAAI,OACFC,EAAM,KACNxE,EAAI,MACJyE,EAAK,YACLC,EAAW,qBACXC,GACEJ,EACJ,MAAM5F,EAAUjB,EAAY+G,GACtBG,EAAgBhH,EAAI4G,EAAQxE,GAClC,OAAOrB,KAAaiG,IAAkBjG,IAAYqE,EAAU4B,EAAeH,GAAO,IAAS9F,GAAWf,EAAI+G,EAAsB3E,KAAUpC,EAAI8G,EAAa1E,EAAK,EAE9J6E,GAAUnK,GAASA,aAAiBoK,OACpCC,GAAqBC,GAAkBlJ,EAASkJ,KAAoBH,GAAQG,GAAkBA,EAAiB,CACjHtK,MAAOsK,EACPC,QAAS,IAEPC,GAAaxK,GAA0B,mBAAVA,EAC7ByK,GAAYzK,GAASqJ,EAASrJ,KAAU,IAAA0I,gBAAe1I,GAC3D,SAAS0K,GAAiBrH,EAAQrC,GAChC,IAAIwD,EAAO1B,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,WAC/E,GAAI2H,GAAUpH,IAAWuD,EAAUvD,KAAYA,EAC7C,MAAO,CACLmB,OACA+F,QAASE,GAAUpH,GAAUA,EAAS,GACtCrC,MAGN,CACA,IAAI2J,GAAe,CAACrF,EAAMsF,EAA0Bd,EAAQtF,EAAM+F,IAAYK,EAA2BlE,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGW,EAAOxE,IAAQ,CACtJuF,MAAOnE,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGW,EAAOxE,IAASwE,EAAOxE,GAAMuF,MAAQf,EAAOxE,GAAMuF,MAAQ,CAAC,GAAI,CACpG,CAACrG,GAAO+F,IAAW,MAElB,CAAC,EACFO,GAAgBC,MAAO1F,EAAWuF,EAA0BI,EAAOzF,KACrE,IAAI,IACFvE,EACAA,KAAK,MACHhB,GACD,QACD4D,EAAO,SACPqH,EAAQ,UACRC,EAAS,UACTC,EAAS,IACTC,EAAG,IACHC,EAAG,QACHC,EAAO,SACPC,GACEP,EACJ,MAAM1F,EAAOtE,EAAIsE,KACXyE,EAAQ,CAAC,EACTyB,EAAUlH,EAAatD,GACvByK,EAAa/G,EAAgB1D,GAC7B0K,EAAoBF,GAAWC,EAC/BE,EAAoB,KAAV3L,EACV4L,EAAoBjB,GAAakB,KAAK,KAAMvG,EAAMsF,EAA0Bb,GAC5E+B,EAAmB,SAAUC,EAAWC,EAAkBC,GAC9D,IAAIC,EAAUpJ,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAKnC,EAC9EwL,EAAUrJ,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAKnC,EAClF,MAAM4J,EAAUwB,EAAYC,EAAmBC,EAC/ClC,EAAMzE,GAAQoB,OAAOyC,OAAO,CAC1B3E,KAAMuH,EAAYG,EAAUC,EAC5B5B,UACAvJ,OACa4K,EAAZG,EAA8BG,EAAsCC,EAA7B5B,GAC5C,EACA,GAAIU,KAAcO,IAAYC,IAAeE,GAAWzK,EAAkBlB,KAAW4G,EAAU5G,KAAWA,GAASyL,IAAe1G,EAAiBnB,GAASK,SAAWuH,IAAYtH,EAAcN,GAASK,SAAU,CAClN,MAAM,MACJjE,EAAK,QACLuK,GACEE,GAAUQ,GAAY,CACxBjL,QAASiL,EACTV,QAASU,GACPZ,GAAmBY,GACvB,GAAIjL,IACF+J,EAAMzE,GAAQoB,OAAOyC,OAAO,CAC1B3E,KAAM7D,EACN4J,UACAvJ,IAAK0K,IAAsBrG,EAAUK,QAAQJ,GAAM1B,SAAW,IAAI,IAAM,CAAC,GAAG5C,IAAMA,GACjF4K,EAAkBjL,EAAiC4J,KACjDK,GACH,OAAOb,CAGb,CACA,KAAM7I,EAAkBkK,IAASlK,EAAkBmK,IAAmB,KAAVrL,GAAc,CACxE,IAAI+L,EACAK,EACJ,MAAMC,EAAYhC,GAAmBgB,GAC/BiB,EAAYjC,GAAmBe,GACrC,GAAKzI,MAAM3C,GAQJ,CACL,MAAMuM,EAAYvL,EAAI6E,aAAe,IAAItE,KAAKvB,GAC1CqJ,EAASgD,EAAUrM,SACrB+L,EAAYQ,EAAY,IAAIhL,KAAK8K,EAAUrM,QAEzCqJ,EAASiD,EAAUtM,SACrBoM,EAAYG,EAAY,IAAIhL,KAAK+K,EAAUtM,OAE/C,KAhBmB,CACjB,MAAMwM,EAAcxL,EAAI4E,eAAiB6G,WAAWzM,GAC/CkB,EAAkBmL,EAAUrM,SAC/B+L,EAAYS,EAAcH,EAAUrM,OAEjCkB,EAAkBoL,EAAUtM,SAC/BoM,EAAYI,EAAcF,EAAUtM,MAExC,CASA,IAAI+L,GAAaK,KACfN,IAAmBC,EAAWM,EAAU9B,QAAS+B,EAAU/B,QAAS5J,EAA4BA,IAC3FiK,GACH,OAAOb,CAGb,CACA,GAAIV,EAASrJ,KAAW2L,IAAYT,GAAaC,GAAY,CAC3D,MAAMuB,EAAkBrC,GAAmBa,GACrCyB,EAAkBtC,GAAmBc,GACrCY,GAAa7K,EAAkBwL,EAAgB1M,QAAUA,EAAMsC,OAASoK,EAAgB1M,MACxFoM,GAAalL,EAAkByL,EAAgB3M,QAAUA,EAAMsC,OAASqK,EAAgB3M,MAC9F,IAAI+L,GAAaK,KACfN,EAAiBC,EAAWW,EAAgBnC,QAASoC,EAAgBpC,UAChEK,GACH,OAAOb,CAGb,CACA,GAAIV,EAASrJ,IAAUsL,IAAYK,EAAS,CAC1C,MACE3L,MAAO4M,EAAY,QACnBrC,GACEF,GAAmBiB,GACvB,GAAInB,GAAQyC,KAAkBA,EAAanL,KAAKzB,KAC9C+J,EAAMzE,GAAQoB,OAAOyC,OAAO,CAC1B3E,KAAM7D,EACN4J,UACAvJ,OACC4K,EAAkBjL,EAAgC4J,KAChDK,GACH,OAAOb,CAGb,CACA,GAAIwB,EAAU,CACZ,MAAM9D,EAAarC,EAAcC,EAAWC,EAAMC,GAAuB,GAAO,GAC1EsH,EAAcnB,GAAqB9H,EAAUA,EAAQ,GAAG5C,IAAMA,EACpE,GAAIwJ,GAAWe,GAAW,CACxB,MACMuB,EAAgBpC,SADDa,EAAS9D,GACiBoF,GAC/C,GAAIC,IACF/C,EAAMzE,GAAQoB,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAG2D,GAAgBlB,EAAkBjL,EAAiCmM,EAAcvC,WAC1HK,GACH,OAAOb,CAGb,MAAO,GAAI3I,EAASmK,GAAW,CAC7B,IAAIwB,EAAmB,CAAC,EACxB,IAAK,MAAOvK,EAAKwK,KAAqBtG,OAAOuG,QAAQ1B,GAAW,CAC9D,IAAK9E,EAAcsG,KAAsBnC,EACvC,MAEF,MACMkC,EAAgBpC,SADOsC,EAAiBvF,GACSoF,EAAarK,GAChEsK,IACFC,EAAmBrG,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAG2D,GAAgBlB,EAAkBpJ,EAAKsK,EAAcvC,UACpGK,IACFb,EAAMzE,GAAQyH,GAGpB,CACA,IAAKtG,EAAcsG,KACjBhD,EAAMzE,GAAQoB,OAAOyC,OAAO,CAC1BnI,IAAK6L,GACJE,IACEnC,GACH,OAAOb,CAGb,CACF,CACA,OAAOA,CAAK,EAEd,MAAMmD,GAAU,SAAUC,EAAUnI,GAClC,IAAIoI,EAAQtK,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,GAChF,IAAK,MAAMuK,KAAYrI,EAAQ,CAC7B,MAAMsI,EAAWH,GAAY/L,EAAS4D,GAAU,IAAIJ,OAAOyI,GAAY,IAAIzI,OAAOyI,EAAU,MAC5FtF,EAAY/C,EAAOqI,IAAaD,EAAMG,KAAKD,GAAYJ,GAAQI,EAAUtI,EAAOqI,GAAWD,EAC7F,CACA,OAAOA,CACT,EACA,IAAII,GAAoB,CAACC,EAAaC,EAAWC,EAAaC,EAAYC,KACxE,IAAI7N,EAQJ,OAPA2N,EAAYG,IAAIJ,GACXjH,EAAcgH,KACjBzN,EAAQkD,EAAIuK,EAAaC,IACrBtM,EAASpB,IAAUqB,MAAMC,QAAQtB,KACnCkN,GAAQQ,EAAW1N,GAAO8H,SAAQxC,GAAQqI,EAAYG,IAAIxI,MAGvDtC,EAAYhD,GAAS6N,EAAgBD,EAAa1K,EAAI0K,EAAYF,GAAa1N,CAAK,EAEzF+N,GAAiBC,IACnB,IAAI,SACFC,EAAQ,WACRC,EAAU,UACVC,EAAS,UACTC,EAAS,mBACTC,EAAkB,qBAClBC,EAAoB,YACpBC,EAAW,YACXC,EAAW,QACXC,GACET,EACJ,OAAIS,KAEQD,GAAeL,IAChBC,GAAaG,IACbC,EAAcH,EAAqBJ,IACpCM,IACCC,EAAcF,EAAuBJ,IACvCK,EAEE,EAETG,GAA0BpJ,GAAQA,EAAKqJ,UAAU,EAAGrJ,EAAKsJ,QAAQ,MACrE,MAAMC,GAAwB,CAACvJ,EAAMwJ,IAAe1E,OAAO,IAAIxF,OAAOkK,EAAY,aAAa/M,QAAQ,MAAO,OAAOA,QAAQ,MAAO,QAAQN,KAAK6D,GACjJ,IAAIyJ,GAAqB,CAACC,EAAO1J,IAAS,IAAI0J,GAAOC,MAAKvJ,GAAWmJ,GAAsBvJ,EAAMI,KAC7FwJ,GAAgB3K,GAAWA,EAAQC,OAAS,GAAGI,OAAOnE,EAAQ,QAClE,SAAS0O,GAAY9J,EAAW+J,GAC9B,MAAMC,EAAW,IAAIC,kBAAiB,KACpC,IAAK,MAAM5L,KAASgD,OAAO1B,OAAOK,EAAUK,SAC1C,GAAIhC,GAASA,EAAME,QACjB,IAAK,MAAMQ,KAAUV,EAAME,QACrBQ,GAAUA,EAAOpD,KAAOoF,EAAWhC,EAAOpD,MAC5CoO,EAA+B1L,QAG1BA,GAAS0C,EAAW1C,EAAM1C,MACnCoO,EAA+B1L,EAEnC,IAMF,OAJA2L,EAASE,QAAQC,OAAOC,SAAU,CAChCC,WAAW,EACXC,SAAS,IAEJN,CACT,CACA,IAAIO,UAAeJ,SAAW9O,UAAoB+O,WAAa/O,EAC/D,SAASmP,GAAYhN,GACnB,IAAIwF,EACJ,IAAIyH,EACJ,GAAI/H,EAAYlF,IAAS+M,KAAU/M,aAAgBkN,MAAQhQ,EAAc8C,IACvE,OAAOA,EAET,IAAK,CAAC,MAAO,MAAO,SAAU,OAAQ,SAASmN,SAAqC,QAA3B3H,EAAKxF,EAAKoN,mBAAgC,IAAP5H,OAAgB,EAASA,EAAG/C,MACtH,OAAOzC,EAET,GAAIA,aAAgBtB,KAElB,OADAuO,EAAO,IAAIvO,KAAKsB,EAAKqN,WACdJ,EAET,GAAIjN,aAAgBsN,IAAK,CACvBL,EAAO,IAAIK,IACX,IAAK,MAAM5I,KAAQ1E,EACjBiN,EAAKhC,IAAIvG,GAEX,OAAOuI,CACT,CACA,GAAIjN,aAAgBuN,IAAK,CACvBN,EAAO,IAAIM,IACX,IAAK,MAAM5N,KAAOK,EAAK8D,OACrBmJ,EAAK7N,IAAIO,EAAKqN,GAAYhN,EAAKK,IAAIV,KAErC,OAAOsN,CACT,CACAA,EAAOzO,MAAMC,QAAQuB,GAAQ,GAAK,CAAC,EACnC,IAAK,MAAML,KAAOK,EAChBiN,EAAKtN,GAAOqN,GAAYhN,EAAKL,IAE/B,OAAOsN,CACT,CACA,IAAIO,GAAcC,IAAQ,CACxBC,YAAaD,GAAQA,IAASnQ,EAAgBG,SAC9C2N,SAAUqC,IAASnQ,EAAgBC,OACnC8N,WAAYoC,IAASnQ,EAAgBE,SACrCoO,QAAS6B,IAASnQ,EAAgBK,IAClC2N,UAAWmC,IAASnQ,EAAgBI,YAElCiQ,GAA4BxP,GAAOsD,EAAatD,IAAQ0D,EAAgB1D,GAC5E,MAAMyP,UAA2BjB,SAAW9O,EACtCgQ,GAAiBd,GAAQ,UAAWJ,cAAgBmB,QAAUjQ,EA0tBpE,MAAMkQ,IAAc,IAAAC,eAAc,MAClCD,GAAYE,YAAc,aC70C1B,SAASC,KAYP,OAXAA,GAAWrK,OAAOyC,QAAU,SAAUlB,GACpC,IAAK,IAAI+I,EAAI,EAAGA,EAAIlO,UAAUR,OAAQ0O,IAAK,CACzC,IAAI9I,EAASpF,UAAUkO,GACvB,IAAK,IAAIxO,KAAO0F,EACVxB,OAAOuK,UAAUC,eAAeC,KAAKjJ,EAAQ1F,KAC/CyF,EAAOzF,GAAO0F,EAAO1F,GAG3B,CACA,OAAOyF,CACT,EACO8I,GAASK,MAAMC,KAAMvO,UAC9B,CAaA,SAASwO,GAAuBC,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,CAOA,IAAIE,GACJ,SAAUC,GAPV,IAAwBC,EAAUC,EAShC,SAASH,IACP,IAAII,EAMJ,OALAA,EAAQH,EAAiBP,KAAKE,OAASA,MACjCS,cAAgBD,EAAMC,cAAcjG,KAAKyF,GAAuBO,IACtEA,EAAME,cAAgBF,EAAME,cAAclG,KAAKyF,GAAuBO,IACtEA,EAAM9Q,aAAe8Q,EAAM9Q,aAAa8K,KAAKyF,GAAuBO,IACpEA,EAAMG,mBAAqBH,EAAMG,mBAAmBnG,KAAKyF,GAAuBO,IACzEA,CACT,CAjBgCD,EAQNF,GARJC,EAQPF,GAPNR,UAAYvK,OAAOuL,OAAOL,EAAWX,WAC9CU,EAASV,UAAUhB,YAAc0B,EACjCA,EAASO,UAAYN,EAerB,IAAIO,EAASV,EAAUR,UAwIvB,OAvIAkB,EAAOC,SAAW,WAChB,OAAIf,KAAKgB,MAAMC,iBAAiCvP,IAAnBsO,KAAKkB,UACzBlB,KAAKgB,MAAMC,WAAWE,YAAYnB,KAAKkB,WAEzC,IACT,EACAJ,EAAOM,YAAc,WACnB,OAAIpB,KAAKgB,MAAMC,iBAAiCvP,IAAnBsO,KAAKkB,UACzBlB,KAAKkB,UAEP,IACT,EACAJ,EAAOO,QAAU,WACf,IAAIJ,EAAajB,KAAKgB,MAAMC,WAC5B,GAAIA,QAAiCvP,IAAnBsO,KAAKkB,UACrB,OAAOD,EAAWI,QAAQrB,KAAKkB,WAE/BlB,KAAKsB,mBAAoB,CAE7B,EACAR,EAAOS,aAAe,WACpB,IAAIC,EAASxB,KACb,OAAO,IAAIyB,SAAQ,SAAUC,EAASC,GACpCH,EAAOI,iBAAmBF,EAC1BF,EAAOK,gBAAkBF,EACzBH,EAAOH,SACT,GACF,EACAP,EAAOgB,MAAQ,WACT9B,KAAKgB,MAAMC,iBAAiCvP,IAAnBsO,KAAKkB,WAChClB,KAAKgB,MAAMC,WAAWa,MAAM9B,KAAKkB,UAErC,EACAJ,EAAOL,cAAgB,WACjBT,KAAKgB,MAAMe,UACb/B,KAAKgB,MAAMe,YAEX/B,KAAKtQ,aAAa,KAEtB,EACAoR,EAAOJ,cAAgB,WACjBV,KAAKgB,MAAMgB,WACbhC,KAAKgB,MAAMgB,YAEThC,KAAK6B,kBACP7B,KAAK6B,yBACE7B,KAAK4B,wBACL5B,KAAK6B,gBAEhB,EACAf,EAAOpR,aAAe,SAAsBuS,GACtCjC,KAAKgB,MAAMhS,UACbgR,KAAKgB,MAAMhS,SAASiT,GAElBjC,KAAK4B,mBACP5B,KAAK4B,iBAAiBK,UACfjC,KAAK6B,uBACL7B,KAAK4B,iBAEhB,EACAd,EAAOoB,eAAiB,WACtB,GAAIlC,KAAKgB,MAAMC,YAAcjB,KAAKgB,MAAMC,WAAWkB,aAA6BzQ,IAAnBsO,KAAKkB,UAAyB,CACzF,IAAIkB,EAAUhE,SAASiE,cAAc,OACrCrC,KAAKkB,UAAYlB,KAAKgB,MAAMC,WAAWkB,OAAOC,EAAS,CACrDE,QAAStC,KAAKgB,MAAMsB,QACpBC,SAAUvC,KAAKtQ,aACf8S,MAAOxC,KAAKgB,MAAMwB,MAClBrP,KAAM6M,KAAKgB,MAAM7N,KACjBsP,SAAUzC,KAAKgB,MAAMyB,SACrB,mBAAoBzC,KAAKS,cACzB,iBAAkBT,KAAKU,cACvBgC,KAAM1C,KAAKgB,MAAM0B,KACjBC,OAAQ3C,KAAKgB,MAAM2B,OACnBC,GAAI5C,KAAKgB,MAAM4B,GACfC,MAAO7C,KAAKgB,MAAM6B,QAEpB7C,KAAK8C,QAAQC,YAAYX,EAC3B,CACIpC,KAAKsB,mBAAqBtB,KAAKgB,MAAMC,iBAAiCvP,IAAnBsO,KAAKkB,YAC1DlB,KAAKsB,mBAAoB,EACzBtB,KAAKqB,UAET,EACAP,EAAOkC,kBAAoB,WACzBhD,KAAKkC,gBACP,EACApB,EAAOmC,mBAAqB,WAC1BjD,KAAKkC,gBACP,EACApB,EAAOoC,qBAAuB,gBACLxR,IAAnBsO,KAAKkB,YACPlB,KAAKmD,+BACLnD,KAAK8B,QAET,EACAhB,EAAOqC,6BAA+B,WACpC,IAAIC,EAAgBhF,SAASiE,cAAc,OAI3C,IAHAjE,SAASiF,KAAKN,YAAYK,GAC1BA,EAAcE,MAAMC,QAAU,OAEvBvD,KAAK8C,QAAQU,YAClBJ,EAAcL,YAAY/C,KAAK8C,QAAQU,YAGzCC,YAAW,WACTrF,SAASiF,KAAKK,YAAYN,EAC5B,GAAG,IACL,EACAtC,EAAOH,mBAAqB,SAA4BgD,GACtD3D,KAAK8C,QAAUa,CACjB,EACA7C,EAAOqB,OAAS,WAId,IAAIyB,EAAc5D,KAAKgB,MAarB6C,GAZUD,EAAYtB,QACXsB,EAAY5U,SACf4U,EAAYpB,MACboB,EAAYzQ,KACRyQ,EAAYnB,SACXmB,EAAY7B,UACZ6B,EAAY5B,UACjB4B,EAAYlB,KACVkB,EAAYjB,OACRiB,EAAY3C,WACjB2C,EAAYf,MACfe,EAAYhB,GApKvB,SAAuC/L,EAAQiN,GAC7C,GAAc,MAAVjN,EAAgB,MAAO,CAAC,EAC5B,IAEI1F,EAAKwO,EAFL/I,EAAS,CAAC,EACVmN,EAAa1O,OAAOC,KAAKuB,GAE7B,IAAK8I,EAAI,EAAGA,EAAIoE,EAAW9S,OAAQ0O,IACjCxO,EAAM4S,EAAWpE,GACbmE,EAASvG,QAAQpM,IAAQ,IAC7ByF,EAAOzF,GAAO0F,EAAO1F,IAEvB,OAAOyF,CACT,CA0JmBoN,CAA8BJ,EAAa,CAAC,UAAW,WAAY,QAAS,OAAQ,WAAY,YAAa,YAAa,OAAQ,SAAU,aAAc,QAAS,QAGlL,OAAO,gBAAoB,MAAOlE,GAAS,CAAC,EAAGmE,EAAY,CACzDlU,IAAKqQ,KAAKW,qBAEd,EACOP,CACT,CApJA,CAoJE,aAEFA,GAAUX,YAAc,YACxBW,GAAU6D,aAAe,CACvBjV,SAAU,WAAqB,EAC/BwT,MAAO,QACPrP,KAAM,QACNsP,SAAU,EACVC,KAAM,SACNG,MAAO,+DCpMT,SAAS,KAYP,OAXA,GAAWxN,OAAOyC,QAAU,SAAUlB,GACpC,IAAK,IAAI+I,EAAI,EAAGA,EAAIlO,UAAUR,OAAQ0O,IAAK,CACzC,IAAI9I,EAASpF,UAAUkO,GACvB,IAAK,IAAIxO,KAAO0F,EACVxB,OAAOuK,UAAUC,eAAeC,KAAKjJ,EAAQ1F,KAC/CyF,EAAOzF,GAAO0F,EAAO1F,GAG3B,CACA,OAAOyF,CACT,EACO,GAASmJ,MAAMC,KAAMvO,UAC9B,CAqBA,IAAIyS,GAAa,CAAC,EAEdC,GAAU,EClCd,IAAIC,GAAe,iBAUnB,IDyBwCC,GAAc9R,IAAd8R,GC9BxC,WAGE,MAAO,aALkB,oBAAXlG,QAA0BA,OAAOmG,kBAAoB,CAAC,GAItCC,gBAAkB,gBAAkB,kBACnC,4BAA8BH,GAAe,kBAC9E,ED2BE7R,IADoDA,GCzBT,CAC3C6R,aAAcA,GACdI,WAXe,gBDmCM,CAAC,EACf,SAA6BC,GAClC,IAAIC,EAAuBD,EAAiBhF,aAAegF,EAAiBxQ,MAAQ,YAChF0Q,EACJ,SAAUC,GAhBd,IAAwBtE,EAAUC,EAkB5B,SAASoE,EAAkB3D,EAAO6D,GAChC,IAAIrE,EAIJ,OAHAA,EAAQoE,EAAW9E,KAAKE,KAAMgB,EAAO6D,IAAY7E,MAC3C8E,MAAQ,CAAC,EACftE,EAAMuE,YAAc,GACbvE,CACT,CAxB4BD,EAiBMqE,GAjBhBtE,EAiBHqE,GAhBV/E,UAAYvK,OAAOuL,OAAOL,EAAWX,WAC9CU,EAASV,UAAUhB,YAAc0B,EACjCA,EAASO,UAAYN,EAsBjB,IAAIO,EAAS6D,EAAkB/E,UA8J/B,OA7JAkB,EAAOkE,mCAAqC,WAI1C,OAHKhF,KAAKiF,mBACRjF,KAAKiF,iBAAmB,uBAAyBd,MAE5CnE,KAAKiF,gBACd,EACAnE,EAAOoE,eAAiB,WAEtB,OADAlF,KAAK+E,YAAsC,mBAAjBV,GAA8BA,KAAiBA,GAClErE,KAAK+E,WACd,EACAjE,EAAOqE,4BAA8B,SAAqCL,GACxE,IAAItD,EAASxB,KAGbA,KAAKoF,SAASN,GAAO,WACnB,OAAOtD,EAAOR,MAAMqE,mBAAqB7D,EAAOR,MAAMqE,kBAAkB7D,EAAOsD,MACjF,GACF,EACAhE,EAAOwE,uCAAyC,WAC9C,IAAIC,EAAWrB,GAAWlE,KAAK+E,aAC/B,IAAKQ,IAAaA,EAASC,OACzB,MAAM,IAAIC,MAAM,yBAElB,IAAK,IAAIC,KAAUH,EAASI,UAC1BJ,EAASI,UAAUD,GAAQH,UAEtBpH,OAAO5L,GAAQ6R,aACxB,EACAtD,EAAOkC,kBAAoB,WACzB,IAAI4C,EAAS5F,KACT6F,EAAY7F,KAAKkF,iBACjB/T,EAAM6O,KAAKgF,qCACXc,EAAWvT,GACbiS,EAAasB,EAAStB,WACtBJ,EAAe0B,EAAS1B,aACxB2B,EAAWD,EAASC,SAStB,GAPIvB,QAA4C,IAAvBrG,OAAOqG,KAC9BN,GAAW2B,GAAa,CACtBL,QAAQ,EACRG,UAAW,CAAC,IAIZzB,GAAW2B,GAAY,CACzB,IAAIG,EAAQ9B,GAAW2B,GAEvB,OAAIG,IAAUA,EAAMR,QAAUQ,EAAMC,cAClCjG,KAAKmF,4BAA4Ba,QAInCA,EAAML,UAAUxU,GAAO,SAAU6U,GAC/B,OAAOJ,EAAOT,4BAA4Ba,EAC5C,EAEF,CAOA,IAAIL,EAAY,CAAC,EACjBA,EAAUxU,GAAO,SAAU6U,GACzB,OAAOJ,EAAOT,4BAA4Ba,EAC5C,EACA9B,GAAW2B,GAAa,CACtBL,QAAQ,EACRG,UAAWA,GAEb,IAAIO,EAAS9H,SAASiE,cAAc,UAGpC,IAAK,IAAI8D,KAFTD,EAAOE,IAAMP,EACbK,EAAOxM,OAAQ,EACOnH,GAAQuB,WAC5BoS,EAAOG,aAAaF,EAAW5T,GAAQuB,WAAWqS,IAEhDJ,IACFG,EAAOI,GAAKP,GAEd,IAAIQ,EAAoC,SAA2CC,GACjF,GAAItC,GAAW2B,GAAY,CACzB,IACIY,EADWvC,GAAW2B,GACEF,UAC5B,IAAK,IAAID,KAAUe,EACbD,EAAKC,EAAaf,YACbe,EAAaf,EAG1B,CACF,EACItB,GAAkC,oBAAXjG,SACzBA,OAAOiG,GAAgB,WACrB,OAAOwB,EAAON,wCAChB,GAEFY,EAAOQ,OAAS,WACd,IAAInB,EAAWrB,GAAW2B,GACtBN,IACFA,EAASC,QAAS,EAClBe,GAAkC,SAAUvI,GAC1C,OAAIoG,IAGJpG,EAASuH,IACF,EACT,IAEJ,EACAW,EAAOS,QAAU,WACf,IAAIpB,EAAWrB,GAAW2B,GACtBN,IACFA,EAASU,SAAU,EACnBM,GAAkC,SAAUvI,GAE1C,OADAA,EAASuH,IACF,CACT,IAEJ,EACAnH,SAASiF,KAAKN,YAAYmD,EAC5B,EACApF,EAAOoC,qBAAuB,WAE5B,IAAI2C,EAAY7F,KAAK+E,YACrB,IAAgC,IAA5BxS,GAAQqU,gBAEV,IADA,IAAIC,EAAazI,SAAS0I,qBAAqB,UACtCnH,EAAI,EAAGA,EAAIkH,EAAW5V,OAAQ0O,GAAK,EACtCkH,EAAWlH,GAAGyG,IAAI7I,QAAQsI,IAAc,GACtCgB,EAAWlH,GAAGxK,YAChB0R,EAAWlH,GAAGxK,WAAWuO,YAAYmD,EAAWlH,IAMxD,IAAI4F,EAAWrB,GAAW2B,GACtBN,WACKA,EAASI,UAAU3F,KAAKgF,uCACC,IAA5BzS,GAAQqU,wBACH1C,GAAW2B,GAGxB,EACA/E,EAAOqB,OAAS,WACd,IAAIqC,EAAajS,GAAQiS,WAErBZ,EAAc5D,KAAKgB,MAErB+F,GADoBnD,EAAYyB,kBACjBzB,EAAYmD,cAC3BlD,EA3LV,SAAuChN,EAAQiN,GAC7C,GAAc,MAAVjN,EAAgB,MAAO,CAAC,EAC5B,IAEI1F,EAAKwO,EAFL/I,EAAS,CAAC,EACVmN,EAAa1O,OAAOC,KAAKuB,GAE7B,IAAK8I,EAAI,EAAGA,EAAIoE,EAAW9S,OAAQ0O,IACjCxO,EAAM4S,EAAWpE,GACbmE,EAASvG,QAAQpM,IAAQ,IAC7ByF,EAAOzF,GAAO0F,EAAO1F,IAEvB,OAAOyF,CACT,CAgLuB,CAA8BgN,EAAa,CAAC,oBAAqB,iBAMhF,OAJIY,GAAgC,oBAAXrG,SACvB0F,EAAWW,QAA4C,IAAvBrG,OAAOqG,GAA8BrG,OAAOqG,QAAc9S,GAE5FmS,EAAWlU,IAAMoX,GACV,IAAA1E,eAAcoC,EAAkBZ,EACzC,EACOc,CACT,CAxKA,CAwKE,EAAAqC,WAIEC,GAAqB,IAAAC,aAAW,SAAUlG,EAAOrR,GACnD,OAAO,IAAA0S,eAAcsC,EAAmB,GAAS,CAAC,EAAG3D,EAAO,CAC1D+F,aAAcpX,IAElB,IAKA,OAJAsX,EAAmBxH,YAAc,qBAAuBiF,EAAuB,IAC/EuC,EAAmBE,UAAY,CAC7B9B,kBAAmB,WAEd,KAAa4B,EAAoBxC,EAC1C,GCjNCrE,ICbH,SAAS,KAYP,OAXA,GAAW/K,OAAOyC,OAASzC,OAAOyC,OAAO0C,OAAS,SAAU5D,GAC1D,IAAK,IAAI+I,EAAI,EAAGA,EAAIlO,UAAUR,OAAQ0O,IAAK,CACzC,IAAI9I,EAASpF,UAAUkO,GACvB,IAAK,IAAIxO,KAAO0F,EACVxB,OAAOuK,UAAUC,eAAeC,KAAKjJ,EAAQ1F,KAC/CyF,EAAOzF,GAAO0F,EAAO1F,GAG3B,CACA,OAAOyF,CACT,EACO,GAASmJ,MAAMC,KAAMvO,UAC9B,CACA,SAAS,GAA8BoF,EAAQiN,GAC7C,GAAc,MAAVjN,EAAgB,MAAO,CAAC,EAC5B,IAEI1F,EAAKwO,EAFL/I,EAAS,CAAC,EACVmN,EAAa1O,OAAOC,KAAKuB,GAE7B,IAAK8I,EAAI,EAAGA,EAAIoE,EAAW9S,OAAQ0O,IACjCxO,EAAM4S,EAAWpE,GACbmE,EAASvG,QAAQpM,IAAQ,IAC7ByF,EAAOzF,GAAO0F,EAAO1F,IAEvB,OAAOyF,CACT,CACA,IAAIwQ,GAAY,CAAC,YACbC,GAAqB,kBACzBA,GAAmB5H,YAAc,qBACjC,IAAI6H,GAAsB,SAA6B9X,GACrD,IAAI+X,EAAW/X,EAAK+X,SAClBvG,EAAQ,GAA8BxR,EAAM4X,IAC9C,OAAoB,gBAAoBC,GAAmBG,SAAU,CACnE7Y,MAAO,GAAS,CAAC,EAAGqS,IACnBuG,EACL,EACA,SAASE,KACP,OAAO,aAAiBJ,GAC1B,CACA,IAAIK,GAAc,CAAC,SACfC,GAAW,SAAkBnY,GAC/B,IAAIoY,EAAapY,EAAKqY,MACpBA,OAAuB,IAAfD,EAAwB,mCAAqCA,EACrE5G,EAAQ,GAA8BxR,EAAMkY,IAC1CI,EAAwBL,KAC1B/X,EAAeoY,EAAsBpY,aACrCqY,EAAeD,EAAsBC,aACvC,OAAoB,gBAAoB,IAAK,CAC3CC,QAAQ,GACM,gBAAoB,QAAS,KAAMH,EAAO,IAAkB,gBAAoB,QAAS,GAAS,CAChH1U,KAAM,QACL6N,EAAO,CACR/M,KAAM8T,EACN/Y,SAAUU,MAEd,EACIuY,GAAiB,SAAwBzW,GAE3C,IADA,IAAI0W,EAAW,IAAIC,SACVC,EAAK,EAAGC,EAAehT,OAAOC,KAAK9D,GAAO4W,EAAKC,EAAapX,OAAQmX,IAAM,CACjF,IAAIjX,EAAMkX,EAAaD,GACvBF,EAASI,OAAOnX,EAAKK,EAAKL,GAC5B,CACA,OAAO+W,CACT,EAOA,SAASK,GAAmBzD,EAAO0D,GACjC,IAAIrV,EAAOqV,EAAOrV,KAChBsV,EAAUD,EAAOC,QACnB,OAAQtV,GACN,IAAK,mBAED,IAAIuV,EACAzU,EAAOwU,EAAQxU,KACjBtF,EAAQ8Z,EAAQ9Z,MAChBga,EAAQF,EAAQtV,KAClB,OAAO,GAAS,CAAC,EAAG2R,EAAO,CACzBnR,OAAQ,GAAS,CAAC,EAAGmR,EAAMnR,QAAS+U,EAAY,CAAC,EAAGA,EAAUzU,GAAkB,aAAV0U,EAAuBha,EAAQ8Z,EAAQzV,QAAS0V,MAG5H,IAAK,aAGD,OAAO,GAAS,CAAC,EAAG5D,EAAO,CACzBnR,OAFgB8U,IAKtB,IAAK,cACH,OAAO,GAAS,CAAC,EAAG3D,EAAO,CACzB8D,SAAS,EACTlQ,OAAO,EACPmQ,YAAY,EACZC,WAAW,IAEf,IAAK,YACH,OAAO,GAAS,CAAC,EAAGhE,EAAO,CACzB8D,SAAS,EACTlQ,OAAO,EACPmQ,YAAY,IAEhB,IAAK,iBACH,OAAO,GAAS,CAAC,EAAG/D,EAAO,CACzB+D,YAAY,IAEhB,IAAK,oBACH,OAAO,GAAS,CAAC,EAAG/D,EAAO,CACzBiD,aAAcU,IAElB,IAAK,mBACH,OAAO,GAAS,CAAC,EAAG3D,EAAO,CACzBiE,iBAAkBN,IAEtB,QACE,MAAM,IAAIhD,MAAM,gBAAmBtS,EAAO,qBAEhD,CACA,IAAI6V,GAAc,CAAC,YACfC,GAAuB,SAA8BzZ,GACvD,IAAI+X,EAAW/X,EAAK+X,SAClBvG,EAAQ,GAA8BxR,EAAMwZ,IAC1CnE,EAAU4C,KACVyB,EAAUrE,EAAQqE,QACpBC,EAAWtE,EAAQsE,SACnBC,EAAavE,EAAQuE,WACrBrB,EAAelD,EAAQkD,aACvBgB,EAAmBlE,EAAQkE,iBAC3BM,EAAexE,EAAQwE,aACvBC,EAAczE,EAAQyE,YACpBC,EAAe,CAAC,EAOpB,OANIxB,IACFwB,EAAa,yBAA2BxB,GAEtCgB,IACFQ,EAAa,2BAA4B,GAEvB,gBAAoB,OAAQ,GAAS,CACvD5Z,IAAKuZ,EACLM,OAAQ,OACRvV,KAAMkV,EACNX,OAAQY,EACRna,SAAUoa,EACVI,QAASH,EACT,gBAAgB,GACfC,EAAcvI,GAAqB,gBAAoB,QAAS,CACjE7N,KAAM,SACNc,KAAM,YACNtF,MAAOwa,IACL5B,EAtFgB,mBAsFMA,EAAYA,EAAS1C,GApF3B,SAAyB6E,GAC7C,OAAmC,IAA5B,iBAAqBA,EAC9B,CAkF6DC,CAAgBpC,GAAuB,KAAXA,EAAkB,KAC3G,EAEIqC,GAAiB,SAAwBpa,GAC3C,IAAIqa,EAAYra,EAAKyE,KACnBA,OAAqB,IAAd4V,EAAuB,OAASA,EACvCC,EAActa,EAAKgZ,OACnBA,OAAyB,IAAhBsB,EAAyB,GAAKA,EACvCC,EAAoBva,EAAKuY,aACzBA,OAAqC,IAAtBgC,EAA+B,GAAKA,EACnDC,EAAuBxa,EAAKya,gBAC5BA,OAA2C,IAAzBD,GAA0CA,EAC5DE,EAAiB1a,EAAK2a,UACtBA,OAA+B,IAAnBD,EAA4B,WAAa,EAAIA,EACzDE,EAAiB5a,EAAK6a,UACtBA,OAA+B,IAAnBD,EAA4B,WAAa,EAAIA,EACvDE,EAAgB,CAAC,EACjBC,EAAe,CACjB3B,SAAS,EACTlQ,OAAO,EACPmQ,YAAY,EACZC,WAAW,EACX0B,SAAU,KACV7W,OAAQ2W,EACRnB,SAAUlV,EACVmV,WAAYZ,EACZT,aAAcA,EACdgB,iBAAkBkB,EAClBQ,oBAAoB,GAElBC,EAAoB,aAAiBnC,GAAoBgC,GAC3DzF,EAAQ4F,EAAkB,GAC1BC,EAAWD,EAAkB,GAC3BxB,EAAU,SAAa,MACvB0B,EAAe,SAAa,MAiF5BC,EAAkB,eAAkB,SAAUlb,GAChD,OAAOgb,EAAS,CACdxX,KAAM,oBACNsV,QAAS9Y,GAEb,GAAG,IACCmb,EAAyB,eAAkB,SAAUC,GACvD,OAAOJ,EAAS,CACdxX,KAAM,mBACNsV,QAASsC,GAEb,GAAG,IACH,OAAO,GAAS,CAAC,EAAGjG,EAAO,CACzBpV,aA7FiB,SAAsBiF,GACvC,IAAIqW,EAAerW,EAAMiC,OACvB3C,EAAO+W,EAAa/W,KACpBtF,EAAQqc,EAAarc,MACrB+F,EAAQsW,EAAatW,MACvBiW,EAAS,CACPxX,KAAM,mBACNsV,QAAkB,MAAT/T,GAAiBA,EAAMzD,OAAS,EAAI,CAC3CgD,KAAMA,EACNtF,MAAO+F,EAAM,IACX,CACFT,KAAMA,EACNtF,MAAOA,IAGb,EA+EE0a,aAxEiB,SAAsB4B,EAAOtX,QAChC,IAAVsX,IACFA,EAAQ,WAEK,IAAXtX,IACFA,EAAS,CAAC,GAEZ,IACE,IAAIuX,EAAS,SAAgBC,GAC3B,OAAIC,EAAeD,GACnBR,EAAS,CACPxX,KAAM,mBAEDsO,QAAQC,QAAQ2J,MAAM,IAAK,CAChC7B,OAAQ,OACRnG,KAAM4E,GAAeC,MACnBoD,MAAK,SAAUd,GACjB,IAAI3F,EAAU,CACZC,MAAOA,EACPoE,QAASA,EACT0B,aAAcA,GAEhB,OAAwB,MAApBJ,EAASe,QACXZ,EAAS,CACPxX,KAAM,cAEDkX,EAAUG,EAAU3F,KAE7B8F,EAAS,CACPxX,KAAM,gBAEDgX,EAAUK,EAAU3F,GAC7B,IACF,EACIuG,GAAS,EACTH,GACFA,EAAMO,iBAER,IAAItD,EAAW,GAAS,CACtB,YAAapD,EAAMqE,UAClBxV,EAAQmR,EAAMnR,QACb8X,EAAS,WACX,GAAI3G,EAAMiE,iBAAkB,CAC1B,IAAI2C,EAAS,SAAgBC,GAC3BzD,EAAS,wBAA0ByD,CACrC,EACA,GAA6B,OAAzBf,EAAavW,QACf,MAAM,IAAIoR,MAAM,yGAGlB,MAD+D,cAApCmF,EAAavW,QAAQ2M,MAAM0B,KACxBjB,QAAQC,QAAQkJ,EAAavW,QAAQkN,gBAAgB+J,KAAKI,GAAUA,EAAOd,EAAavW,QAAQ0M,WAChI,CACF,CAXa,GAYb,OAAOU,QAAQC,QAAQ+J,GAAUA,EAAOH,KAAOG,EAAOH,KAAKJ,GAAUA,EAAOO,GAG9E,CAFE,MAAOG,GACP,OAAOnK,QAAQE,OAAOiK,EACxB,CACF,EAgBEtC,YA/EgB,WAChBqB,EAAS,CACPxX,KAAM,aACNsV,QAAS6B,GAEb,EA2EEO,gBAAiBA,EACjBZ,gBAAiBa,EACjB5B,QAASA,EACT0B,aAAcA,GAElB,YCxQA,OAbwB,IAAe,IAAd,KAAEpZ,GAAM,EAC/B,MAAM,KAAEqa,EAAI,YAAEC,GAAgBta,EAAKua,eAEnC,OACE,gBAAC,IAAM,CAACC,MAAOF,EAAYE,OACzB,gBAACC,GAAc,KACb,gBAACC,GAAW,CAACC,wBAAyB,CAAEC,OAAQP,KAChD,gBAACQ,GAAW,OAEP,EAMb,MAAMA,GAAc,KAClB,MAAM,SAAEC,EAAQ,aAAEjD,EAAY,OAAE5Q,GLulBlC,WACE,IAAI,KACFwG,EAAOnQ,EAAgBG,SAAQ,eAC/Bsd,EAAiBzd,EAAgBE,SAAQ,SACzCwd,EAAQ,QACR3H,EAAO,cACPlN,EAAgB,CAAC,EAAC,iBAClB8U,GAAmB,EAAI,iBACvBnW,GAAmB,EAAI,aACvBoW,GACEjb,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACzE,MAAMuC,GAAY,IAAA2Y,QAAO,CAAC,GACpBC,GAA6B,IAAAD,QAAO,CAAC,GACrCE,GAAsB,IAAAF,QAAO,CAAC,GAC9BG,GAAiB,IAAAH,QAAO,IAAI7N,KAC5BiO,GAAoB,IAAAJ,QAAO,CAAC,GAC5BK,GAA6B,IAAAL,QAAO,CAAC,GACrCM,GAA0B,IAAAN,QAAO,CAAC,GAClCO,GAAiB,IAAAP,QAAO,CAAC,GACzBQ,GAAmB,IAAAR,QAAOhV,GAC1ByV,GAAY,IAAAT,SAAO,GACnBU,GAAgB,IAAAV,SAAO,GACvBW,GAAkB,IAAAX,UAClBzY,GAAwB,IAAAyY,QAAO,CAAC,GAChCY,GAA6B,IAAAZ,QAAO,CAAC,GACrCa,GAAa,IAAAb,QAAO9H,GACpB4I,GAAc,IAAAd,QAAOH,GACrBkB,GAAqB,IAAAf,QAAO,IAAI7N,KAChC6O,GAAU,IAAAhB,QAAO3N,GAAYC,KAC7B,WACJC,EAAU,UACVpC,GACE6Q,EAAQtZ,QACNuZ,GAA6BlB,IAAiB5d,EAAgBK,KAC7D0e,GAAWC,KAAgB,IAAAC,UAAS,CACzCC,SAAS,EACTC,cAAc,EACdrW,YAAa,CAAC,EACduF,aAAa,EACb+Q,YAAa,EACbC,QAAS,CAAC,EACVC,cAAc,EACdC,oBAAoB,EACpBzb,SAAUsM,EACVzG,OAAQ,CAAC,IAEL6V,IAAmB,IAAA3B,QAAO,CAC9BqB,SAAU3O,GACVzH,aAAcyH,GACd8O,SAAU9O,IAAkBvC,EAC5BmR,cAAe5O,GACf+O,cAAe/O,GACfzM,SAAUyM,KAENkP,IAAe,IAAA5B,QAAOkB,IACtBW,IAAc,IAAA7B,WAElB/P,SAAUI,GACVH,WAAYI,KACV,IAAA0P,QAAO3N,GAAYuN,IAAiBlY,QACxCmZ,EAAWnZ,QAAUwQ,EACrB4I,EAAYpZ,QAAUmY,EACtB+B,GAAala,QAAUwZ,GACvB3Z,EAAsBG,QAAUiC,EAAmB,CAAC,EAAIlB,EAAclB,EAAsBG,SAAWmK,GAAY7G,GAAiBzD,EAAsBG,QAC1J,MAAMoa,IAAkB,IAAAC,cAAY,WAClC,IAAI5J,EAAQrT,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC5E2b,EAAU/Y,UACbka,GAAala,QAAUgB,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGyW,GAAala,SAAUyQ,GAC9EgJ,GAAaS,GAAala,SAE9B,GAAG,IACGsa,GAAqB,IAAML,GAAiBja,QAAQ4Z,cAAgBQ,GAAgB,CACxFR,cAAc,IAEVW,IAA0B,IAAAF,cAAY,SAAUza,EAAMyE,GAC1D,IAAImW,EAAepd,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,IAAmBA,UAAU,GAC9EqT,EAAQrT,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC7EmB,EAAUnB,UAAUR,OAAS,EAAIQ,UAAU,QAAKC,EAChDod,EAAiBD,GAAgBtW,GAAoB,CACvDE,OAAQ8V,GAAala,QAAQoE,OAC7BC,QACAzE,OACA0E,YAAauU,EAAe7Y,QAC5BuE,qBAAsBqU,EAAwB5Y,UAEhD,MAAMwE,EAAgBhH,EAAI0c,GAAala,QAAQoE,OAAQxE,GACnDyE,GACFlD,EAAM0X,EAAe7Y,QAASJ,GAC9B6a,EAAiBA,IAAmBjW,IAAkB5B,EAAU4B,EAAeH,GAAO,GACtF9H,EAAI2d,GAAala,QAAQoE,OAAQxE,EAAMyE,MAEnC7G,EAAIob,EAAwB5Y,QAASJ,IAASwZ,EAAYpZ,WAC5DzD,EAAIsc,EAAe7Y,QAASJ,GAAM,GAClC6a,EAAiBA,GAAkBjW,GAErCrD,EAAM+Y,GAAala,QAAQoE,OAAQxE,KAEjC6a,IAAmBjf,EAAkBgf,KAAkBzZ,EAAc0P,IAAUwJ,GAAiBja,QAAQ4Z,eAC1GQ,GAAgBpZ,OAAOyC,OAAOzC,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGgN,GAAQ2I,EAAYpZ,QAAU,CAC1FzB,UAAWA,GACT,CAAC,GAAI,CACPqb,cAAc,IAGpB,GAAG,IACGc,IAAgB,IAAAL,cAAY,CAACza,EAAM+a,KACvC,MAAM,IACJrf,EAAG,QACH4C,GACEyB,EAAUK,QAAQJ,GAChBtF,EAAQ4P,IAAS7P,EAAciB,IAAQE,EAAkBmf,GAAY,GAAKA,EAC5E/b,EAAatD,IACd4C,GAAW,IAAIkE,SAAQwY,IACtB,IACEtf,IAAKuf,GACHD,EACJ,OAAOC,EAASlc,QAAUkc,EAASvgB,QAAUA,CAAK,IAE3CyE,EAAYzD,KAASqI,EAASrJ,GACvCgB,EAAI+E,MAAQ/F,EACH2E,EAAiB3D,GAC1B,IAAIA,EAAI4C,SAASkE,SAAQ0Y,GAAaA,EAAUva,SAAWjG,EAAMgQ,SAASwQ,EAAUxgB,SAC3E0E,EAAgB1D,IAAQ4C,EACjCA,EAAQtB,OAAS,EAAIsB,EAAQkE,SAAQ2Y,IACnC,IACEzf,IAAK0f,GACHD,EACJ,OAAOC,EAAYrc,QAAUhD,MAAMC,QAAQtB,KAAWA,EAAM2J,MAAK9G,GAAQA,IAAS6d,EAAY1gB,QAASA,IAAU0gB,EAAY1gB,KAAK,IAC/H4D,EAAQ,GAAG5C,IAAIqD,UAAYrE,EAEhCgB,EAAIhB,MAAQA,CACd,GACC,IACG2gB,IAAc,IAAAZ,cAAY,CAACza,EAAMzC,KACrC,GAAI8c,GAAiBja,QAAQ2Z,QAAS,CACpC,MAAMuB,EAAaC,KAEnB,OADAvb,GAAQzC,GAAQZ,EAAI2e,EAAYtb,EAAMzC,IAC9ByF,EAAUsY,EAAYpC,EAAiB9Y,QACjD,CACA,OAAO,CAAK,GACX,IACGob,IAAyB,IAAAf,cAAY,SAAUza,GACnD,IAAI4a,IAAepd,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,KAAmBA,UAAU,GAClF,GAAI6c,GAAiBja,QAAQ2Z,SAAWM,GAAiBja,QAAQuD,YAAa,CAC5E,MAAM8X,GAAgBzY,EAAUpF,EAAIsb,EAAiB9Y,QAASJ,GAAOF,EAAcC,EAAWC,EAAMC,IAC9Fyb,EAAoB9d,EAAI0c,GAAala,QAAQuD,YAAa3D,GAC1D2b,EAAkBrB,GAAala,QAAQ2Z,QAC7C0B,EAAe9e,EAAI2d,GAAala,QAAQuD,YAAa3D,GAAM,GAAQuB,EAAM+Y,GAAala,QAAQuD,YAAa3D,GAC3G,MAAM6Q,EAAQ,CACZkJ,QAASsB,KACT1X,YAAa2W,GAAala,QAAQuD,aAE9BiY,EAAYvB,GAAiBja,QAAQ2Z,SAAW4B,IAAoB9K,EAAMkJ,SAAWM,GAAiBja,QAAQuD,aAAe+X,IAAsB9d,EAAI0c,GAAala,QAAQuD,YAAa3D,GAE/L,OADA4b,GAAahB,GAAgBJ,GAAgB3J,GACtC+K,EAAY/K,EAAQ,CAAC,CAC9B,CACA,MAAO,CAAC,CACV,GAAG,IACGgL,IAAoB,IAAApB,cAAYhV,MAAOzF,EAAM8b,KAOjD,MAAMrX,SAAee,GAAczF,EAAW4Z,GAA4B5Z,EAAUK,QAAQJ,GAAOC,IAAwBD,GAE3H,OADA2a,GAAwB3a,EAAMyE,EAAOqX,GAC9Bpe,EAAY+G,EAAM,GACxB,CAACkW,GAAyBhB,KACvBoC,IAAoC,IAAAtB,cAAYhV,UACpD,MAAM,OACJjB,SACQgV,EAAYpZ,QAAQmb,KAAahC,EAAWnZ,QAASuZ,IACzDqC,EAAsB1B,GAAala,QAAQzB,QACjD,GAAI5C,MAAMC,QAAQ0N,GAAQ,CACxB,MAAMuS,EAAgBvS,EAAM/J,KAAIK,IAC9B,MAAMyE,EAAQ7G,EAAI4G,EAAQxE,GAE1B,OADAyE,EAAQ9H,EAAI2d,GAAala,QAAQoE,OAAQxE,EAAMyE,GAASlD,EAAM+Y,GAAala,QAAQoE,OAAQxE,IACnFyE,CAAK,IACZyX,MAAM5f,SAKT,OAJAke,GAAgB,CACd7b,QAASwC,EAAcqD,GACvBwV,cAAc,IAETiC,CACT,CAAO,CACL,MAAMxX,EAAQ7G,EAAI4G,EAAQkF,GAE1B,OADAiR,GAAwBjR,EAAOjF,EAAOuX,IAAwB7a,EAAcqD,GAAS,CAAC,EAAGrD,EAAcqD,KAC/FC,CACV,IACC,CAACkW,GAAyBhB,KACvBwC,IAAU,IAAA1B,cAAYhV,UAC1B,MAAMvH,EAAS8B,GAAQoB,OAAOC,KAAKtB,EAAUK,SAE7C,GADAsa,KACIlB,EAAYpZ,QACd,OAAO2b,GAAkC7d,GAE3C,GAAInC,MAAMC,QAAQkC,GAAS,EACxB8B,IAASsa,GAAala,QAAQoE,OAAS,CAAC,GACzC,MAAMzG,QAAeyP,QAAQtS,IAAIgD,EAAOyB,KAAI8F,eAAoBoW,GAAkBte,EAAM,SAIxF,OAHAid,GAAgB,CACdR,cAAc,IAETjc,EAAOme,MAAM5f,QACtB,CACA,aAAauf,GAAkB3d,EAAO,GACrC,CAAC6d,GAAmCF,KACjCO,IAAoB,IAAA3B,cAAY,CAACza,EAAMtF,EAAO2hB,KAClD,IAAI,YACFC,EAAW,eACXC,GACEF,EACJ,MAAM9e,EAAO,CAAC,EACdZ,EAAIY,EAAMyC,EAAMtF,GAChB,IAAK,MAAM0N,KAAaR,GAAQ5H,EAAMtF,GAChCqF,EAAUK,QAAQgI,KACpB0S,GAAc1S,EAAWxK,EAAIL,EAAM6K,IACnCkU,GAAed,GAAuBpT,GACtCmU,GAAkBJ,GAAQ/T,GAE9B,GACC,CAAC+T,GAASrB,GAAeU,KACtBgB,IAAmB,IAAA/B,cAAY,CAACza,EAAMtF,EAAO+hB,KAEjD,IADCpa,IAAqBI,EAAY/H,IAAUiC,EAAIsD,EAAsBG,QAASJ,EAAMjE,MAAMC,QAAQtB,GAAS,IAAIA,GAAS0G,OAAOyC,OAAO,CAAC,EAAGnJ,IACvIqF,EAAUK,QAAQJ,GACpB8a,GAAc9a,EAAMtF,GACpB+hB,EAAOH,aAAed,GAAuBxb,GAC7Cyc,EAAOF,gBAAkBJ,GAAQnc,QAC5B,IAAKyC,EAAY/H,KACtB0hB,GAAkBpc,EAAMtF,EAAO+hB,GAC3BhD,EAAmBrZ,QAAQsc,IAAI1c,IAAO,CACxC,MAAM4D,EAAawF,GAAwBpJ,IAASA,EACpDrD,EAAIgc,EAA2BvY,QAASJ,EAAMtF,GAC9C4e,EAA2BlZ,QAAQwD,GAAY,CAC7C,CAACA,GAAahG,EAAI+a,EAA2BvY,QAASwD,MAEnDyW,GAAiBja,QAAQ2Z,SAAWM,GAAiBja,QAAQuD,cAAgB8Y,EAAOH,cACvF3f,EAAI2d,GAAala,QAAQuD,YAAa3D,EAAM8D,EAAyBpJ,EAAOkD,EAAIsb,EAAiB9Y,QAASJ,EAAM,IAAKpC,EAAI0c,GAAala,QAAQuD,YAAa3D,EAAM,MACjKwa,GAAgB,CACdT,SAAU/W,EAAU5B,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAG0X,MAAc,CAChE,CAACvb,GAAOtF,IACNwe,EAAiB9Y,WAG3B,EAEDiC,GAAoB1F,EAAIsD,EAAsBG,QAASJ,EAAMtF,EAAM,GACnE,CAAC8gB,GAAwBV,GAAesB,KACrCO,GAAiB3c,GAAQoZ,EAAchZ,SAAWyY,EAAezY,QAAQsc,IAAI1c,IAAS6Y,EAAezY,QAAQsc,KAAK1c,EAAK4c,MAAM,QAAU,IAAI,IAC3IC,GAAsB7c,IAC1B,IAAI8c,GAAQ,EACZ,IAAK3b,EAAc2X,EAAkB1Y,SACnC,IAAK,MAAMlD,KAAO4b,EAAkB1Y,QAC7BJ,GAAS8Y,EAAkB1Y,QAAQlD,GAAKuR,OAAQqK,EAAkB1Y,QAAQlD,GAAKwf,IAAI1c,KAAS8Y,EAAkB1Y,QAAQlD,GAAKwf,IAAItT,GAAwBpJ,MAC1J+Y,EAA2B3Y,QAAQlD,KACnC4f,GAAQ,GAId,OAAOA,CAAK,EAEd,SAASC,GAAS/c,EAAMtF,EAAO+hB,GAC7BD,GAAiBxc,EAAMtF,EAAO+hB,GAAU,CAAC,GACzCE,GAAe3c,IAASwa,KACxBqC,GAAoB7c,EACtB,CA0DA,SAASgd,GAA2Bzf,GAClC,IAAK8E,EAAkB,CACrB,IAAImI,EAAOD,GAAYhN,GACvB,IAAK,MAAM7C,KAAS+e,EAAmBrZ,QACjClE,EAAMxB,KAAW8P,EAAK9P,KACxB8P,EAAOpJ,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAG2G,GAAO,CAC5C,CAAC9P,GAAQ,MAIf,OAAO8P,CACT,CACA,OAAOjN,CACT,CACA,SAASge,GAAU/G,GACjB,GAAIzQ,EAASyQ,GACX,OAAO1U,EAAcC,EAAWyU,EAASvU,GAE3C,GAAIlE,MAAMC,QAAQwY,GAAU,CAC1B,MAAMjX,EAAO,CAAC,EACd,IAAK,MAAMyC,KAAQwU,EACjB7X,EAAIY,EAAMyC,EAAMF,EAAcC,EAAWC,EAAMC,IAEjD,OAAO1C,CACT,CACA,OAAOyf,GAA2BhZ,GAAgBjE,EAAWwK,GAAYtK,EAAsBG,SAAUiC,GAC3G,CAnFAgX,EAAgBjZ,QAAUiZ,EAAgBjZ,QAAUiZ,EAAgBjZ,QAAUqF,UAC5E,IAAI,KACFvG,EAAI,OACJyD,GACEsa,EACAjd,EAAO2C,EAAO3C,KAClB,MAAM5B,EAAQ2B,EAAUK,QAAQJ,GAChC,IAAIyE,EACA9F,EACJ,GAAIP,EAAO,CACT,MAAM6K,EAAc/J,IAAStE,EACvBsiB,EAAuBzU,GAAerH,OAAOyC,OAAO,CACxDoF,cACAD,wBACAD,sBACAD,YAAalL,EAAI0c,GAAala,QAAQ8Z,QAASla,GAC/CkJ,YAAaoR,GAAala,QAAQ8I,aACjCwQ,EAAQtZ,UACX,IAAIyQ,EAAQ2K,GAAuBxb,GAAM,GACrC4a,GAAgBzZ,EAAc0P,KAAW5H,GAAe0T,GAAe3c,GAU3E,GATIiJ,IAAgBrL,EAAI0c,GAAala,QAAQ8Z,QAASla,IAASqa,GAAiBja,QAAQ8Z,UACtFvd,EAAI2d,GAAala,QAAQ8Z,QAASla,GAAM,GACxC6Q,EAAQzP,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGgN,GAAQ,CAC9CqJ,QAASI,GAAala,QAAQ8Z,YAG7B7X,GAAoBjD,EAAgBuD,IACvChG,EAAIsD,EAAsBG,QAASJ,EAAMF,EAAcC,EAAWC,IAEhEkd,EAEF,OADCjU,GAAe4T,GAAoB7c,KAC3BmB,EAAc0P,IAAU+J,GAAgBzZ,EAAc0P,KAAW2J,GAAgB3J,GAG5F,GADA6J,KACIlB,EAAYpZ,QAAS,CACvB,MAAM,OACJoE,SACQgV,EAAYpZ,QAAQmb,KAAahC,EAAWnZ,QAASuZ,IACzDqC,EAAsB1B,GAAala,QAAQzB,QAEjD,GADA8F,EAAQ7G,EAAI4G,EAAQxE,GAChBZ,EAAgBuD,KAAY8B,GAAS+U,EAAYpZ,QAAS,CAC5D,MAAM+c,EAAiB/T,GAAwBpJ,GACzCod,EAAexf,EAAI4G,EAAQ2Y,EAAgB,CAAC,GAClDC,EAAale,MAAQke,EAAanY,UAAYR,EAAQ2Y,GAClDD,IAAmBC,GAAgBxf,EAAI0c,GAAala,QAAQoE,OAAQ2Y,MACtEnd,EAAOmd,EAEX,CACAxe,EAAUwC,EAAcqD,GACxBwX,IAAwBrd,IAAYic,GAAe,EACrD,MACEnW,SAAee,GAAczF,EAAW4Z,GAA4Bvb,EAAO6B,IAAwBD,IAEpGiJ,GAAe4T,GAAoB7c,GACpC2a,GAAwB3a,EAAMyE,EAAOmW,EAAc/J,EAAOlS,EAC5D,GA6BF,MAAM0e,IAAmB,IAAA5C,cAAYhV,iBACnC,IAAI/F,EAASlC,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAClF,MAAM8f,EAAmBnc,EAAcpB,EAAUK,SAAW8Y,EAAiB9Y,QAAU,CAAC,GAClF,OACJoE,SACSgV,EAAYpZ,QAAQgB,OAAOyC,OAAOzC,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGyZ,GAAmB/B,MAAc7b,GAAS6Z,EAAWnZ,QAASuZ,KAAgC,CAAC,EACtKhb,EAAUwC,EAAcqD,GAC9B8V,GAAala,QAAQzB,UAAYA,GAAW6b,GAAgB,CAC1D7b,WAEJ,GAAG,CAACgb,KACE4D,IAA2B,IAAA9C,cAAY,CAACrc,EAAOkE,KACnDF,EAAkCrC,EAAWsZ,EAAgBjZ,QAAShC,EAAO6B,EAAuBoC,EAAkBC,GAClHD,IACFd,EAAM0X,EAAe7Y,QAAShC,EAAM1C,IAAIsE,MACxCuB,EAAMyX,EAAwB5Y,QAAShC,EAAM1C,IAAIsE,MACnD,GACC,CAACqC,IACEmb,IAAqB,IAAA/C,cAAYza,IACrC,GAAIoZ,EAAchZ,QAChBoa,SACK,CACL,IAAK,MAAMiD,KAAc5E,EAAezY,QACtC,GAAIqd,EAAWrZ,WAAWpE,GAAO,CAC/Bwa,KACA,KACF,CAEFqC,GAAoB7c,EACtB,IACC,IACG8J,IAAiC,IAAA2Q,cAAY,CAACrc,EAAOkE,KACrDlE,IACFmf,GAAyBnf,EAAOkE,GAC5BD,IAAqBjG,EAAQgC,EAAME,SAAW,IAAItB,SACpDuE,EAAM+Y,GAAala,QAAQoE,OAAQpG,EAAM1C,IAAIsE,MAC7CrD,EAAI2d,GAAala,QAAQuD,YAAavF,EAAM1C,IAAIsE,MAAM,GACtDwa,GAAgB,CACdT,QAASsB,OAEXhB,GAAiBja,QAAQzB,SAAW6a,EAAYpZ,SAAWid,KAC3DG,GAAmBpf,EAAM1C,IAAIsE,OAEjC,GACC,CAACqd,GAAkBE,KACtB,SAASG,GAAY1d,GACnBA,IAASjE,MAAMC,QAAQgE,GAAQA,EAAO,CAACA,IAAOwC,SAAQmb,GAAa5d,EAAUK,QAAQud,IAAczhB,EAAMyhB,UAAoBrD,GAAala,QAAQoE,OAAOmZ,GAAapc,EAAM+Y,GAAala,QAAQoE,OAAQmZ,KACzMnD,GAAgB,CACdhW,OAAQxE,EAAOsa,GAAala,QAAQoE,OAAS,CAAC,GAElD,CACA,SAASoZ,GAAS5d,EAAMyE,GACtB,MAAM/I,GAAOqE,EAAUK,QAAQJ,IAAS,CAAC,GAAGtE,IAC5CiB,EAAI2d,GAAala,QAAQoE,OAAQxE,EAAMoB,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGY,GAAQ,CAC7E/I,SAEF8e,GAAgB,CACd7b,SAAS,IAEX8F,EAAMoZ,aAAeniB,GAAOA,EAAI2C,OAAS3C,EAAI2C,OAC/C,CACA,MAAMyf,IAAgB,IAAArD,cAAY,CAACsD,EAAYjgB,EAAckgB,KAC3D,MAAM3V,EAAc2V,EAAUlF,EAAkB1Y,QAAQ4d,GAAWnF,EAAezY,QAClF,IAAI+H,EAAcnE,GAAgBjE,EAAWwK,GAAYtK,EAAsBG,SAAUiC,GAAkB,EAAO0b,GAClH,GAAIha,EAASga,GAAa,CACxB,MAAMZ,EAAiB/T,GAAwB2U,IAAeA,EAI9D,OAHItE,EAAmBrZ,QAAQsc,IAAIS,KACjChV,EAAc/G,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAG+U,EAAoBxY,SAAU+H,IAEvED,GAAkBC,EAAa4V,EAAY1V,EAAa3K,EAAYE,EAAIsb,EAAiB9Y,QAAS2d,IAAejgB,EAAeF,EAAIsb,EAAiB9Y,QAAS2d,IAAa,EACpL,CACA,MAAME,EAAwBvgB,EAAYI,GAAgBob,EAAiB9Y,QAAUtC,EACrF,OAAI/B,MAAMC,QAAQ+hB,GACTA,EAAW/f,QAAO,CAACa,EAAUmB,IAASoB,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGhF,GAAW,CACtF,CAACmB,GAAOkI,GAAkBC,EAAanI,EAAMqI,EAAa4V,MACxD,CAAC,IAEP7E,EAAchZ,QAAU1C,EAAYsgB,GAC7B1gB,GAAuB6D,EAAcgH,IAAgBA,GAAe8V,GAAsB,GAChG,IACH,SAASC,GAAMH,EAAYjgB,GACzB,OAAOggB,GAAcC,EAAYjgB,EACnC,CACA,SAASqgB,GAAWne,GAClB,IAAK,MAAMoI,KAAarM,MAAMC,QAAQgE,GAAQA,EAAO,CAACA,GACpD8J,GAA+B/J,EAAUK,QAAQgI,IAAY,EAEjE,CACA,SAASgW,GAAiB1iB,GACxB,IAAI4C,EAAUd,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EASnF,MAAM,KACJwC,EAAI,KACJd,EAAI,MACJxE,GACEgB,EACE2iB,EAA+Bjd,OAAOyC,OAAO,CACjDnI,OACC4C,GACGJ,EAAS6B,EAAUK,QACnBgG,EAAoB8E,GAA0BxP,GAC9C4iB,EAAe7U,GAAmBgQ,EAAmBrZ,QAASJ,GAC9Due,EAAaC,GAAclU,MAAW7P,EAAciB,IAAQ8iB,IAAe9iB,GACjF,IAEIoC,EAFAM,EAAQF,EAAO8B,GACfye,GAAsB,EAE1B,GAAIrgB,IAAUgI,EAAoBrK,MAAMC,QAAQoC,EAAME,UAAYlC,EAAQgC,EAAME,SAAS+F,MAAKvF,GACrFpE,IAAUoE,EAAOpD,IAAIhB,OAAS6jB,EAAWzf,EAAOpD,OACpD6iB,EAAWngB,EAAM1C,MAEpB,YADAwC,EAAO8B,GAAQoB,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGzF,GAAQE,IAIvDF,EADEc,EACMkH,EAAoBhF,OAAOyC,OAAO,CACxCvF,QAAS,IAAIlC,EAAQgC,GAASA,EAAME,SAAW,IAAK,CAClD5C,QAEFA,IAAK,CACHwD,OACAc,SAED1B,GAAW8C,OAAOyC,OAAO,CAAC,EAAGwa,GAExBA,EAEVngB,EAAO8B,GAAQ5B,EACf,MAAMsgB,EAAuBhhB,EAAYE,EAAIqC,EAAsBG,QAASJ,IACvEmB,EAAc+X,EAAiB9Y,UAAase,IAC/C5gB,EAAeF,EAAI8gB,EAAuBxF,EAAiB9Y,QAAUH,EAAsBG,QAASJ,GACpGye,EAAsB/gB,EAAYI,GAC7B2gB,GAAwBH,GAC3BxD,GAAc9a,EAAMlC,IAGnBqD,EAAc7C,KACjB3B,EAAIqc,EAAwB5Y,QAASJ,GAAM,IACtCiL,GAAcoP,GAAiBja,QAAQzB,SAC1C6G,GAAczF,EAAW4Z,GAA4Bvb,EAAO6B,GAAuBoX,MAAK5S,IACtF,MAAMuX,EAAsB1B,GAAala,QAAQzB,QACjDwC,EAAcsD,GAAS9H,EAAIsc,EAAe7Y,QAASJ,GAAM,GAAQuB,EAAM0X,EAAe7Y,QAASJ,GAC/Fgc,IAAwB7a,EAAcsD,IAAU+V,IAAiB,MAInEnY,GAAsBic,GAAgBG,IACvCH,GAAgB/c,EAAM+Y,GAAala,QAAQuD,YAAa3D,GAEvDd,GACF5D,EAAqB8K,GAAqBhI,EAAME,QAAUF,EAAME,QAAQF,EAAME,QAAQtB,OAAS,GAAKoB,EAAOgI,GAAqBwD,GAAclO,GAAM2d,EAAgBjZ,QAExK,CACA,SAASiY,GAASsG,EAAsBrgB,GACtC,IAAK6M,GACH,GAAIpH,EAAS4a,GACXP,GAAiB,CACfpe,KAAM2e,GACLrgB,OACE,KAAIxC,EAAS6iB,MAAyB,SAAUA,GAGrD,OAAOjjB,GAAOA,GAAO0iB,GAAiB1iB,EAAKijB,GAF3CP,GAAiBO,EAAsBrgB,EAGzC,CAEJ,CACA,MAAM8W,IAAe,IAAAqF,cAAY,CAACmE,EAASC,IAAcpZ,UACnDkS,GAAKA,EAAEJ,iBACTI,EAAEJ,iBACFI,EAAEmH,WAEJ,IAAI3gB,EAAc,CAAC,EACfgK,EAAc6U,GAA2BhZ,GAAgBjE,EAAWwK,GAAYtK,EAAsBG,SAAUiC,GAAkB,IACtIgY,GAAiBja,QAAQ+Z,cAAgBK,GAAgB,CACvDL,cAAc,IAEhB,IACE,GAAIX,EAAYpZ,QAAS,CACvB,MAAM,OACJoE,EAAM,OACN9E,SACQ8Z,EAAYpZ,QAAQ+H,EAAaoR,EAAWnZ,QAASuZ,IAC/DW,GAAala,QAAQoE,OAASrG,EAAcqG,EAC5C2D,EAAczI,CAChB,MACE,IAAK,MAAMtB,KAASgD,OAAO1B,OAAOK,EAAUK,SAC1C,GAAIhC,EAAO,CACT,MAAM,KACJ4B,GACE5B,EAAM1C,IACJqjB,QAAmBvZ,GAAczF,EAAW4Z,GAA4Bvb,EAAO6B,GACjF8e,EAAW/e,IACbrD,EAAIwB,EAAa6B,EAAM+e,EAAW/e,IAClCuB,EAAM0X,EAAe7Y,QAASJ,IACrBpC,EAAIob,EAAwB5Y,QAASJ,KAC9CuB,EAAM+Y,GAAala,QAAQoE,OAAQxE,GACnCrD,EAAIsc,EAAe7Y,QAASJ,GAAM,GAEtC,CAGAmB,EAAchD,IAAgBiD,OAAOC,KAAKiZ,GAAala,QAAQoE,QAAQ0X,OAAMlc,GAAQA,KAAQD,EAAUK,WACzGoa,GAAgB,CACdhW,OAAQ,CAAC,EACT2V,cAAc,UAEVyE,EAAQzW,EAAawP,KAE3B2C,GAAala,QAAQoE,OAASpD,OAAOyC,OAAOzC,OAAOyC,OAAO,CAAC,EAAGyW,GAAala,QAAQoE,QAASrG,GAC5F0gB,SAAoBA,EAAUvE,GAAala,QAAQoE,OAAQmT,GAC3Da,GAAoBva,EAAkB8B,EAAUK,QAASka,GAAala,QAAQoE,QAUlF,CARE,QACA8V,GAAala,QAAQ+Z,cAAe,EACpCK,GAAgB,CACdtR,aAAa,EACbiR,cAAc,EACdC,mBAAoBjZ,EAAcmZ,GAAala,QAAQoE,QACvDyV,YAAaK,GAAala,QAAQ6Z,YAAc,GAEpD,IACC,CAACzB,EAAkBmB,KAChBqF,GAAYC,IAChB,IAAI,OACFza,EAAM,QACNuV,EAAO,YACP7Q,EAAW,QACXgR,EAAO,QACPvb,EAAO,YACPsb,EAAW,YACXtW,GACEsb,EACCtgB,IACHsa,EAAe7Y,QAAU,CAAC,EAC1B4Y,EAAwB5Y,QAAU,CAAC,GAErCuY,EAA2BvY,QAAU,CAAC,EACtCyY,EAAezY,QAAU,IAAIyK,IAC7BuO,EAAchZ,SAAU,EACxBoa,GAAgB,CACdP,YAAaA,EAAcK,GAAala,QAAQ6Z,YAAc,EAC9DF,UAASA,GAAUO,GAAala,QAAQ2Z,QACxC7Q,cAAaA,GAAcoR,GAAala,QAAQ8I,YAChDvK,UAASA,GAAU2b,GAAala,QAAQzB,QACxCgF,YAAaA,EAAc2W,GAAala,QAAQuD,YAAc,CAAC,EAC/DuW,QAASA,EAAUI,GAAala,QAAQ8Z,QAAU,CAAC,EACnD1V,OAAQA,EAAS8V,GAAala,QAAQoE,OAAS,CAAC,EAChD2V,cAAc,EACdC,oBAAoB,GACpB,EAEEvM,GAAQ,SAAUnO,GACtB,IAAIwf,EAAiB1hB,UAAUR,OAAS,QAAsBS,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC1F,GAAI8M,GACF,IAAK,MAAMlM,KAASgD,OAAO1B,OAAOK,EAAUK,SAC1C,GAAIhC,EAAO,CACT,MAAM,IACJ1C,EAAG,QACH4C,GACEF,EACE+gB,EAAWjU,GAA0BxP,IAAQK,MAAMC,QAAQsC,GAAWA,EAAQ,GAAG5C,IAAMA,EAC7F,GAAIjB,EAAc0kB,GAChB,IACEA,EAASC,QAAQ,QAAQvR,QACzB,KACY,CAAZ,MAAO9K,GAAK,CAElB,CAGJhD,EAAUK,QAAU,CAAC,EACrB8Y,EAAiB9Y,QAAUgB,OAAOyC,OAAO,CAAC,EAAGnE,GAAUwZ,EAAiB9Y,SACxEV,GAAUmd,GAAoB,IAC9Bzb,OAAO1B,OAAO4Z,EAA2BlZ,SAASoC,SAAQ6c,GAAmBna,GAAWma,IAAoBA,MAC5Gpf,EAAsBG,QAAUiC,EAAmB,CAAC,EAAIkI,GAAY7K,GAAUwZ,EAAiB9Y,SAC/F4e,GAAUE,EACZ,GACA,IAAAI,YAAU,KACR/G,GAAY8B,GAAiBja,QAAQzB,SAAW0e,KAChD9C,GAAYna,QAAUma,GAAYna,UAAYkK,GAAQiQ,GAAYna,QAAUyJ,GAAY9J,EAAW+J,GAA+B,GACjI,CAACA,GAAgCoP,EAAiB9Y,WACrD,IAAAkf,YAAU,IAAM,KACd/E,GAAYna,SAAWma,GAAYna,QAAQmf,aAC3CpG,EAAU/Y,SAAU,EAIpBgB,OAAO1B,OAAOK,EAAUK,SAASoC,SAAQpE,GAAS0L,GAA+B1L,GAAO,IAAM,GAC7F,KACEma,GAAY8B,GAAiBja,QAAQzB,UACxCib,GAAUjb,QAAUqE,EAAUiW,EAAe7Y,QAAS4Y,EAAwB5Y,UAAYe,EAAcmZ,GAAala,QAAQoE,SAE/H,MAAMgb,GAAc,CAClBrD,WACAY,UAAU,IAAAtC,aAAYsC,GAAU,CAACP,GAAkBL,KACnDZ,WAAW,IAAAd,aAAYc,GAAW,IAClClD,UAAU,IAAAoC,aAAYpC,GAAU,CAACa,EAAiB9Y,UAClD+d,YAAY,IAAA1D,aAAY0D,GAAY,IACpCvE,UAAWxO,GAAiB,IAAIC,MAAMuO,GAAW,CAC/Chc,IAAK,CAACC,EAAK4hB,KAMT,GAAIA,KAAQ5hB,EAEV,OADAwc,GAAiBja,QAAQqf,IAAQ,EAC1B5hB,EAAI4hB,EAEG,IAEf7F,IAED8F,IAAU,IAAAC,UAAQ,IAAMve,OAAOyC,OAAO,CAC1CwX,eACAmC,sBACAnb,mBACAmY,mBACA+C,4BACAO,iBACA9S,KAAM0O,EAAQtZ,QACdkY,eAAgB,CACdvP,sBACAC,yBAEFqU,iBAAkB9E,EAAW8E,QAAmB5f,EAChDsC,YACAuZ,6BACAR,oBACAC,6BACAJ,6BACAM,iBACAD,0BACAS,qBACAY,oBACAC,gBACApB,mBACAjZ,wBACA2Y,uBACC4G,KAAc,CAACtG,EAAiB9Y,QAASod,GAAoBnb,EAAkBkb,GAA0BO,KAC5G,OAAO1c,OAAOyC,OAAO,CACnBqa,SACAwB,WACAtK,gBACAvH,OAAO,IAAA4M,aAAY5M,GAAO,IAC1B6P,aAAa,IAAAjD,aAAYiD,GAAa,IACtCE,UAAU,IAAAnD,aAAYmD,GAAU,IAChCpZ,OAAQoV,GAAUpV,QACjBgb,GACL,CKvxC6CI,GACrCC,EAAUlK,GAAe,CAC7B3V,KAAM,UACNuU,OAAQ,UACRT,aAAc,cAOhB,OACE,gBAACgM,GAAW,KACV,gBAACzM,GAAwBwM,EACvB,gBAAC7K,GAAoB,CAACha,SAAUoa,GARpB7X,IAChBsiB,EAAQzK,aAAa,KAAM7X,GAC3BwiB,QAAQC,IAAIziB,EAAK,KAOX,gBAACmW,GAAQ,MAET,gBAACuM,GAAS,KACR,yBAAOC,QAAQ,QAAM,QACrB,yBACE7N,GAAG,OACHrS,KAAK,OACLd,KAAK,OACLxD,IAAK2c,EAAS,CAAE1S,SAAU,uBAE3BnB,EAAOxE,MACN,gBAACmgB,GAAgB,KAAE3b,EAAOxE,KAAKiF,UAInC,gBAACgb,GAAS,KACR,yBAAOC,QAAQ,SAAO,SACtB,yBACE7N,GAAG,QACHrS,KAAK,QACLd,KAAK,OACLxD,IAAK2c,EAAS,CACZ1S,SAAU,qBACVK,QAAS,CACPf,QAAS,sBACTvK,MAAO,gDAIZ8J,EAAO4b,OACN,gBAACD,GAAgB,KAAE3b,EAAO4b,MAAMnb,UAIpC,gBAACgb,GAAS,KACR,yBAAOC,QAAQ,WAAS,gBACxB,4BACE7N,GAAG,UACHrS,KAAK,UACLqgB,KAAK,IACL3kB,IAAK2c,EAAS,CAAE1S,SAAU,0BAE3BnB,EAAOS,SACN,gBAACkb,GAAgB,KAAE3b,EAAOS,QAAQA,UAItC,gBAACqb,GAAmB,KACjBT,EAAQlL,SACP,gBAAC4L,GAAkB,iCAEpBV,EAAQpb,OACP,gBAAC+b,GAAiB,iDAMtB,gBAACC,GAAU,CAACvhB,KAAK,UAAQ,kBAGjB,EAIZ8Y,GAAiB0I,GAAAA,QAAAA,IAAAA,WAAU,4EAAVA,CAAU,oQA0B3BzI,GAAcyI,GAAAA,QAAAA,IAAAA,WAAU,yEAAVA,CAAU,oDAQxBZ,GAAcY,GAAAA,QAAAA,IAAAA,WAAU,yEAAVA,CAAU,2KAUxBT,GAAYS,GAAAA,QAAAA,IAAAA,WAAU,uEAAVA,CAAU,6XA6BtBP,GAAmBO,GAAAA,QAAAA,KAAAA,WAAW,8EAAXA,CAAW,sDAM9BJ,GAAsBI,GAAAA,QAAAA,IAAAA,WAAU,iFAAVA,CAAU,yEAMhCH,GAAqBG,GAAAA,QAAAA,KAAAA,WAAW,gFAAXA,CAAW,kBAIhCF,GAAoBE,GAAAA,QAAAA,KAAAA,WAAW,+EAAXA,CAAW,gBAI/BD,GAAaC,GAAAA,QAAAA,OAAAA,WAAa,wEAAbA,CAAa","sources":["webpack://yonas-dev-log/./node_modules/react-hook-form/dist/index.esm.js","webpack://yonas-dev-log/./node_modules/react-google-recaptcha/lib/esm/recaptcha.js","webpack://yonas-dev-log/./node_modules/react-async-script/lib/esm/async-script-loader.js","webpack://yonas-dev-log/./node_modules/react-google-recaptcha/lib/esm/recaptcha-wrapper.js","webpack://yonas-dev-log/./node_modules/react-netlify-forms/dist/index.modern.js","webpack://yonas-dev-log/./src/templates/contact-template.js"],"sourcesContent":["import { isValidElement, useRef, useState, useCallback, useEffect, useMemo, createContext, useContext, createElement, cloneElement } from 'react';\nvar isHTMLElement = value => value instanceof HTMLElement;\nconst EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input'\n};\nconst VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nconst SELECT = 'select';\nconst UNDEFINED = 'undefined';\nconst INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nfunction attachEventListeners(_ref, shouldAttachChangeEvent, handleChange) {\n  let {\n    ref\n  } = _ref;\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\nvar isNullOrUndefined = value => value == null;\nconst isObjectType = value => typeof value === 'object';\nvar isObject = value => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !(value instanceof Date);\nvar isKey = value => /^\\w*$/.test(value);\nvar compact = value => value.filter(Boolean);\nvar stringToPath = input => compact(input.replace(/[\"|']/g, '').replace(/\\[/g, '.').replace(/\\]/g, '').split('.'));\nfunction set(object, path, value) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\nvar transformToNestObject = function (data) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  for (const key in data) {\n    !isKey(key) ? set(value, key, data[key]) : value[key] = data[key];\n  }\n  return value;\n};\nvar isUndefined = val => val === undefined;\nvar get = function () {\n  let obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let path = arguments.length > 1 ? arguments[1] : undefined;\n  let defaultValue = arguments.length > 2 ? arguments[2] : undefined;\n  const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\nvar focusOnErrorField = (fields, fieldErrors) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n      if (field) {\n        if (field.ref.focus && isUndefined(field.ref.focus())) {\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n          break;\n        }\n      }\n    }\n  }\n};\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\nconst defaultReturn = {\n  isValid: false,\n  value: null\n};\nvar getRadioValue = options => Array.isArray(options) ? options.reduce((previous, option) => option && option.ref.checked ? {\n  isValid: true,\n  value: option.ref.value\n} : previous, defaultReturn) : defaultReturn;\nvar getMultipleSelectValue = options => [...options].filter(_ref2 => {\n  let {\n    selected\n  } = _ref2;\n  return selected;\n}).map(_ref3 => {\n  let {\n    value\n  } = _ref3;\n  return value;\n});\nvar isRadioInput = element => element.type === 'radio';\nvar isFileInput = element => element.type === 'file';\nvar isCheckBoxInput = element => element.type === 'checkbox';\nvar isMultipleSelect = element => element.type === \"\".concat(SELECT, \"-multiple\");\nconst defaultResult = {\n  value: false,\n  isValid: false\n};\nconst validResult = {\n  value: true,\n  isValid: true\n};\nvar getCheckboxValue = options => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options.filter(option => option && option.ref.checked).map(_ref4 => {\n        let {\n          ref: {\n            value\n          }\n        } = _ref4;\n        return value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n    const {\n      checked,\n      value,\n      attributes\n    } = options[0].ref;\n    return checked ? attributes && !isUndefined(attributes.value) ? isUndefined(value) || value === '' ? validResult : {\n      value: value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n  return defaultResult;\n};\nfunction getFieldValue(fieldsRef, name, shallowFieldsStateRef, excludeDisabled, shouldKeepRawValue) {\n  const field = fieldsRef.current[name];\n  if (field) {\n    const {\n      ref: {\n        value,\n        disabled\n      },\n      ref,\n      valueAsNumber,\n      valueAsDate,\n      setValueAs\n    } = field;\n    if (disabled && excludeDisabled) {\n      return;\n    }\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n    if (isCheckBoxInput(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n    return shouldKeepRawValue ? value : valueAsNumber ? value === '' ? NaN : +value : valueAsDate ? ref.valueAsDate : setValueAs ? setValueAs(value) : value;\n  }\n  if (shallowFieldsStateRef) {\n    return get(shallowFieldsStateRef.current, name);\n  }\n}\nfunction isDetached(element) {\n  if (!element) {\n    return true;\n  }\n  if (!(element instanceof HTMLElement) || element.nodeType === Node.DOCUMENT_NODE) {\n    return false;\n  }\n  return isDetached(element.parentNode);\n}\nvar isEmptyObject = value => isObject(value) && !Object.keys(value).length;\nvar isBoolean = value => typeof value === 'boolean';\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nfunction unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n  if (childObject) {\n    delete childObject[key];\n  }\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n    if (k > 0) {\n      previousObjRef = object;\n    }\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n      if (currentPathsLength === index && (isObject(objectRef) && isEmptyObject(objectRef) || Array.isArray(objectRef) && !objectRef.filter(data => isObject(data) && !isEmptyObject(data) || isBoolean(data)).length)) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n      previousObjRef = objectRef;\n    }\n  }\n  return object;\n}\nconst isSameRef = (fieldValue, ref) => fieldValue && fieldValue.ref === ref;\nfunction findRemovedFieldAndRemoveListener(fieldsRef, handleChange, field, shallowFieldsStateRef, shouldUnregister, forceDelete) {\n  const {\n    ref,\n    ref: {\n      name\n    }\n  } = field;\n  const fieldRef = fieldsRef.current[name];\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n    !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\n  }\n  if (!ref.type || !fieldRef) {\n    delete fieldsRef.current[name];\n    return;\n  }\n  if (isRadioInput(ref) || isCheckBoxInput(ref)) {\n    if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\n      compact(fieldRef.options).forEach(function () {\n        let option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let index = arguments.length > 1 ? arguments[1] : undefined;\n        if (isDetached(option.ref) && isSameRef(option, option.ref) || forceDelete) {\n          removeAllEventListeners(option.ref, handleChange);\n          unset(fieldRef.options, \"[\".concat(index, \"]\"));\n        }\n      });\n      if (fieldRef.options && !compact(fieldRef.options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if (isDetached(ref) && isSameRef(fieldRef, ref) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n    delete fieldsRef.current[name];\n  }\n}\nvar isPrimitive = value => isNullOrUndefined(value) || !isObjectType(value);\nfunction deepMerge(target, source) {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n    try {\n      target[key] = isObject(targetValue) && isObject(sourceValue) || Array.isArray(targetValue) && Array.isArray(sourceValue) ? deepMerge(targetValue, sourceValue) : sourceValue;\n    } catch (_a) {}\n  }\n  return target;\n}\nfunction deepEqual(object1, object2, isErrorObject) {\n  if (isPrimitive(object1) || isPrimitive(object2) || object1 instanceof Date || object2 instanceof Date) {\n    return object1 === object2;\n  }\n  if (!isValidElement(object1)) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      const val1 = object1[key];\n      if (!(isErrorObject && key === 'ref')) {\n        const val2 = object2[key];\n        if ((isObject(val1) || Array.isArray(val1)) && (isObject(val2) || Array.isArray(val2)) ? !deepEqual(val1, val2, isErrorObject) : val1 !== val2) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n  let index = -1;\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n      } else {\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key]) ? set(dirtyFields[index] || {}, key) : dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), {\n          [key]: true\n        });\n      }\n    }\n    parentNode && !dirtyFields.length && delete parentNode[parentName];\n  }\n  return dirtyFields;\n}\nvar setFieldArrayDirtyFields = (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\nvar isString = value => typeof value === 'string';\nvar getFieldsValues = (fieldsRef, shallowFieldsState, shouldUnregister, excludeDisabled, search) => {\n  const output = {};\n  for (const name in fieldsRef.current) {\n    if (isUndefined(search) || (isString(search) ? name.startsWith(search) : Array.isArray(search) && search.find(data => name.startsWith(data)))) {\n      output[name] = getFieldValue(fieldsRef, name, undefined, excludeDisabled);\n    }\n  }\n  return shouldUnregister ? transformToNestObject(output) : deepMerge(shallowFieldsState, transformToNestObject(output));\n};\nvar isErrorStateChanged = _ref5 => {\n  let {\n    errors,\n    name,\n    error,\n    validFields,\n    fieldsWithValidation\n  } = _ref5;\n  const isValid = isUndefined(error);\n  const previousError = get(errors, name);\n  return isValid && !!previousError || !isValid && !deepEqual(previousError, error, true) || isValid && get(fieldsWithValidation, name) && !get(validFields, name);\n};\nvar isRegex = value => value instanceof RegExp;\nvar getValueAndMessage = validationData => isObject(validationData) && !isRegex(validationData) ? validationData : {\n  value: validationData,\n  message: ''\n};\nvar isFunction = value => typeof value === 'function';\nvar isMessage = value => isString(value) || isValidElement(value);\nfunction getValidateError(result, ref) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  if (isMessage(result) || isBoolean(result) && !result) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref\n    };\n  }\n}\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? Object.assign(Object.assign({}, errors[name]), {\n  types: Object.assign(Object.assign({}, errors[name] && errors[name].types ? errors[name].types : {}), {\n    [type]: message || true\n  })\n}) : {};\nvar validateField = async (fieldsRef, validateAllFieldCriteria, _ref6, shallowFieldsStateRef) => {\n  let {\n    ref,\n    ref: {\n      value\n    },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate\n  } = _ref6;\n  const name = ref.name;\n  const error = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n  const getMinMaxMessage = function (exceedMax, maxLengthMessage, minLengthMessage) {\n    let maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n    let minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = Object.assign({\n      type: exceedMax ? maxType : minType,\n      message,\n      ref\n    }, exceedMax ? appendErrorsCurry(maxType, message) : appendErrorsCurry(minType, message));\n  };\n  if (required && (!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value)) || isBoolean(value) && !value || isCheckBox && !getCheckboxValue(options).isValid || isRadio && !getRadioValue(options).isValid)) {\n    const {\n      value,\n      message\n    } = isMessage(required) ? {\n      value: !!required,\n      message: required\n    } : getValueAndMessage(required);\n    if (value) {\n      error[name] = Object.assign({\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: isRadioOrCheckbox ? ((fieldsRef.current[name].options || [])[0] || {}).ref : ref\n      }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if ((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && value !== '') {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n    if (!isNaN(value)) {\n      const valueNumber = ref.valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate = ref.valueAsDate || new Date(value);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && value.length > maxLengthOutput.value;\n    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && value.length < minLengthOutput.value;\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if (isString(value) && pattern && !isEmpty) {\n    const {\n      value: patternValue,\n      message\n    } = getValueAndMessage(pattern);\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = Object.assign({\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref\n      }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if (validate) {\n    const fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef, false, true);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n      if (validateError) {\n        error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {};\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(validateResult, validateRef, key);\n        if (validateError) {\n          validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n      if (!isEmptyObject(validationResult)) {\n        error[name] = Object.assign({\n          ref: validateRef\n        }, validationResult);\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n  return error;\n};\nconst getPath = function (rootPath, values) {\n  let paths = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  for (const property in values) {\n    const rootName = rootPath + (isObject(values) ? \".\".concat(property) : \"[\".concat(property, \"]\"));\n    isPrimitive(values[property]) ? paths.push(rootName) : getPath(rootName, values[property], paths);\n  }\n  return paths;\n};\nvar assignWatchFields = (fieldValues, fieldName, watchFields, inputValue, isSingleField) => {\n  let value = undefined;\n  watchFields.add(fieldName);\n  if (!isEmptyObject(fieldValues)) {\n    value = get(fieldValues, fieldName);\n    if (isObject(value) || Array.isArray(value)) {\n      getPath(fieldName, value).forEach(name => watchFields.add(name));\n    }\n  }\n  return isUndefined(value) ? isSingleField ? inputValue : get(inputValue, fieldName) : value;\n};\nvar skipValidation = _ref7 => {\n  let {\n    isOnBlur,\n    isOnChange,\n    isOnTouch,\n    isTouched,\n    isReValidateOnBlur,\n    isReValidateOnChange,\n    isBlurEvent,\n    isSubmitted,\n    isOnAll\n  } = _ref7;\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\nvar getFieldArrayParentName = name => name.substring(0, name.indexOf('['));\nconst isMatchFieldArrayName = (name, searchName) => RegExp(\"^\".concat(searchName, \"([|.)\\\\d+\").replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(name);\nvar isNameInFieldArray = (names, name) => [...names].some(current => isMatchFieldArrayName(name, current));\nvar isSelectInput = element => element.type === \"\".concat(SELECT, \"-one\");\nfunction onDomRemove(fieldsRef, removeFieldEventListenerAndRef) {\n  const observer = new MutationObserver(() => {\n    for (const field of Object.values(fieldsRef.current)) {\n      if (field && field.options) {\n        for (const option of field.options) {\n          if (option && option.ref && isDetached(option.ref)) {\n            removeFieldEventListenerAndRef(field);\n          }\n        }\n      } else if (field && isDetached(field.ref)) {\n        removeFieldEventListenerAndRef(field);\n      }\n    }\n  });\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar isWeb = typeof window !== UNDEFINED && typeof document !== UNDEFINED;\nfunction cloneObject(data) {\n  var _a;\n  let copy;\n  if (isPrimitive(data) || isWeb && (data instanceof File || isHTMLElement(data))) {\n    return data;\n  }\n  if (!['Set', 'Map', 'Object', 'Date', 'Array'].includes((_a = data.constructor) === null || _a === void 0 ? void 0 : _a.name)) {\n    return data;\n  }\n  if (data instanceof Date) {\n    copy = new Date(data.getTime());\n    return copy;\n  }\n  if (data instanceof Set) {\n    copy = new Set();\n    for (const item of data) {\n      copy.add(item);\n    }\n    return copy;\n  }\n  if (data instanceof Map) {\n    copy = new Map();\n    for (const key of data.keys()) {\n      copy.set(key, cloneObject(data.get(key)));\n    }\n    return copy;\n  }\n  copy = Array.isArray(data) ? [] : {};\n  for (const key in data) {\n    copy[key] = cloneObject(data[key]);\n  }\n  return copy;\n}\nvar modeChecker = mode => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched\n});\nvar isRadioOrCheckboxFunction = ref => isRadioInput(ref) || isCheckBoxInput(ref);\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\nfunction useForm() {\n  let {\n    mode = VALIDATION_MODE.onSubmit,\n    reValidateMode = VALIDATION_MODE.onChange,\n    resolver,\n    context,\n    defaultValues = {},\n    shouldFocusError = true,\n    shouldUnregister = true,\n    criteriaMode\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const fieldsRef = useRef({});\n  const fieldArrayDefaultValuesRef = useRef({});\n  const fieldArrayValuesRef = useRef({});\n  const watchFieldsRef = useRef(new Set());\n  const useWatchFieldsRef = useRef({});\n  const useWatchRenderFunctionsRef = useRef({});\n  const fieldsWithValidationRef = useRef({});\n  const validFieldsRef = useRef({});\n  const defaultValuesRef = useRef(defaultValues);\n  const isUnMount = useRef(false);\n  const isWatchAllRef = useRef(false);\n  const handleChangeRef = useRef();\n  const shallowFieldsStateRef = useRef({});\n  const resetFieldArrayFunctionRef = useRef({});\n  const contextRef = useRef(context);\n  const resolverRef = useRef(resolver);\n  const fieldArrayNamesRef = useRef(new Set());\n  const modeRef = useRef(modeChecker(mode));\n  const {\n    isOnSubmit,\n    isOnTouch\n  } = modeRef.current;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const [formState, setFormState] = useState({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touched: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: !isOnSubmit,\n    errors: {}\n  });\n  const readFormStateRef = useRef({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isValidating: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled\n  });\n  const formStateRef = useRef(formState);\n  const observerRef = useRef();\n  const {\n    isOnBlur: isReValidateOnBlur,\n    isOnChange: isReValidateOnChange\n  } = useRef(modeChecker(reValidateMode)).current;\n  contextRef.current = context;\n  resolverRef.current = resolver;\n  formStateRef.current = formState;\n  shallowFieldsStateRef.current = shouldUnregister ? {} : isEmptyObject(shallowFieldsStateRef.current) ? cloneObject(defaultValues) : shallowFieldsStateRef.current;\n  const updateFormState = useCallback(function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!isUnMount.current) {\n      formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), state);\n      setFormState(formStateRef.current);\n    }\n  }, []);\n  const updateIsValidating = () => readFormStateRef.current.isValidating && updateFormState({\n    isValidating: true\n  });\n  const shouldRenderBaseOnError = useCallback(function (name, error) {\n    let shouldRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let isValid = arguments.length > 4 ? arguments[4] : undefined;\n    let shouldReRender = shouldRender || isErrorStateChanged({\n      errors: formStateRef.current.errors,\n      error,\n      name,\n      validFields: validFieldsRef.current,\n      fieldsWithValidation: fieldsWithValidationRef.current\n    });\n    const previousError = get(formStateRef.current.errors, name);\n    if (error) {\n      unset(validFieldsRef.current, name);\n      shouldReRender = shouldReRender || !previousError || !deepEqual(previousError, error, true);\n      set(formStateRef.current.errors, name, error);\n    } else {\n      if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n        set(validFieldsRef.current, name, true);\n        shouldReRender = shouldReRender || previousError;\n      }\n      unset(formStateRef.current.errors, name);\n    }\n    if (shouldReRender && !isNullOrUndefined(shouldRender) || !isEmptyObject(state) || readFormStateRef.current.isValidating) {\n      updateFormState(Object.assign(Object.assign(Object.assign({}, state), resolverRef.current ? {\n        isValid: !!isValid\n      } : {}), {\n        isValidating: false\n      }));\n    }\n  }, []);\n  const setFieldValue = useCallback((name, rawValue) => {\n    const {\n      ref,\n      options\n    } = fieldsRef.current[name];\n    const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue) ? '' : rawValue;\n    if (isRadioInput(ref)) {\n      (options || []).forEach(_ref8 => {\n        let {\n          ref: radioRef\n        } = _ref8;\n        return radioRef.checked = radioRef.value === value;\n      });\n    } else if (isFileInput(ref) && !isString(value)) {\n      ref.files = value;\n    } else if (isMultipleSelect(ref)) {\n      [...ref.options].forEach(selectRef => selectRef.selected = value.includes(selectRef.value));\n    } else if (isCheckBoxInput(ref) && options) {\n      options.length > 1 ? options.forEach(_ref9 => {\n        let {\n          ref: checkboxRef\n        } = _ref9;\n        return checkboxRef.checked = Array.isArray(value) ? !!value.find(data => data === checkboxRef.value) : value === checkboxRef.value;\n      }) : options[0].ref.checked = !!value;\n    } else {\n      ref.value = value;\n    }\n  }, []);\n  const isFormDirty = useCallback((name, data) => {\n    if (readFormStateRef.current.isDirty) {\n      const formValues = getValues();\n      name && data && set(formValues, name, data);\n      return !deepEqual(formValues, defaultValuesRef.current);\n    }\n    return false;\n  }, []);\n  const updateAndGetDirtyState = useCallback(function (name) {\n    let shouldRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) {\n      const isFieldDirty = !deepEqual(get(defaultValuesRef.current, name), getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\n      const previousIsDirty = formStateRef.current.isDirty;\n      isFieldDirty ? set(formStateRef.current.dirtyFields, name, true) : unset(formStateRef.current.dirtyFields, name);\n      const state = {\n        isDirty: isFormDirty(),\n        dirtyFields: formStateRef.current.dirtyFields\n      };\n      const isChanged = readFormStateRef.current.isDirty && previousIsDirty !== state.isDirty || readFormStateRef.current.dirtyFields && isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name);\n      isChanged && shouldRender && updateFormState(state);\n      return isChanged ? state : {};\n    }\n    return {};\n  }, []);\n  const executeValidation = useCallback(async (name, skipReRender) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!fieldsRef.current[name]) {\n        console.warn('📋 Field is missing with `name` attribute: ', name);\n        return false;\n      }\n    }\n    const error = (await validateField(fieldsRef, isValidateAllFieldCriteria, fieldsRef.current[name], shallowFieldsStateRef))[name];\n    shouldRenderBaseOnError(name, error, skipReRender);\n    return isUndefined(error);\n  }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\n  const executeSchemaOrResolverValidation = useCallback(async names => {\n    const {\n      errors\n    } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\n    const previousFormIsValid = formStateRef.current.isValid;\n    if (Array.isArray(names)) {\n      const isInputsValid = names.map(name => {\n        const error = get(errors, name);\n        error ? set(formStateRef.current.errors, name, error) : unset(formStateRef.current.errors, name);\n        return !error;\n      }).every(Boolean);\n      updateFormState({\n        isValid: isEmptyObject(errors),\n        isValidating: false\n      });\n      return isInputsValid;\n    } else {\n      const error = get(errors, names);\n      shouldRenderBaseOnError(names, error, previousFormIsValid !== isEmptyObject(errors), {}, isEmptyObject(errors));\n      return !error;\n    }\n  }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\n  const trigger = useCallback(async name => {\n    const fields = name || Object.keys(fieldsRef.current);\n    updateIsValidating();\n    if (resolverRef.current) {\n      return executeSchemaOrResolverValidation(fields);\n    }\n    if (Array.isArray(fields)) {\n      !name && (formStateRef.current.errors = {});\n      const result = await Promise.all(fields.map(async data => await executeValidation(data, null)));\n      updateFormState({\n        isValidating: false\n      });\n      return result.every(Boolean);\n    }\n    return await executeValidation(fields);\n  }, [executeSchemaOrResolverValidation, executeValidation]);\n  const setInternalValues = useCallback((name, value, _ref10) => {\n    let {\n      shouldDirty,\n      shouldValidate\n    } = _ref10;\n    const data = {};\n    set(data, name, value);\n    for (const fieldName of getPath(name, value)) {\n      if (fieldsRef.current[fieldName]) {\n        setFieldValue(fieldName, get(data, fieldName));\n        shouldDirty && updateAndGetDirtyState(fieldName);\n        shouldValidate && trigger(fieldName);\n      }\n    }\n  }, [trigger, setFieldValue, updateAndGetDirtyState]);\n  const setInternalValue = useCallback((name, value, config) => {\n    !shouldUnregister && !isPrimitive(value) && set(shallowFieldsStateRef.current, name, Array.isArray(value) ? [...value] : Object.assign({}, value));\n    if (fieldsRef.current[name]) {\n      setFieldValue(name, value);\n      config.shouldDirty && updateAndGetDirtyState(name);\n      config.shouldValidate && trigger(name);\n    } else if (!isPrimitive(value)) {\n      setInternalValues(name, value, config);\n      if (fieldArrayNamesRef.current.has(name)) {\n        const parentName = getFieldArrayParentName(name) || name;\n        set(fieldArrayDefaultValuesRef.current, name, value);\n        resetFieldArrayFunctionRef.current[parentName]({\n          [parentName]: get(fieldArrayDefaultValuesRef.current, parentName)\n        });\n        if ((readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) && config.shouldDirty) {\n          set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\n          updateFormState({\n            isDirty: !deepEqual(Object.assign(Object.assign({}, getValues()), {\n              [name]: value\n            }), defaultValuesRef.current)\n          });\n        }\n      }\n    }\n    !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\n  }, [updateAndGetDirtyState, setFieldValue, setInternalValues]);\n  const isFieldWatched = name => isWatchAllRef.current || watchFieldsRef.current.has(name) || watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n  const renderWatchedInputs = name => {\n    let found = true;\n    if (!isEmptyObject(useWatchFieldsRef.current)) {\n      for (const key in useWatchFieldsRef.current) {\n        if (!name || !useWatchFieldsRef.current[key].size || useWatchFieldsRef.current[key].has(name) || useWatchFieldsRef.current[key].has(getFieldArrayParentName(name))) {\n          useWatchRenderFunctionsRef.current[key]();\n          found = false;\n        }\n      }\n    }\n    return found;\n  };\n  function setValue(name, value, config) {\n    setInternalValue(name, value, config || {});\n    isFieldWatched(name) && updateFormState();\n    renderWatchedInputs(name);\n  }\n  handleChangeRef.current = handleChangeRef.current ? handleChangeRef.current : async _ref11 => {\n    let {\n      type,\n      target\n    } = _ref11;\n    let name = target.name;\n    const field = fieldsRef.current[name];\n    let error;\n    let isValid;\n    if (field) {\n      const isBlurEvent = type === EVENTS.BLUR;\n      const shouldSkipValidation = skipValidation(Object.assign({\n        isBlurEvent,\n        isReValidateOnChange,\n        isReValidateOnBlur,\n        isTouched: !!get(formStateRef.current.touched, name),\n        isSubmitted: formStateRef.current.isSubmitted\n      }, modeRef.current));\n      let state = updateAndGetDirtyState(name, false);\n      let shouldRender = !isEmptyObject(state) || !isBlurEvent && isFieldWatched(name);\n      if (isBlurEvent && !get(formStateRef.current.touched, name) && readFormStateRef.current.touched) {\n        set(formStateRef.current.touched, name, true);\n        state = Object.assign(Object.assign({}, state), {\n          touched: formStateRef.current.touched\n        });\n      }\n      if (!shouldUnregister && isCheckBoxInput(target)) {\n        set(shallowFieldsStateRef.current, name, getFieldValue(fieldsRef, name));\n      }\n      if (shouldSkipValidation) {\n        !isBlurEvent && renderWatchedInputs(name);\n        return (!isEmptyObject(state) || shouldRender && isEmptyObject(state)) && updateFormState(state);\n      }\n      updateIsValidating();\n      if (resolverRef.current) {\n        const {\n          errors\n        } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\n        const previousFormIsValid = formStateRef.current.isValid;\n        error = get(errors, name);\n        if (isCheckBoxInput(target) && !error && resolverRef.current) {\n          const parentNodeName = getFieldArrayParentName(name);\n          const currentError = get(errors, parentNodeName, {});\n          currentError.type && currentError.message && (error = currentError);\n          if (parentNodeName && (currentError || get(formStateRef.current.errors, parentNodeName))) {\n            name = parentNodeName;\n          }\n        }\n        isValid = isEmptyObject(errors);\n        previousFormIsValid !== isValid && (shouldRender = true);\n      } else {\n        error = (await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef))[name];\n      }\n      !isBlurEvent && renderWatchedInputs(name);\n      shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n    }\n  };\n  function setFieldArrayDefaultValues(data) {\n    if (!shouldUnregister) {\n      let copy = cloneObject(data);\n      for (const value of fieldArrayNamesRef.current) {\n        if (isKey(value) && !copy[value]) {\n          copy = Object.assign(Object.assign({}, copy), {\n            [value]: []\n          });\n        }\n      }\n      return copy;\n    }\n    return data;\n  }\n  function getValues(payload) {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\n    }\n    if (Array.isArray(payload)) {\n      const data = {};\n      for (const name of payload) {\n        set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      }\n      return data;\n    }\n    return setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister));\n  }\n  const validateResolver = useCallback(async function () {\n    let values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newDefaultValues = isEmptyObject(fieldsRef.current) ? defaultValuesRef.current : {};\n    const {\n      errors\n    } = (await resolverRef.current(Object.assign(Object.assign(Object.assign({}, newDefaultValues), getValues()), values), contextRef.current, isValidateAllFieldCriteria)) || {};\n    const isValid = isEmptyObject(errors);\n    formStateRef.current.isValid !== isValid && updateFormState({\n      isValid\n    });\n  }, [isValidateAllFieldCriteria]);\n  const removeFieldEventListener = useCallback((field, forceDelete) => {\n    findRemovedFieldAndRemoveListener(fieldsRef, handleChangeRef.current, field, shallowFieldsStateRef, shouldUnregister, forceDelete);\n    if (shouldUnregister) {\n      unset(validFieldsRef.current, field.ref.name);\n      unset(fieldsWithValidationRef.current, field.ref.name);\n    }\n  }, [shouldUnregister]);\n  const updateWatchedValue = useCallback(name => {\n    if (isWatchAllRef.current) {\n      updateFormState();\n    } else {\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          updateFormState();\n          break;\n        }\n      }\n      renderWatchedInputs(name);\n    }\n  }, []);\n  const removeFieldEventListenerAndRef = useCallback((field, forceDelete) => {\n    if (field) {\n      removeFieldEventListener(field, forceDelete);\n      if (shouldUnregister && !compact(field.options || []).length) {\n        unset(formStateRef.current.errors, field.ref.name);\n        set(formStateRef.current.dirtyFields, field.ref.name, true);\n        updateFormState({\n          isDirty: isFormDirty()\n        });\n        readFormStateRef.current.isValid && resolverRef.current && validateResolver();\n        updateWatchedValue(field.ref.name);\n      }\n    }\n  }, [validateResolver, removeFieldEventListener]);\n  function clearErrors(name) {\n    name && (Array.isArray(name) ? name : [name]).forEach(inputName => fieldsRef.current[inputName] && isKey(inputName) ? delete formStateRef.current.errors[inputName] : unset(formStateRef.current.errors, inputName));\n    updateFormState({\n      errors: name ? formStateRef.current.errors : {}\n    });\n  }\n  function setError(name, error) {\n    const ref = (fieldsRef.current[name] || {}).ref;\n    set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), {\n      ref\n    }));\n    updateFormState({\n      isValid: false\n    });\n    error.shouldFocus && ref && ref.focus && ref.focus();\n  }\n  const watchInternal = useCallback((fieldNames, defaultValue, watchId) => {\n    const watchFields = watchId ? useWatchFieldsRef.current[watchId] : watchFieldsRef.current;\n    let fieldValues = getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, false, fieldNames);\n    if (isString(fieldNames)) {\n      const parentNodeName = getFieldArrayParentName(fieldNames) || fieldNames;\n      if (fieldArrayNamesRef.current.has(parentNodeName)) {\n        fieldValues = Object.assign(Object.assign({}, fieldArrayValuesRef.current), fieldValues);\n      }\n      return assignWatchFields(fieldValues, fieldNames, watchFields, isUndefined(get(defaultValuesRef.current, fieldNames)) ? defaultValue : get(defaultValuesRef.current, fieldNames), true);\n    }\n    const combinedDefaultValues = isUndefined(defaultValue) ? defaultValuesRef.current : defaultValue;\n    if (Array.isArray(fieldNames)) {\n      return fieldNames.reduce((previous, name) => Object.assign(Object.assign({}, previous), {\n        [name]: assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues)\n      }), {});\n    }\n    isWatchAllRef.current = isUndefined(watchId);\n    return transformToNestObject(!isEmptyObject(fieldValues) && fieldValues || combinedDefaultValues);\n  }, []);\n  function watch(fieldNames, defaultValue) {\n    return watchInternal(fieldNames, defaultValue);\n  }\n  function unregister(name) {\n    for (const fieldName of Array.isArray(name) ? name : [name]) {\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\n    }\n  }\n  function registerFieldRef(ref) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute', ref, \"https://react-hook-form.com/api#useForm\");\n      }\n      if (fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) && !RegExp(\"^\".concat(ref.name.split(/\\[\\d+\\]$/)[0], \"[\\\\d+].\\\\w+\").replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(ref.name)) {\n        return console.warn('📋 `name` prop should be in object shape: name=\"test[index].name\"', ref, 'https://react-hook-form.com/api#useFieldArray');\n      }\n    }\n    const {\n      name,\n      type,\n      value\n    } = ref;\n    const fieldRefAndValidationOptions = Object.assign({\n      ref\n    }, options);\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    const compareRef = currentRef => isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name];\n    let isEmptyDefaultValue = true;\n    let defaultValue;\n    if (field && (isRadioOrCheckbox ? Array.isArray(field.options) && compact(field.options).find(option => {\n      return value === option.ref.value && compareRef(option.ref);\n    }) : compareRef(field.ref))) {\n      fields[name] = Object.assign(Object.assign({}, field), options);\n      return;\n    }\n    if (type) {\n      field = isRadioOrCheckbox ? Object.assign({\n        options: [...compact(field && field.options || []), {\n          ref\n        }],\n        ref: {\n          type,\n          name\n        }\n      }, options) : Object.assign({}, fieldRefAndValidationOptions);\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n    fields[name] = field;\n    const isEmptyUnmountFields = isUndefined(get(shallowFieldsStateRef.current, name));\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(isEmptyUnmountFields ? defaultValuesRef.current : shallowFieldsStateRef.current, name);\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(name, defaultValue);\n      }\n    }\n    if (!isEmptyObject(options)) {\n      set(fieldsWithValidationRef.current, name, true);\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef).then(error => {\n          const previousFormIsValid = formStateRef.current.isValid;\n          isEmptyObject(error) ? set(validFieldsRef.current, name, true) : unset(validFieldsRef.current, name);\n          previousFormIsValid !== isEmptyObject(error) && updateFormState();\n        });\n      }\n    }\n    if (shouldUnregister && !(isFieldArray && isEmptyDefaultValue)) {\n      !isFieldArray && unset(formStateRef.current.dirtyFields, name);\n    }\n    if (type) {\n      attachEventListeners(isRadioOrCheckbox && field.options ? field.options[field.options.length - 1] : field, isRadioOrCheckbox || isSelectInput(ref), handleChangeRef.current);\n    }\n  }\n  function register(refOrRegisterOptions, options) {\n    if (!isWindowUndefined) {\n      if (isString(refOrRegisterOptions)) {\n        registerFieldRef({\n          name: refOrRegisterOptions\n        }, options);\n      } else if (isObject(refOrRegisterOptions) && 'name' in refOrRegisterOptions) {\n        registerFieldRef(refOrRegisterOptions, options);\n      } else {\n        return ref => ref && registerFieldRef(ref, refOrRegisterOptions);\n      }\n    }\n  }\n  const handleSubmit = useCallback((onValid, onInvalid) => async e => {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n      e.persist();\n    }\n    let fieldErrors = {};\n    let fieldValues = setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, true));\n    readFormStateRef.current.isSubmitting && updateFormState({\n      isSubmitting: true\n    });\n    try {\n      if (resolverRef.current) {\n        const {\n          errors,\n          values\n        } = await resolverRef.current(fieldValues, contextRef.current, isValidateAllFieldCriteria);\n        formStateRef.current.errors = fieldErrors = errors;\n        fieldValues = values;\n      } else {\n        for (const field of Object.values(fieldsRef.current)) {\n          if (field) {\n            const {\n              name\n            } = field.ref;\n            const fieldError = await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef);\n            if (fieldError[name]) {\n              set(fieldErrors, name, fieldError[name]);\n              unset(validFieldsRef.current, name);\n            } else if (get(fieldsWithValidationRef.current, name)) {\n              unset(formStateRef.current.errors, name);\n              set(validFieldsRef.current, name, true);\n            }\n          }\n        }\n      }\n      if (isEmptyObject(fieldErrors) && Object.keys(formStateRef.current.errors).every(name => name in fieldsRef.current)) {\n        updateFormState({\n          errors: {},\n          isSubmitting: true\n        });\n        await onValid(fieldValues, e);\n      } else {\n        formStateRef.current.errors = Object.assign(Object.assign({}, formStateRef.current.errors), fieldErrors);\n        onInvalid && (await onInvalid(formStateRef.current.errors, e));\n        shouldFocusError && focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\n      }\n    } finally {\n      formStateRef.current.isSubmitting = false;\n      updateFormState({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\n        submitCount: formStateRef.current.submitCount + 1\n      });\n    }\n  }, [shouldFocusError, isValidateAllFieldCriteria]);\n  const resetRefs = _ref12 => {\n    let {\n      errors,\n      isDirty,\n      isSubmitted,\n      touched,\n      isValid,\n      submitCount,\n      dirtyFields\n    } = _ref12;\n    if (!isValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n    fieldArrayDefaultValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n    updateFormState({\n      submitCount: submitCount ? formStateRef.current.submitCount : 0,\n      isDirty: isDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\n      isValid: isValid ? formStateRef.current.isValid : false,\n      dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\n      touched: touched ? formStateRef.current.touched : {},\n      errors: errors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n  const reset = function (values) {\n    let omitResetState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const {\n            ref,\n            options\n          } = field;\n          const inputRef = isRadioOrCheckboxFunction(ref) && Array.isArray(options) ? options[0].ref : ref;\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form').reset();\n              break;\n            } catch (_a) {}\n          }\n        }\n      }\n    }\n    fieldsRef.current = {};\n    defaultValuesRef.current = Object.assign({}, values || defaultValuesRef.current);\n    values && renderWatchedInputs('');\n    Object.values(resetFieldArrayFunctionRef.current).forEach(resetFieldArray => isFunction(resetFieldArray) && resetFieldArray());\n    shallowFieldsStateRef.current = shouldUnregister ? {} : cloneObject(values || defaultValuesRef.current);\n    resetRefs(omitResetState);\n  };\n  useEffect(() => {\n    resolver && readFormStateRef.current.isValid && validateResolver();\n    observerRef.current = observerRef.current || !isWeb ? observerRef.current : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\n  }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\n  useEffect(() => () => {\n    observerRef.current && observerRef.current.disconnect();\n    isUnMount.current = true;\n    if (process.env.NODE_ENV !== 'production') {\n      return;\n    }\n    Object.values(fieldsRef.current).forEach(field => removeFieldEventListenerAndRef(field, true));\n  }, []);\n  if (!resolver && readFormStateRef.current.isValid) {\n    formState.isValid = deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) && isEmptyObject(formStateRef.current.errors);\n  }\n  const commonProps = {\n    trigger,\n    setValue: useCallback(setValue, [setInternalValue, trigger]),\n    getValues: useCallback(getValues, []),\n    register: useCallback(register, [defaultValuesRef.current]),\n    unregister: useCallback(unregister, []),\n    formState: isProxyEnabled ? new Proxy(formState, {\n      get: (obj, prop) => {\n        if (process.env.NODE_ENV !== 'production') {\n          if (prop === 'isValid' && isOnSubmit) {\n            console.warn('📋 `formState.isValid` is applicable with `onTouched`, `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState');\n          }\n        }\n        if (prop in obj) {\n          readFormStateRef.current[prop] = true;\n          return obj[prop];\n        }\n        return undefined;\n      }\n    }) : formState\n  };\n  const control = useMemo(() => Object.assign({\n    isFormDirty,\n    updateWatchedValue,\n    shouldUnregister,\n    updateFormState,\n    removeFieldEventListener,\n    watchInternal,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange\n    },\n    validateResolver: resolver ? validateResolver : undefined,\n    fieldsRef,\n    resetFieldArrayFunctionRef,\n    useWatchFieldsRef,\n    useWatchRenderFunctionsRef,\n    fieldArrayDefaultValuesRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    readFormStateRef,\n    formStateRef,\n    defaultValuesRef,\n    shallowFieldsStateRef,\n    fieldArrayValuesRef\n  }, commonProps), [defaultValuesRef.current, updateWatchedValue, shouldUnregister, removeFieldEventListener, watchInternal]);\n  return Object.assign({\n    watch,\n    control,\n    handleSubmit,\n    reset: useCallback(reset, []),\n    clearErrors: useCallback(clearErrors, []),\n    setError: useCallback(setError, []),\n    errors: formState.errors\n  }, commonProps);\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nconst FormContext = createContext(null);\nFormContext.displayName = 'RHFContext';\nconst useFormContext = () => useContext(FormContext);\nconst FormProvider = _a => {\n  var {\n      children\n    } = _a,\n    props = __rest(_a, [\"children\"]);\n  return createElement(FormContext.Provider, {\n    value: Object.assign({}, props)\n  }, children);\n};\nvar generateId = () => {\n  const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n  return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index) ? [] : removeAtIndexes(data, (Array.isArray(index) ? index : [index]).sort((a, b) => a - b));\nvar moveArrayAt = (data, from, to) => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n  return [];\n};\nvar swapArrayAt = (data, indexA, indexB) => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\nfunction prepend(data, value) {\n  return [...(Array.isArray(value) ? value : [value || undefined]), ...data];\n}\nfunction insert(data, index, value) {\n  return [...data.slice(0, index), ...(Array.isArray(value) ? value : [value || undefined]), ...data.slice(index)];\n}\nvar fillEmptyArray = value => Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\nvar fillBooleanArray = value => (Array.isArray(value) ? value : [value]).map(data => {\n  if (isObject(data)) {\n    const object = {};\n    for (const key in data) {\n      object[key] = true;\n    }\n    return object;\n  }\n  return true;\n});\nconst mapIds = function () {\n  let values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let keyName = arguments.length > 1 ? arguments[1] : undefined;\n  let skipWarn = arguments.length > 2 ? arguments[2] : undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!skipWarn) {\n      for (const value of values) {\n        if (typeof value === 'object') {\n          if (keyName in value) {\n            console.warn(\"\\uD83D\\uDCCB useFieldArray fieldValues contain the keyName `\".concat(keyName, \"` which is reserved for use by useFieldArray. https://react-hook-form.com/api#useFieldArray\"));\n            break;\n          }\n        } else {\n          console.warn(\"\\uD83D\\uDCCB useFieldArray input's name should be in object shape instead of flat array. https://react-hook-form.com/api#useFieldArray\");\n          break;\n        }\n      }\n    }\n  }\n  return values.map(value => Object.assign({\n    [keyName]: value[keyName] || generateId()\n  }, value));\n};\nconst useFieldArray = _ref13 => {\n  let {\n    control,\n    name,\n    keyName = 'id'\n  } = _ref13;\n  const methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useFieldArray is missing `control` prop. https://react-hook-form.com/api#useFieldArray');\n    }\n  }\n  const focusIndexRef = useRef(-1);\n  const isUnMount = useRef(false);\n  const {\n    isFormDirty,\n    updateWatchedValue,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    formStateRef,\n    shallowFieldsStateRef,\n    updateFormState,\n    readFormStateRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValuesRef,\n    validateResolver,\n    getValues,\n    shouldUnregister,\n    fieldArrayValuesRef\n  } = control || methods.control;\n  const getDefaultValues = values => get(shouldUnregister ? values : shallowFieldsStateRef.current, name, []);\n  const fieldArrayParentName = getFieldArrayParentName(name);\n  const memoizedDefaultValues = useRef([...(get(fieldArrayDefaultValuesRef.current, fieldArrayParentName) ? getDefaultValues(fieldArrayDefaultValuesRef.current) : getDefaultValues(defaultValuesRef.current))]);\n  const [fields, setFields] = useState(mapIds(memoizedDefaultValues.current, keyName));\n  set(fieldArrayValuesRef.current, name, compact(fields));\n  const omitKey = fields => fields.map(function () {\n    let _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _b = keyName,\n      omitted = _a[_b],\n      rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n    return rest;\n  });\n  fieldArrayNamesRef.current.add(name);\n  const getFieldArrayValue = useCallback(() => get(fieldArrayValuesRef.current, name, []), [name]);\n  const getCurrentFieldsValues = () => mapIds(get(getValues(), name, getFieldArrayValue()).map((item, index) => Object.assign(Object.assign({}, getFieldArrayValue()[index]), item)), keyName, true);\n  fieldArrayNamesRef.current.add(name);\n  if (fieldArrayParentName && !get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)) {\n    set(fieldArrayDefaultValuesRef.current, fieldArrayParentName, cloneObject(get(defaultValuesRef.current, fieldArrayParentName)));\n  }\n  const setFieldAndValidState = fieldsValues => {\n    setFields(fieldsValues);\n    set(fieldArrayValuesRef.current, name, fieldsValues);\n    if (readFormStateRef.current.isValid && validateResolver) {\n      const values = getValues();\n      set(values, name, fieldsValues);\n      validateResolver(values);\n    }\n  };\n  const resetFields = () => {\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name)) {\n        removeFieldEventListener(fieldsRef.current[key], true);\n        delete fieldsRef.current[key];\n      }\n    }\n  };\n  const cleanup = ref => !compact(get(ref, name, [])).length && unset(ref, name);\n  const updateDirtyFieldsWithDefaultValues = updatedFieldArrayValues => {\n    if (updatedFieldArrayValues) {\n      set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\n    }\n  };\n  const batchStateUpdate = function (method, args, updatedFieldValues) {\n    let updatedFormValues = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let shouldSet = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let shouldUpdateValid = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    if (get(shallowFieldsStateRef.current, name)) {\n      const output = method(get(shallowFieldsStateRef.current, name), args.argA, args.argB);\n      shouldSet && set(shallowFieldsStateRef.current, name, output);\n    }\n    if (get(fieldArrayDefaultValuesRef.current, name)) {\n      const output = method(get(fieldArrayDefaultValuesRef.current, name), args.argA, args.argB);\n      shouldSet && set(fieldArrayDefaultValuesRef.current, name, output);\n    }\n    if (Array.isArray(get(formStateRef.current.errors, name))) {\n      const output = method(get(formStateRef.current.errors, name), args.argA, args.argB);\n      shouldSet && set(formStateRef.current.errors, name, output);\n      cleanup(formStateRef.current.errors);\n    }\n    if (readFormStateRef.current.touched && get(formStateRef.current.touched, name)) {\n      const output = method(get(formStateRef.current.touched, name), args.argA, args.argB);\n      shouldSet && set(formStateRef.current.touched, name, output);\n      cleanup(formStateRef.current.touched);\n    }\n    if (readFormStateRef.current.dirtyFields || readFormStateRef.current.isDirty) {\n      set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFormValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\n      updateDirtyFieldsWithDefaultValues(updatedFieldValues);\n      cleanup(formStateRef.current.dirtyFields);\n    }\n    if (shouldUpdateValid && readFormStateRef.current.isValid && !validateResolver) {\n      set(validFieldsRef.current, name, method(get(validFieldsRef.current, name, []), args.argA));\n      cleanup(validFieldsRef.current);\n      set(fieldsWithValidationRef.current, name, method(get(fieldsWithValidationRef.current, name, []), args.argA));\n      cleanup(fieldsWithValidationRef.current);\n    }\n    if (!isUnMount.current && readFormStateRef.current.isDirty) {\n      updateFormState({\n        isDirty: isFormDirty(name, omitKey(updatedFormValues))\n      });\n    }\n  };\n  const append = function (value) {\n    let shouldFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const appendValue = Array.isArray(value) ? value : [value];\n    const updateFormValues = [...getCurrentFieldsValues(), ...mapIds(appendValue, keyName)];\n    setFieldAndValidState(updateFormValues);\n    if (readFormStateRef.current.dirtyFields || readFormStateRef.current.isDirty) {\n      updateDirtyFieldsWithDefaultValues(updateFormValues);\n      updateFormState({\n        isDirty: true,\n        dirtyFields: formStateRef.current.dirtyFields\n      });\n    }\n    !shouldUnregister && set(shallowFieldsStateRef.current, name, [...(get(shallowFieldsStateRef.current, name) || []), ...cloneObject(appendValue)]);\n    focusIndexRef.current = shouldFocus ? get(fieldArrayValuesRef.current, name).length - 1 : -1;\n  };\n  const prepend$1 = function (value) {\n    let shouldFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const emptyArray = fillEmptyArray(value);\n    const updatedFieldArrayValues = prepend(getCurrentFieldsValues(), mapIds(Array.isArray(value) ? value : [value], keyName));\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(prepend, {\n      argA: emptyArray,\n      argC: fillBooleanArray(value)\n    }, updatedFieldArrayValues);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n  const remove = index => {\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldValues = removeArrayAt(fieldValues, index);\n    setFieldAndValidState(updatedFieldValues);\n    resetFields();\n    batchStateUpdate(removeArrayAt, {\n      argA: index,\n      argC: index\n    }, updatedFieldValues, removeArrayAt(fieldValues, index), true, true);\n  };\n  const insert$1 = function (index, value) {\n    let shouldFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const emptyArray = fillEmptyArray(value);\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldArrayValues = insert(fieldValues, index, mapIds(Array.isArray(value) ? value : [value], keyName));\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(insert, {\n      argA: index,\n      argB: emptyArray,\n      argC: index,\n      argD: fillBooleanArray(value)\n    }, updatedFieldArrayValues, insert(fieldValues, index));\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n  const swap = (indexA, indexB) => {\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n    batchStateUpdate(swapArrayAt, {\n      argA: indexA,\n      argB: indexB,\n      argC: indexA,\n      argD: indexB\n    }, undefined, fieldValues, false);\n  };\n  const move = (from, to) => {\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n    batchStateUpdate(moveArrayAt, {\n      argA: from,\n      argB: to,\n      argC: from,\n      argD: to\n    }, undefined, fieldValues, false);\n  };\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        console.warn('📋 useFieldArray is missing `name` attribute. https://react-hook-form.com/api#useFieldArray');\n      }\n    }\n    const defaultValues = get(fieldArrayDefaultValuesRef.current, name);\n    if (defaultValues && fields.length < defaultValues.length) {\n      set(fieldArrayDefaultValuesRef.current, name, defaultValues.slice(1));\n    }\n    updateWatchedValue(name);\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (key.startsWith(\"\".concat(name, \"[\").concat(focusIndexRef.current, \"]\")) && field.ref.focus) {\n          field.ref.focus();\n          break;\n        }\n      }\n    }\n    focusIndexRef.current = -1;\n  }, [fields, name]);\n  useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    const fieldArrayNames = fieldArrayNamesRef.current;\n    if (!getFieldArrayParentName(name)) {\n      resetFunctions[name] = data => {\n        resetFields();\n        !data && unset(fieldArrayDefaultValuesRef.current, name);\n        unset(shallowFieldsStateRef.current, name);\n        memoizedDefaultValues.current = get(data || defaultValuesRef.current, name);\n        if (!isUnMount.current) {\n          setFields(mapIds(memoizedDefaultValues.current, keyName));\n        }\n      };\n    }\n    return () => {\n      isUnMount.current = true;\n      shouldUnregister && remove();\n      resetFields();\n      delete resetFunctions[name];\n      unset(fieldArrayValuesRef.current, name);\n      fieldArrayNames.delete(name);\n    };\n  }, []);\n  return {\n    swap: useCallback(swap, [name]),\n    move: useCallback(move, [name]),\n    prepend: useCallback(prepend$1, [name]),\n    append: useCallback(append, [name]),\n    remove: useCallback(remove, [name]),\n    insert: useCallback(insert$1, [name]),\n    fields: compact(fields)\n  };\n};\nvar getInputValue = event => isPrimitive(event) || !isObject(event.target) || isObject(event.target) && !event.type ? event : isUndefined(event.target.value) ? event.target.checked : event.target.value;\nfunction useController(_ref14) {\n  let {\n    name,\n    rules,\n    defaultValue,\n    control,\n    onFocus\n  } = _ref14;\n  const methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 Controller is missing `control` prop. https://react-hook-form.com/api#Controller');\n    }\n  }\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange\n    },\n    formState,\n    formStateRef: {\n      current: {\n        isSubmitted,\n        touched,\n        errors\n      }\n    },\n    updateFormState,\n    readFormStateRef,\n    fieldsRef,\n    fieldArrayNamesRef,\n    shallowFieldsStateRef\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () => !isUndefined(get(shallowFieldsStateRef.current, name)) && isNotFieldArray ? get(shallowFieldsStateRef.current, name) : isUndefined(defaultValue) ? get(defaultValuesRef.current, name) : defaultValue;\n  const [value, setInputStateValue] = useState(getInitialValue());\n  const valueRef = useRef(value);\n  const ref = useRef({\n    focus: () => null\n  });\n  const onFocusRef = useRef(onFocus || (() => {\n    if (isFunction(ref.current.focus)) {\n      ref.current.focus();\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!isFunction(ref.current.focus)) {\n        console.warn(\"\\uD83D\\uDCCB 'ref' from Controller render prop must be attached to a React component or a DOM Element whose ref provides a 'focus()' method\");\n      }\n    }\n  }));\n  const shouldValidate = useCallback(isBlurEvent => !skipValidation(Object.assign({\n    isBlurEvent,\n    isReValidateOnBlur,\n    isReValidateOnChange,\n    isSubmitted,\n    isTouched: !!get(touched, name)\n  }, mode)), [isReValidateOnBlur, isReValidateOnChange, isSubmitted, touched, name, mode]);\n  const commonTask = useCallback(_ref15 => {\n    let [event] = _ref15;\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  }, []);\n  const registerField = useCallback(shouldUpdateValue => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        return console.warn('📋 Field is missing `name` prop. https://react-hook-form.com/api#Controller');\n      }\n    }\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = Object.assign({\n        ref: fieldsRef.current[name].ref\n      }, rules);\n    } else {\n      register(Object.defineProperties({\n        name,\n        focus: onFocusRef.current\n      }, {\n        value: {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          }\n        }\n      }), rules);\n      shouldUpdateValue = isUndefined(get(defaultValuesRef.current, name));\n    }\n    shouldUpdateValue && isNotFieldArray && setInputStateValue(getInitialValue());\n  }, [rules, name, register]);\n  useEffect(() => () => unregister(name), [name]);\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isUndefined(value)) {\n        console.warn(\"\\uD83D\\uDCCB \".concat(name, \" is missing in the 'defaultValue' prop of either its Controller (https://react-hook-form.com/api#Controller) or useForm (https://react-hook-form.com/api#useForm)\"));\n      }\n      if (!isNotFieldArray && isUndefined(defaultValue)) {\n        console.warn('📋 Controller is missing `defaultValue` prop when using `useFieldArray`. https://react-hook-form.com/api#Controller');\n      }\n    }\n    registerField();\n  }, [registerField]);\n  useEffect(() => {\n    !fieldsRef.current[name] && registerField(true);\n  });\n  const onBlur = useCallback(() => {\n    if (readFormStateRef.current.touched && !get(touched, name)) {\n      set(touched, name, true);\n      updateFormState({\n        touched\n      });\n    }\n    shouldValidate(true) && trigger(name);\n  }, [name, updateFormState, shouldValidate, trigger, readFormStateRef]);\n  const onChange = useCallback(function () {\n    for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n      event[_key] = arguments[_key];\n    }\n    return setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true\n    });\n  }, [setValue, name, shouldValidate]);\n  return {\n    field: {\n      onChange,\n      onBlur,\n      name,\n      value,\n      ref\n    },\n    meta: Object.defineProperties({\n      invalid: !!get(errors, name)\n    }, {\n      isDirty: {\n        get() {\n          return !!get(formState.dirtyFields, name);\n        }\n      },\n      isTouched: {\n        get() {\n          return !!get(formState.touched, name);\n        }\n      }\n    })\n  };\n}\nfunction useWatch(_ref16) {\n  let {\n    control,\n    name,\n    defaultValue\n  } = _ref16;\n  const methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useWatch is missing `control` prop. https://react-hook-form.com/api#useWatch');\n    }\n  }\n  const {\n    useWatchFieldsRef,\n    useWatchRenderFunctionsRef,\n    watchInternal,\n    defaultValuesRef\n  } = control || methods.control;\n  const updateValue = useState()[1];\n  const idRef = useRef();\n  const defaultValueRef = useRef(defaultValue);\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (name === '') {\n        console.warn('📋 useWatch is missing `name` attribute. https://react-hook-form.com/api#useWatch');\n      }\n    }\n    const id = idRef.current = generateId();\n    const watchFieldsHookRender = useWatchRenderFunctionsRef.current;\n    const watchFieldsHook = useWatchFieldsRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = () => updateValue({});\n    watchInternal(name, defaultValueRef.current, id);\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [name, useWatchRenderFunctionsRef, useWatchFieldsRef, watchInternal, defaultValueRef]);\n  return idRef.current ? watchInternal(name, defaultValueRef.current, idRef.current) : isUndefined(defaultValue) ? isString(name) ? get(defaultValuesRef.current, name) : Array.isArray(name) ? name.reduce((previous, inputName) => Object.assign(Object.assign({}, previous), {\n    [inputName]: get(defaultValuesRef.current, inputName)\n  }), {}) : defaultValuesRef.current : defaultValue;\n}\nconst Controller = props => {\n  const {\n      rules,\n      as,\n      render,\n      defaultValue,\n      control,\n      onFocus\n    } = props,\n    rest = __rest(props, [\"rules\", \"as\", \"render\", \"defaultValue\", \"control\", \"onFocus\"]);\n  const {\n    field,\n    meta\n  } = useController(props);\n  const componentProps = Object.assign(Object.assign({}, rest), field);\n  return as ? isValidElement(as) ? cloneElement(as, componentProps) : createElement(as, componentProps) : render ? render(field, meta) : null;\n};\nexport { Controller, FormProvider, appendErrors, get, transformToNestObject, useController, useFieldArray, useForm, useFormContext, useWatch };","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nimport React from \"react\";\nvar ReCAPTCHA = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ReCAPTCHA, _React$Component);\n  function ReCAPTCHA() {\n    var _this;\n    _this = _React$Component.call(this) || this;\n    _this.handleExpired = _this.handleExpired.bind(_assertThisInitialized(_this));\n    _this.handleErrored = _this.handleErrored.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleRecaptchaRef = _this.handleRecaptchaRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = ReCAPTCHA.prototype;\n  _proto.getValue = function getValue() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      return this.props.grecaptcha.getResponse(this._widgetId);\n    }\n    return null;\n  };\n  _proto.getWidgetId = function getWidgetId() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      return this._widgetId;\n    }\n    return null;\n  };\n  _proto.execute = function execute() {\n    var grecaptcha = this.props.grecaptcha;\n    if (grecaptcha && this._widgetId !== undefined) {\n      return grecaptcha.execute(this._widgetId);\n    } else {\n      this._executeRequested = true;\n    }\n  };\n  _proto.executeAsync = function executeAsync() {\n    var _this2 = this;\n    return new Promise(function (resolve, reject) {\n      _this2.executionResolve = resolve;\n      _this2.executionReject = reject;\n      _this2.execute();\n    });\n  };\n  _proto.reset = function reset() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      this.props.grecaptcha.reset(this._widgetId);\n    }\n  };\n  _proto.handleExpired = function handleExpired() {\n    if (this.props.onExpired) {\n      this.props.onExpired();\n    } else {\n      this.handleChange(null);\n    }\n  };\n  _proto.handleErrored = function handleErrored() {\n    if (this.props.onErrored) {\n      this.props.onErrored();\n    }\n    if (this.executionReject) {\n      this.executionReject();\n      delete this.executionResolve;\n      delete this.executionReject;\n    }\n  };\n  _proto.handleChange = function handleChange(token) {\n    if (this.props.onChange) {\n      this.props.onChange(token);\n    }\n    if (this.executionResolve) {\n      this.executionResolve(token);\n      delete this.executionReject;\n      delete this.executionResolve;\n    }\n  };\n  _proto.explicitRender = function explicitRender() {\n    if (this.props.grecaptcha && this.props.grecaptcha.render && this._widgetId === undefined) {\n      var wrapper = document.createElement(\"div\");\n      this._widgetId = this.props.grecaptcha.render(wrapper, {\n        sitekey: this.props.sitekey,\n        callback: this.handleChange,\n        theme: this.props.theme,\n        type: this.props.type,\n        tabindex: this.props.tabindex,\n        \"expired-callback\": this.handleExpired,\n        \"error-callback\": this.handleErrored,\n        size: this.props.size,\n        stoken: this.props.stoken,\n        hl: this.props.hl,\n        badge: this.props.badge\n      });\n      this.captcha.appendChild(wrapper);\n    }\n    if (this._executeRequested && this.props.grecaptcha && this._widgetId !== undefined) {\n      this._executeRequested = false;\n      this.execute();\n    }\n  };\n  _proto.componentDidMount = function componentDidMount() {\n    this.explicitRender();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.explicitRender();\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this._widgetId !== undefined) {\n      this.delayOfCaptchaIframeRemoving();\n      this.reset();\n    }\n  };\n  _proto.delayOfCaptchaIframeRemoving = function delayOfCaptchaIframeRemoving() {\n    var temporaryNode = document.createElement(\"div\");\n    document.body.appendChild(temporaryNode);\n    temporaryNode.style.display = \"none\"; // move of the recaptcha to a temporary node\n\n    while (this.captcha.firstChild) {\n      temporaryNode.appendChild(this.captcha.firstChild);\n    } // delete the temporary node after reset will be done\n\n    setTimeout(function () {\n      document.body.removeChild(temporaryNode);\n    }, 5000);\n  };\n  _proto.handleRecaptchaRef = function handleRecaptchaRef(elem) {\n    this.captcha = elem;\n  };\n  _proto.render = function render() {\n    // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n\n    /* eslint-disable no-unused-vars */\n    var _this$props = this.props,\n      sitekey = _this$props.sitekey,\n      onChange = _this$props.onChange,\n      theme = _this$props.theme,\n      type = _this$props.type,\n      tabindex = _this$props.tabindex,\n      onExpired = _this$props.onExpired,\n      onErrored = _this$props.onErrored,\n      size = _this$props.size,\n      stoken = _this$props.stoken,\n      grecaptcha = _this$props.grecaptcha,\n      badge = _this$props.badge,\n      hl = _this$props.hl,\n      childProps = _objectWithoutPropertiesLoose(_this$props, [\"sitekey\", \"onChange\", \"theme\", \"type\", \"tabindex\", \"onExpired\", \"onErrored\", \"size\", \"stoken\", \"grecaptcha\", \"badge\", \"hl\"]);\n    /* eslint-enable no-unused-vars */\n\n    return React.createElement(\"div\", _extends({}, childProps, {\n      ref: this.handleRecaptchaRef\n    }));\n  };\n  return ReCAPTCHA;\n}(React.Component);\nexport { ReCAPTCHA as default };\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.defaultProps = {\n  onChange: function onChange() {},\n  theme: \"light\",\n  type: \"image\",\n  tabindex: 0,\n  size: \"normal\",\n  badge: \"bottomright\"\n};","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nimport { Component, createElement, forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nvar SCRIPT_MAP = {}; // A counter used to generate a unique id for each component that uses the function\n\nvar idCount = 0;\nexport default function makeAsyncScript(getScriptURL, options) {\n  options = options || {};\n  return function wrapWithAsyncScript(WrappedComponent) {\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n    var AsyncScriptLoader = /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(AsyncScriptLoader, _Component);\n      function AsyncScriptLoader(props, context) {\n        var _this;\n        _this = _Component.call(this, props, context) || this;\n        _this.state = {};\n        _this.__scriptURL = \"\";\n        return _this;\n      }\n      var _proto = AsyncScriptLoader.prototype;\n      _proto.asyncScriptLoaderGetScriptLoaderID = function asyncScriptLoaderGetScriptLoaderID() {\n        if (!this.__scriptLoaderID) {\n          this.__scriptLoaderID = \"async-script-loader-\" + idCount++;\n        }\n        return this.__scriptLoaderID;\n      };\n      _proto.setupScriptURL = function setupScriptURL() {\n        this.__scriptURL = typeof getScriptURL === \"function\" ? getScriptURL() : getScriptURL;\n        return this.__scriptURL;\n      };\n      _proto.asyncScriptLoaderHandleLoad = function asyncScriptLoaderHandleLoad(state) {\n        var _this2 = this;\n\n        // use reacts setState callback to fire props.asyncScriptOnLoad with new state/entry\n        this.setState(state, function () {\n          return _this2.props.asyncScriptOnLoad && _this2.props.asyncScriptOnLoad(_this2.state);\n        });\n      };\n      _proto.asyncScriptLoaderTriggerOnScriptLoaded = function asyncScriptLoaderTriggerOnScriptLoaded() {\n        var mapEntry = SCRIPT_MAP[this.__scriptURL];\n        if (!mapEntry || !mapEntry.loaded) {\n          throw new Error(\"Script is not loaded.\");\n        }\n        for (var obsKey in mapEntry.observers) {\n          mapEntry.observers[obsKey](mapEntry);\n        }\n        delete window[options.callbackName];\n      };\n      _proto.componentDidMount = function componentDidMount() {\n        var _this3 = this;\n        var scriptURL = this.setupScriptURL();\n        var key = this.asyncScriptLoaderGetScriptLoaderID();\n        var _options = options,\n          globalName = _options.globalName,\n          callbackName = _options.callbackName,\n          scriptId = _options.scriptId; // check if global object already attached to window\n\n        if (globalName && typeof window[globalName] !== \"undefined\") {\n          SCRIPT_MAP[scriptURL] = {\n            loaded: true,\n            observers: {}\n          };\n        } // check if script loading already\n\n        if (SCRIPT_MAP[scriptURL]) {\n          var entry = SCRIPT_MAP[scriptURL]; // if loaded or errored then \"finish\"\n\n          if (entry && (entry.loaded || entry.errored)) {\n            this.asyncScriptLoaderHandleLoad(entry);\n            return;\n          } // if still loading then callback to observer queue\n\n          entry.observers[key] = function (entry) {\n            return _this3.asyncScriptLoaderHandleLoad(entry);\n          };\n          return;\n        }\n        /*\n         * hasn't started loading\n         * start the \"magic\"\n         * setup script to load and observers\n         */\n\n        var observers = {};\n        observers[key] = function (entry) {\n          return _this3.asyncScriptLoaderHandleLoad(entry);\n        };\n        SCRIPT_MAP[scriptURL] = {\n          loaded: false,\n          observers: observers\n        };\n        var script = document.createElement(\"script\");\n        script.src = scriptURL;\n        script.async = true;\n        for (var attribute in options.attributes) {\n          script.setAttribute(attribute, options.attributes[attribute]);\n        }\n        if (scriptId) {\n          script.id = scriptId;\n        }\n        var callObserverFuncAndRemoveObserver = function callObserverFuncAndRemoveObserver(func) {\n          if (SCRIPT_MAP[scriptURL]) {\n            var mapEntry = SCRIPT_MAP[scriptURL];\n            var observersMap = mapEntry.observers;\n            for (var obsKey in observersMap) {\n              if (func(observersMap[obsKey])) {\n                delete observersMap[obsKey];\n              }\n            }\n          }\n        };\n        if (callbackName && typeof window !== \"undefined\") {\n          window[callbackName] = function () {\n            return _this3.asyncScriptLoaderTriggerOnScriptLoaded();\n          };\n        }\n        script.onload = function () {\n          var mapEntry = SCRIPT_MAP[scriptURL];\n          if (mapEntry) {\n            mapEntry.loaded = true;\n            callObserverFuncAndRemoveObserver(function (observer) {\n              if (callbackName) {\n                return false;\n              }\n              observer(mapEntry);\n              return true;\n            });\n          }\n        };\n        script.onerror = function () {\n          var mapEntry = SCRIPT_MAP[scriptURL];\n          if (mapEntry) {\n            mapEntry.errored = true;\n            callObserverFuncAndRemoveObserver(function (observer) {\n              observer(mapEntry);\n              return true;\n            });\n          }\n        };\n        document.body.appendChild(script);\n      };\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        // Remove tag script\n        var scriptURL = this.__scriptURL;\n        if (options.removeOnUnmount === true) {\n          var allScripts = document.getElementsByTagName(\"script\");\n          for (var i = 0; i < allScripts.length; i += 1) {\n            if (allScripts[i].src.indexOf(scriptURL) > -1) {\n              if (allScripts[i].parentNode) {\n                allScripts[i].parentNode.removeChild(allScripts[i]);\n              }\n            }\n          }\n        } // Clean the observer entry\n\n        var mapEntry = SCRIPT_MAP[scriptURL];\n        if (mapEntry) {\n          delete mapEntry.observers[this.asyncScriptLoaderGetScriptLoaderID()];\n          if (options.removeOnUnmount === true) {\n            delete SCRIPT_MAP[scriptURL];\n          }\n        }\n      };\n      _proto.render = function render() {\n        var globalName = options.globalName; // remove asyncScriptOnLoad from childProps\n\n        var _this$props = this.props,\n          asyncScriptOnLoad = _this$props.asyncScriptOnLoad,\n          forwardedRef = _this$props.forwardedRef,\n          childProps = _objectWithoutPropertiesLoose(_this$props, [\"asyncScriptOnLoad\", \"forwardedRef\"]); // eslint-disable-line no-unused-vars\n\n        if (globalName && typeof window !== \"undefined\") {\n          childProps[globalName] = typeof window[globalName] !== \"undefined\" ? window[globalName] : undefined;\n        }\n        childProps.ref = forwardedRef;\n        return createElement(WrappedComponent, childProps);\n      };\n      return AsyncScriptLoader;\n    }(Component); // Note the second param \"ref\" provided by React.forwardRef.\n    // We can pass it along to AsyncScriptLoader as a regular prop, e.g. \"forwardedRef\"\n    // And it can then be attached to the Component.\n\n    var ForwardedComponent = forwardRef(function (props, ref) {\n      return createElement(AsyncScriptLoader, _extends({}, props, {\n        forwardedRef: ref\n      }));\n    });\n    ForwardedComponent.displayName = \"AsyncScriptLoader(\" + wrappedComponentName + \")\";\n    ForwardedComponent.propTypes = {\n      asyncScriptOnLoad: PropTypes.func\n    };\n    return hoistStatics(ForwardedComponent, WrappedComponent);\n  };\n}","import ReCAPTCHA from \"./recaptcha\";\nimport makeAsyncScriptLoader from \"react-async-script\";\nvar callbackName = \"onloadcallback\";\nvar globalName = \"grecaptcha\";\nfunction getOptions() {\n  return typeof window !== \"undefined\" && window.recaptchaOptions || {};\n}\nfunction getURL() {\n  var dynamicOptions = getOptions();\n  var hostname = dynamicOptions.useRecaptchaNet ? \"recaptcha.net\" : \"www.google.com\";\n  return \"https://\" + hostname + \"/recaptcha/api.js?onload=\" + callbackName + \"&render=explicit\";\n}\nexport default makeAsyncScriptLoader(getURL, {\n  callbackName: callbackName,\n  globalName: globalName\n})(ReCAPTCHA);","import React from 'react';\nimport GoogleRecaptcha from 'react-google-recaptcha';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"children\"];\nvar NetlifyFormContext = React.createContext();\nNetlifyFormContext.displayName = 'NetlifyFormContext';\nvar NetlifyFormProvider = function NetlifyFormProvider(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(NetlifyFormContext.Provider, {\n    value: _extends({}, props)\n  }, children);\n};\nfunction useNetlifyFormContext() {\n  return React.useContext(NetlifyFormContext);\n}\nvar _excluded$1 = [\"label\"];\nvar Honeypot = function Honeypot(_ref) {\n  var _ref$label = _ref.label,\n    label = _ref$label === void 0 ? \"Leave the following field empty:\" : _ref$label,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  var _useNetlifyFormContex = useNetlifyFormContext(),\n    handleChange = _useNetlifyFormContex.handleChange,\n    honeypotName = _useNetlifyFormContex.honeypotName;\n  return /*#__PURE__*/React.createElement(\"p\", {\n    hidden: true\n  }, /*#__PURE__*/React.createElement(\"label\", null, label, ' ', /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"text\"\n  }, props, {\n    name: honeypotName,\n    onChange: handleChange\n  }))));\n};\nvar encodeFormData = function encodeFormData(data) {\n  var formData = new FormData();\n  for (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    formData.append(key, data[key]);\n  }\n  return formData;\n};\nvar isFunction = function isFunction(x) {\n  return typeof x === 'function';\n};\nvar isEmptyChildren = function isEmptyChildren(x) {\n  return React.Children.count(x) === 0;\n};\nfunction NetlifyFormReducer(state, action) {\n  var type = action.type,\n    payload = action.payload;\n  switch (type) {\n    case 'CHANGE_FORM_DATA':\n      {\n        var _extends2;\n        var name = payload.name,\n          value = payload.value,\n          _type = payload.type;\n        return _extends({}, state, {\n          values: _extends({}, state.values, (_extends2 = {}, _extends2[name] = _type !== 'checkbox' ? value : payload.checked, _extends2))\n        });\n      }\n    case 'RESET_FORM':\n      {\n        var initialData = payload;\n        return _extends({}, state, {\n          values: initialData\n        });\n      }\n    case 'SET_SUCCESS':\n      return _extends({}, state, {\n        success: true,\n        error: false,\n        submitting: false,\n        submitted: true\n      });\n    case 'SET_ERROR':\n      return _extends({}, state, {\n        success: false,\n        error: true,\n        submitting: false\n      });\n    case 'SET_SUBMITTING':\n      return _extends({}, state, {\n        submitting: true\n      });\n    case 'SET_HONEYPOT_NAME':\n      return _extends({}, state, {\n        honeypotName: payload\n      });\n    case 'ENABLE_RECAPTCHA':\n      return _extends({}, state, {\n        recaptchaEnabled: payload\n      });\n    default:\n      throw new Error(\"Action type \\\"\" + type + \"\\\" is not defined.\");\n  }\n}\nvar _excluded$2 = [\"children\"];\nvar NetlifyFormComponent = function NetlifyFormComponent(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n  var context = useNetlifyFormContext();\n  var formRef = context.formRef,\n    formName = context.formName,\n    formAction = context.formAction,\n    honeypotName = context.honeypotName,\n    recaptchaEnabled = context.recaptchaEnabled,\n    handleSubmit = context.handleSubmit,\n    handleReset = context.handleReset;\n  var netlifyProps = {};\n  if (honeypotName) {\n    netlifyProps['data-netlify-honeypot'] = honeypotName;\n  }\n  if (recaptchaEnabled) {\n    netlifyProps['data-netlify-recaptcha'] = true;\n  }\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: formRef,\n    method: \"post\",\n    name: formName,\n    action: formAction,\n    onSubmit: handleSubmit,\n    onReset: handleReset,\n    \"data-netlify\": true\n  }, netlifyProps, props), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"form-name\",\n    value: formName\n  }), children ? isFunction(children) ? children(context) : !isEmptyChildren(children) ? children : null : null);\n};\nvar _excluded$3 = [\"children\", \"formProps\"];\nvar useNetlifyForm = function useNetlifyForm(_ref) {\n  var _ref$name = _ref.name,\n    name = _ref$name === void 0 ? 'Form' : _ref$name,\n    _ref$action = _ref.action,\n    action = _ref$action === void 0 ? '' : _ref$action,\n    _ref$honeypotName = _ref.honeypotName,\n    honeypotName = _ref$honeypotName === void 0 ? '' : _ref$honeypotName,\n    _ref$enableRecaptcha = _ref.enableRecaptcha,\n    enableRecaptcha = _ref$enableRecaptcha === void 0 ? false : _ref$enableRecaptcha,\n    _ref$onSuccess = _ref.onSuccess,\n    onSuccess = _ref$onSuccess === void 0 ? function () {} : _ref$onSuccess,\n    _ref$onFailure = _ref.onFailure,\n    onFailure = _ref$onFailure === void 0 ? function () {} : _ref$onFailure;\n  var initialValues = {};\n  var initialState = {\n    success: false,\n    error: false,\n    submitting: false,\n    submitted: false,\n    response: null,\n    values: initialValues,\n    formName: name,\n    formAction: action,\n    honeypotName: honeypotName,\n    recaptchaEnabled: enableRecaptcha,\n    recaptchaInvisible: false\n  };\n  var _React$useReducer = React.useReducer(NetlifyFormReducer, initialState),\n    state = _React$useReducer[0],\n    dispatch = _React$useReducer[1];\n  var formRef = React.useRef(null);\n  var recaptchaRef = React.useRef(null);\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n      name = _ref2$target.name,\n      value = _ref2$target.value,\n      files = _ref2$target.files;\n    dispatch({\n      type: 'CHANGE_FORM_DATA',\n      payload: files != null && files.length > 0 ? {\n        name: name,\n        value: files[0]\n      } : {\n        name: name,\n        value: value\n      }\n    });\n  };\n  var handleReset = function handleReset() {\n    dispatch({\n      type: 'RESET_FORM',\n      payload: initialValues\n    });\n  };\n  var handleSubmit = function handleSubmit(event, values) {\n    if (event === void 0) {\n      event = null;\n    }\n    if (values === void 0) {\n      values = {};\n    }\n    try {\n      var _temp4 = function _temp4(_result) {\n        if (_exit2) return _result;\n        dispatch({\n          type: 'SET_SUBMITTING'\n        });\n        return Promise.resolve(fetch('/', {\n          method: 'POST',\n          body: encodeFormData(formData)\n        })).then(function (response) {\n          var context = {\n            state: state,\n            formRef: formRef,\n            recaptchaRef: recaptchaRef\n          };\n          if (response.status !== 200) {\n            dispatch({\n              type: 'SET_ERROR'\n            });\n            return onFailure(response, context);\n          }\n          dispatch({\n            type: 'SET_SUCCESS'\n          });\n          return onSuccess(response, context);\n        });\n      };\n      var _exit2 = false;\n      if (event) {\n        event.preventDefault();\n      }\n      var formData = _extends({\n        'form-name': state.formName\n      }, values, state.values);\n      var _temp5 = function () {\n        if (state.recaptchaEnabled) {\n          var _temp6 = function _temp6(recaptchaValue) {\n            formData['g-recaptcha-response'] = recaptchaValue;\n          };\n          if (recaptchaRef.current === null) {\n            throw new Error('reCAPTCHA is enabled but reference not found, make sure you render the reCAPTCHA-component somewhere.');\n          }\n          var isRecaptchaInvisible = recaptchaRef.current.props.size === 'invisible';\n          return isRecaptchaInvisible ? Promise.resolve(recaptchaRef.current.executeAsync()).then(_temp6) : _temp6(recaptchaRef.current.getValue());\n        }\n      }();\n      return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(_temp4) : _temp4(_temp5));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var setHoneypotName = React.useCallback(function (ref) {\n    return dispatch({\n      type: 'SET_HONEYPOT_NAME',\n      payload: ref\n    });\n  }, []);\n  var enableRecaptchaHandler = React.useCallback(function (enable) {\n    return dispatch({\n      type: 'ENABLE_RECAPTCHA',\n      payload: enable\n    });\n  }, []);\n  return _extends({}, state, {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    handleReset: handleReset,\n    setHoneypotName: setHoneypotName,\n    enableRecaptcha: enableRecaptchaHandler,\n    formRef: formRef,\n    recaptchaRef: recaptchaRef\n  });\n};\nvar NetlifyForm = function NetlifyForm(_ref3) {\n  var children = _ref3.children,\n    formProps = _ref3.formProps,\n    props = _objectWithoutPropertiesLoose(_ref3, _excluded$3);\n  var context = useNetlifyForm(props);\n  return /*#__PURE__*/React.createElement(NetlifyFormProvider, context, /*#__PURE__*/React.createElement(NetlifyFormComponent, formProps, children));\n};\nvar _excluded$4 = [\"siteKey\", \"invisible\"];\nvar Recaptcha = function Recaptcha(_ref) {\n  var _ref$siteKey = _ref.siteKey,\n    siteKey = _ref$siteKey === void 0 ? '' : _ref$siteKey,\n    _ref$invisible = _ref.invisible,\n    invisible = _ref$invisible === void 0 ? false : _ref$invisible,\n    passThroughProps = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n  var _useNetlifyFormContex = useNetlifyFormContext(),\n    recaptchaRef = _useNetlifyFormContex.recaptchaRef;\n  return /*#__PURE__*/React.createElement(GoogleRecaptcha, _extends({}, passThroughProps, {\n    sitekey: siteKey,\n    ref: recaptchaRef\n  }, invisible ? {\n    size: 'invisible'\n  } : {}));\n};\nexport { Honeypot, NetlifyForm, NetlifyFormComponent, NetlifyFormContext, NetlifyFormProvider, Recaptcha, useNetlifyForm, useNetlifyFormContext };","import React from 'react';\nimport Layout from '../components/layout';\nimport { graphql } from 'gatsby';\nimport { useForm } from 'react-hook-form';\nimport {\n  useNetlifyForm,\n  NetlifyFormProvider,\n  NetlifyFormComponent,\n  Honeypot,\n} from 'react-netlify-forms';\nimport styled from 'styled-components';\n\nconst ContactTemplate = ({ data }) => {\n  const { html, frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout title={frontmatter.title}>\n      <ContactWrapper>\n        <ContactCopy dangerouslySetInnerHTML={{ __html: html }} />\n        <ContactForm />\n      </ContactWrapper>\n    </Layout>\n  );\n};\n\nexport default ContactTemplate;\n\nconst ContactForm = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const netlify = useNetlifyForm({\n    name: 'Contact',\n    action: '/thanks',\n    honeypotName: 'bot-field',\n  });\n  const onSubmit = (data) => {\n    netlify.handleSubmit(null, data);\n    console.log(data);\n  };\n\n  return (\n    <FormWrapper>\n      <NetlifyFormProvider {...netlify}>\n        <NetlifyFormComponent onSubmit={handleSubmit(onSubmit)}>\n          <Honeypot />\n\n          <FormGroup>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              ref={register({ required: 'Name is required' })}\n            />\n            {errors.name && (\n              <FormErrorMessage>{errors.name.message}</FormErrorMessage>\n            )}\n          </FormGroup>\n\n          <FormGroup>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              ref={register({\n                required: 'Email is required.',\n                pattern: {\n                  message: 'Email is not valid.',\n                  value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n                },\n              })}\n            />\n            {errors.email && (\n              <FormErrorMessage>{errors.email.message}</FormErrorMessage>\n            )}\n          </FormGroup>\n\n          <FormGroup>\n            <label htmlFor=\"message\">Your message</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              rows=\"4\"\n              ref={register({ required: 'Message is required' })}\n            />\n            {errors.message && (\n              <FormErrorMessage>{errors.message.message}</FormErrorMessage>\n            )}\n          </FormGroup>\n\n          <FormFeedbackWrapper>\n            {netlify.success && (\n              <FormSucessFeedback>Message sent succesfully</FormSucessFeedback>\n            )}\n            {netlify.error && (\n              <FormErrorFeedback>\n                Something went wrong, please try again.\n              </FormErrorFeedback>\n            )}\n          </FormFeedbackWrapper>\n\n          <FormButton type=\"submit\">Send Message</FormButton>\n        </NetlifyFormComponent>\n      </NetlifyFormProvider>\n    </FormWrapper>\n  );\n};\n\nconst ContactWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  justify-content: space-around;\n  margin-top: 1rem;\n  padding-bottom: 1rem;\n\n  & > * {\n    flex: 1;\n  }\n\n  @media screen and (max-width: 1000px) {\n    & {\n      flex-direction: column;\n      justify-content: flex-start;\n    }\n\n    & > * {\n      margin-top: 2rem;\n      flex: 0;\n      width: 100%;\n    }\n  }\n`;\n\nconst ContactCopy = styled.div`\n  max-width: 45ch;\n\n  & p {\n    font-size: var(--size-400);\n  }\n`;\n\nconst FormWrapper = styled.div`\n  max-width: 45ch;\n  padding: 1rem;\n  padding-top: 0;\n  border-radius: 4px;\n  border: 1px solid rgba(255, 255, 255, 0.7);\n  background-color: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(10px);\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: inherit;\n\n  & label {\n    margin-top: 1rem;\n    text-transform: capitalize;\n    font-size: var(--size-400);\n  }\n\n  & input,\n  textarea {\n    resize: vertical;\n    font-size: var(--size-400);\n    font-family: inherit;\n    padding: 0.25rem 0.5rem;\n    border-radius: 4px;\n    background-color: #e4b8c7;\n    border: 2px solid transparent;\n  }\n\n  & textarea:focus,\n  input:focus {\n    outline: none;\n    border: 2px solid #80576e;\n  }\n`;\n\nconst FormErrorMessage = styled.span`\n  color: red;\n  font-size: var(--size-300);\n  opacity: 0.7;\n`;\n\nconst FormFeedbackWrapper = styled.div`\n  margin-top: 1rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n`;\n\nconst FormSucessFeedback = styled.span`\n  color: green;\n`;\n\nconst FormErrorFeedback = styled.span`\n  color: red;\n`;\n\nconst FormButton = styled.button`\n  margin-top: 1rem;\n  padding: 0.45rem;\n  padding-left: 1.25rem;\n  padding-right: 1.5rem;\n  background-color: #37292c;\n  color: #fafafa;\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  text-transform: uppercase;\n  border-radius: 4px;\n`;\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["isHTMLElement","value","HTMLElement","EVENTS","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","SELECT","UNDEFINED","INPUT_VALIDATION_RULES","attachEventListeners","_ref","shouldAttachChangeEvent","handleChange","ref","addEventListener","isNullOrUndefined","isObjectType","isObject","Array","isArray","Date","isKey","test","compact","filter","Boolean","stringToPath","input","replace","split","set","object","path","index","tempPath","length","lastIndex","key","newValue","objValue","isNaN","transformToNestObject","data","arguments","undefined","isUndefined","val","get","obj","defaultValue","result","reduce","focusOnErrorField","fields","fieldErrors","field","focus","options","removeAllEventListeners","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","getRadioValue","previous","option","checked","isRadioInput","element","type","isFileInput","isCheckBoxInput","isMultipleSelect","concat","defaultResult","validResult","getCheckboxValue","values","map","_ref4","attributes","getFieldValue","fieldsRef","name","shallowFieldsStateRef","excludeDisabled","shouldKeepRawValue","current","disabled","valueAsNumber","valueAsDate","setValueAs","files","_ref2","selected","_ref3","NaN","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","isEmptyObject","Object","keys","isBoolean","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","fieldRef","forEach","isPrimitive","deepMerge","target","source","targetValue","sourceValue","_a","deepEqual","object1","object2","isErrorObject","isValidElement","keys1","keys2","val1","val2","setDirtyFields","defaultValues","dirtyFields","parentName","assign","setFieldArrayDirtyFields","isString","getFieldsValues","shallowFieldsState","search","output","startsWith","find","isErrorStateChanged","_ref5","errors","error","validFields","fieldsWithValidation","previousError","isRegex","RegExp","getValueAndMessage","validationData","message","isFunction","isMessage","getValidateError","appendErrors","validateAllFieldCriteria","types","validateField","async","_ref6","required","maxLength","minLength","min","max","pattern","validate","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueNumber","parseFloat","maxLengthOutput","minLengthOutput","patternValue","validateRef","validateError","validationResult","validateFunction","entries","getPath","rootPath","paths","property","rootName","push","assignWatchFields","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","skipValidation","_ref7","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","getFieldArrayParentName","substring","indexOf","isMatchFieldArrayName","searchName","isNameInFieldArray","names","some","isSelectInput","onDomRemove","removeFieldEventListenerAndRef","observer","MutationObserver","observe","window","document","childList","subtree","isWeb","cloneObject","copy","File","includes","constructor","getTime","Set","Map","modeChecker","mode","isOnSubmit","isRadioOrCheckboxFunction","isWindowUndefined","isProxyEnabled","Proxy","FormContext","createContext","displayName","_extends","i","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","ReCAPTCHA","_React$Component","subClass","superClass","_this","handleExpired","handleErrored","handleRecaptchaRef","create","__proto__","_proto","getValue","props","grecaptcha","_widgetId","getResponse","getWidgetId","execute","_executeRequested","executeAsync","_this2","Promise","resolve","reject","executionResolve","executionReject","reset","onExpired","onErrored","token","explicitRender","render","wrapper","createElement","sitekey","callback","theme","tabindex","size","stoken","hl","badge","captcha","appendChild","componentDidMount","componentDidUpdate","componentWillUnmount","delayOfCaptchaIframeRemoving","temporaryNode","body","style","display","firstChild","setTimeout","removeChild","elem","_this$props","childProps","excluded","sourceKeys","_objectWithoutPropertiesLoose","defaultProps","SCRIPT_MAP","idCount","callbackName","getScriptURL","recaptchaOptions","useRecaptchaNet","globalName","WrappedComponent","wrappedComponentName","AsyncScriptLoader","_Component","context","state","__scriptURL","asyncScriptLoaderGetScriptLoaderID","__scriptLoaderID","setupScriptURL","asyncScriptLoaderHandleLoad","setState","asyncScriptOnLoad","asyncScriptLoaderTriggerOnScriptLoaded","mapEntry","loaded","Error","obsKey","observers","_this3","scriptURL","_options","scriptId","entry","errored","script","attribute","src","setAttribute","id","callObserverFuncAndRemoveObserver","func","observersMap","onload","onerror","removeOnUnmount","allScripts","getElementsByTagName","forwardedRef","Component","ForwardedComponent","forwardRef","propTypes","_excluded","NetlifyFormContext","NetlifyFormProvider","children","Provider","useNetlifyFormContext","_excluded$1","Honeypot","_ref$label","label","_useNetlifyFormContex","honeypotName","hidden","encodeFormData","formData","FormData","_i","_Object$keys","append","NetlifyFormReducer","action","payload","_extends2","_type","success","submitting","submitted","recaptchaEnabled","_excluded$2","NetlifyFormComponent","formRef","formName","formAction","handleSubmit","handleReset","netlifyProps","method","onReset","x","isEmptyChildren","useNetlifyForm","_ref$name","_ref$action","_ref$honeypotName","_ref$enableRecaptcha","enableRecaptcha","_ref$onSuccess","onSuccess","_ref$onFailure","onFailure","initialValues","initialState","response","recaptchaInvisible","_React$useReducer","dispatch","recaptchaRef","setHoneypotName","enableRecaptchaHandler","enable","_ref2$target","event","_temp4","_result","_exit2","fetch","then","status","preventDefault","_temp5","_temp6","recaptchaValue","e","html","frontmatter","markdownRemark","title","ContactWrapper","ContactCopy","dangerouslySetInnerHTML","__html","ContactForm","register","reValidateMode","resolver","shouldFocusError","criteriaMode","useRef","fieldArrayDefaultValuesRef","fieldArrayValuesRef","watchFieldsRef","useWatchFieldsRef","useWatchRenderFunctionsRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","isValidateAllFieldCriteria","formState","setFormState","useState","isDirty","isValidating","submitCount","touched","isSubmitting","isSubmitSuccessful","readFormStateRef","formStateRef","observerRef","updateFormState","useCallback","updateIsValidating","shouldRenderBaseOnError","shouldRender","shouldReRender","setFieldValue","rawValue","_ref8","radioRef","selectRef","_ref9","checkboxRef","isFormDirty","formValues","getValues","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","previousIsDirty","isChanged","executeValidation","skipReRender","executeSchemaOrResolverValidation","previousFormIsValid","isInputsValid","every","trigger","setInternalValues","_ref10","shouldDirty","shouldValidate","setInternalValue","config","has","isFieldWatched","match","renderWatchedInputs","found","setValue","setFieldArrayDefaultValues","_ref11","shouldSkipValidation","parentNodeName","currentError","validateResolver","newDefaultValues","removeFieldEventListener","updateWatchedValue","watchField","clearErrors","inputName","setError","shouldFocus","watchInternal","fieldNames","watchId","combinedDefaultValues","watch","unregister","registerFieldRef","fieldRefAndValidationOptions","isFieldArray","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","refOrRegisterOptions","onValid","onInvalid","persist","fieldError","resetRefs","_ref12","omitResetState","inputRef","closest","resetFieldArray","useEffect","disconnect","commonProps","prop","control","useMemo","useForm","netlify","FormWrapper","console","log","FormGroup","htmlFor","FormErrorMessage","email","rows","FormFeedbackWrapper","FormSucessFeedback","FormErrorFeedback","FormButton","styled"],"sourceRoot":""}