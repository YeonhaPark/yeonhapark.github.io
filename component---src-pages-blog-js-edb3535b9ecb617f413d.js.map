{"version":3,"file":"component---src-pages-blog-js-edb3535b9ecb617f413d.js","mappings":"4JA2BA,IAtBiB,IAAgB,IAAf,MAAEA,GAAO,EACzB,MAAMC,EAAWD,EAAME,KAAI,IAAmD,IAAlD,YAAEC,EAAW,OAAEC,EAAM,QAAEC,EAAO,WAAEC,GAAY,EACtE,MAAM,MAAEC,EAAK,KAAEC,EAAI,KAAEC,EAAI,YAAEC,GAAgBP,GACrC,KAAEQ,GAASP,EAEjB,OACE,gBAACQ,EAAY,CACXC,IAAKF,EACLH,KAAMA,EACND,MAAOA,EACPE,KAAMA,EACNE,KAAMA,EACNL,WAAYA,EACZI,YAAaA,EACbL,QAASA,GACT,IAIN,OAAO,gBAACS,EAAc,KAAEb,EAA0B,EAKpD,MAAMW,EAAe,IAQd,IARe,MACpBL,EAAK,KACLE,EAAI,WACJH,EAAU,KACVE,EAAI,QACJH,EAAO,YACPK,EAAW,KACXC,GACD,EACC,OACE,gBAACI,EAAkB,KACjB,gBAAC,IAAI,CAACP,KAAMA,IAEZ,gBAACQ,EAAa,KACZ,gBAAC,EAAAC,KAAI,CAACC,GAAIP,GAAOJ,IAEnB,gBAACY,EAAe,CACdC,wBAAyB,CACvBC,OAAQX,GAAeL,KAG3B,gBAACiB,EAAY,KACX,4BAAOb,GAEP,4BAAOH,EAAU,UAEA,EAInBQ,EAAiBS,EAAAA,QAAAA,GAAAA,WAAS,oEAATA,CAAS,yMAe1BR,EAAqBQ,EAAAA,QAAAA,GAAAA,WAAS,wEAATA,CAAS,mUAsB9BP,EAAgBO,EAAAA,QAAAA,GAAAA,WAAS,mEAATA,CAAS,4OAuBzBJ,EAAkBI,EAAAA,QAAAA,EAAAA,WAAQ,qEAARA,CAAQ,gDAK1BD,EAAeC,EAAAA,QAAAA,IAAAA,WAAU,kEAAVA,CAAU,0F,wDClG/B,IAfa,IAAe,IAAd,KAAEf,GAAM,EACpB,OACE,2BACGA,GACCA,EAAKN,KAAKsB,IACR,OACE,gBAACC,EAAG,CAACZ,IAAKW,GACR,gBAAC,EAAAP,KAAI,CAACC,GAAE,UAdDQ,EAcwBF,EAbpCE,EACJC,MAAM,sEACNzB,KAAK0B,GAAMA,EAAEC,gBACbC,KAAK,OAU4CN,IAdjCE,KAeH,IAGR,EAMV,MAAMD,EAAMF,EAAAA,QAAAA,KAAAA,WAAW,oDAAXA,CAAW,2U,kFCGvB,UAzBa,IAAe,IAAd,KAAEQ,GAAM,EACpB,MAAM/B,EAAQ+B,EAAKC,kBAAkBC,MAErC,OACE,gBAAC,IAAM,CAAC1B,MAAM,QACZ,gBAAC2B,EAAa,KACZ,kCAEA,mBAMEhB,GAAG,SAAO,kBAMd,gBAAC,IAAQ,CAAClB,MAAOA,IACV,EAMb,MAAMkC,EAAgBX,EAAAA,QAAAA,IAAAA,WAAU,+DAAVA,CAAU,qHAqC9B,4K","sources":["webpack://yonas-dev-log/./src/components/post-list.js","webpack://yonas-dev-log/./src/components/tags.js","webpack://yonas-dev-log/./src/pages/blog.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Tags from './tags';\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <StyledPostList>{PostList}</StyledPostList>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <StyledPostListItem>\n      <Tags tags={tags} />\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n      <PostListMeta>\n        <span>{date}</span>\n\n        <span>{timeToRead} mins</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  );\n};\n\nconst StyledPostList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n    }\n  }\n`;\n\nconst StyledPostListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 8px;\n  width: 100%;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`;\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-400);\n`;\n\nconst PostListMeta = styled.div`\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(255, 255, 255, 0.7);\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport styled from 'styled-components';\n\nconst Blog = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout title=\"Blog\">\n      <HeaderWrapper>\n        <h1>Blog</h1>\n\n        <Link\n          css={`\n            margin-top: var(--size-400);\n            color: inherit;\n            text-transform: uppercase;\n          `}\n          to=\"/tags\"\n        >\n          view all tags\n        </Link>\n      </HeaderWrapper>\n\n      <PostList posts={posts} />\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: var(--size-900);\n  margin-bottom: var(--size-700);\n\n  h1 {\n    max-width: none;\n  }\n`;\n\nexport const homePageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { contentType: { eq: \"posts\" } } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        excerpt\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          title\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"names":["posts","PostList","map","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","PostListItem","key","StyledPostList","StyledPostListItem","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","styled","tag","Tag","str","match","x","toLowerCase","join","data","allMarkdownRemark","nodes","HeaderWrapper"],"sourceRoot":""}