{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/javascript-reduce/","result":{"data":{"markdownRemark":{"id":"5ce4223a-24ae-54fa-a863-3cd05f3eb01f","html":"<p>프론트엔드 개발을 시작한지 1년이 지났지만 아직도 reduce 메서드를 떠올리면 어떻게 활용해야 할 지 조금은 막막한 기분을 지울 수 없다. 정말 유용한 메서드임을 익히 들어서 알고 있는데도, 정작 활용은 어레이의 숫자들을 더하는 용도로 써본 적이 대부분이다ㅠ. 더이상 리듀스 메서드를 이해하는 것을 미루면 안될 것 같아 포스팅으로 정리하며 여러 예제와 함께 리듀스가 어떤 상황에서 유용하게 쓰일 수 있을지 고민해보았다!</p>\n<h3 id=\"reduce-메서드\" style=\"position:relative;\"><a href=\"#reduce-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"reduce 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reduce() 메서드</h3>\n<p>어레이를 구성하는 각각 요소들에 대해 reducer 함수를 실행하고 하나의 결과(output)를 도출한다. reduce 메서드는 reducer함수를 필수 인자로 받고 옵셔널한 값으로 초깃값을 받는다.</p>\n<p>reducer 함수는 네 개의 아규먼트를 받을 수 있다.</p>\n<p>첫째, Accumulator(축적값): 콜백함수가 리턴하는 값을 <strong>축적</strong>한다. 초깃값이 주어졌다면 초깃값부터 시작하고, 그렇지 않다면 어레이의 첫번째 요소를 사용한다.</p>\n<p>둘째, Current Value(현재값): 어레이에서 현재 사용되는 현재값이다. 초깃값이 주어지지 않았다면 현재값은 두번째 요소부터 사용된다.</p>\n<p>셋째(옵셔널), Current Index(현재 인덱스): 초깃값이 주어지면 인덱스 0부터 시작하고, 주어지지 않았다면 1부터 시작한다. 따라서 어레이의 요소가 하나 뿐이고 초깃값이 주어지지 않은 상태이면 콜백 함수 호출 없이 하나의 값만 리턴된다.</p>\n<p>넷째(옵셔널), Source Array: reduce()가 호출되는 어레이이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> array1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">accumulator<span class=\"token punctuation\">,</span> currentValue</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> accumulator <span class=\"token operator\">+</span> currentValue<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 1 + 2 + 3 + 4</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: 10</span>\n\n<span class=\"token comment\">// 5 + 1 + 2 + 3 + 4</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: 15</span>\n\n<span class=\"token keyword\">const</span> array2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array2<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: 10</span></code></pre></div>\n<p>물론 리듀스는 어레이에 담겨진 숫자를 더할때도 많이 쓰이지만 이 밖에도 대표적으로 리듀서를 응용할 수 있는 예제들을 살펴보겠다.</p>\n<ol>\n<li>어레이의 최대/최솟값 구하기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> array1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">minReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">maxReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\narray1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>minReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -4</span>\narray1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>maxReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100</span></code></pre></div>\n<ol start=\"2\">\n<li>어레이 플래트닝(Flattening)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> numArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">flattenArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> initialVal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> acc<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">flattenArr</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    initialVal\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">flattenArr</span><span class=\"token punctuation\">(</span>numArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>자료 구조 바꾸기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 원래 데이터셋</span>\n<span class=\"token keyword\">const</span> company <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"facebook\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"sns\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"hyundai\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"automobile\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"medium\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"blog\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 바뀔 데이터셋</span>\n<span class=\"token keyword\">const</span> companyModified <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  facebook<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"sns\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  hyundai<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"automobile\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  medium<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"blog\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">modifier</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    acc<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> cur<span class=\"token punctuation\">.</span>type <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">modifier</span><span class=\"token punctuation\">(</span>company<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 원래 데이터셋</span>\n<span class=\"token keyword\">const</span> movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> director<span class=\"token operator\">:</span> <span class=\"token string\">\"Ridley Scott\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Blade Runner\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> director<span class=\"token operator\">:</span> <span class=\"token string\">\"Ridley Scott\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Gladiator\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> director<span class=\"token operator\">:</span> <span class=\"token string\">\"Cuentin Tarantino\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Pulp Fiction\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> director<span class=\"token operator\">:</span> <span class=\"token string\">\"Alfonso Cuaron\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Gravity\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 바뀔 데이터셋 (이렇게 바꾸기)</span>\n<span class=\"token keyword\">const</span> directors <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"Ridly Scott\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Blade Runner\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Gladiator\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Cuentin Tarantino\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Pulp Fiction\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Alfonso Cuaron\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Gravity\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">modifier</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>director<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      acc<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>director<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>acc<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>director<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      acc<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>director<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">modifier</span><span class=\"token punctuation\">(</span>movies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>여러 예제들을 작성해보고 나니 백에서 오는 데이터를 클라이언트 상에 나타내기 위해 데이터를 가공하는 과정에서 reduce 메서드가 아주 유용하게 쓰일 수 있을 것 같다는 기대감이 든다. 기존에는 데이터를 가공하기 위해 거의 map, for loop등을 활용했는데 리듀스 메서드를 활용해서 로직을 더욱 깔끔하고 가독성 있게 작성하도록 시도해 보아야겠다. 화이팅!</p>","fields":{"slug":"/posts/javascript-reduce/","tagSlugs":["/tag/javascript/","/tag/reduce/","/tag/자바스크립트-메서드/"]},"frontmatter":{"date":"2020-09-02","description":"자바스크립트 어레이 메서드 Reduce()를 이해해보자.","tags":["javascript","reduce","자바스크립트 메서드"],"title":"자바스크립트 Reduce 메서드 뽀개기"}}},"pageContext":{"slug":"/posts/javascript-reduce/"}}}