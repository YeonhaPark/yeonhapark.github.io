{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/configure-eslint-with-typescript-react/","result":{"data":{"markdownRemark":{"id":"37334687-24ca-5a3b-bd17-cc6d12cf18f8","html":"<p>우선, eslint와 prettier의 기능에 대해서 간단히 짚고 넘어가자 (타입스크립트, 리액트는 이 포스팅의 메인이 아니므로 패스하겠다)</p>\n<h3 id=\"eslint\" style=\"position:relative;\"><a href=\"#eslint\" aria-label=\"eslint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ESLint</h3>\n<p>ESLint는 ECMAScript에 기반한 자바스크립트 코드 상의 버그를 개선하고 일관성 있는 코드 작성을 위한 리포팅 도구이다. 특징 중 하나는 사용자가 원하는 방식대로 플러그인을 이용하여 다양한 룰을 적용할 수 있다는 점이다. (Create React App에서는 <code class=\"language-text\">react-scripts</code> 를 통해 이미 eslint가 포함되어 있기 때문에 패키지 매니저로 따로 설치할 필요가 없다!)</p>\n<h3 id=\"prettier\" style=\"position:relative;\"><a href=\"#prettier\" aria-label=\"prettier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prettier</h3>\n<p>Prettier는 파일들을 스캔하고 사용자가 설정한 룰에 부합하도록 코드를 포맷팅하는 툴이다. Prettier는 jsx, TypeScript 뿐만 아니라 scss, less, JSON, markdown 등 다양한 언어를 지원한다.</p>\n<h3 id=\"eslint와-prettier-함께-셋팅하기\" style=\"position:relative;\"><a href=\"#eslint%EC%99%80-prettier-%ED%95%A8%EA%BB%98-%EC%85%8B%ED%8C%85%ED%95%98%EA%B8%B0\" aria-label=\"eslint와 prettier 함께 셋팅하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ESLint와 Prettier 함께 셋팅하기</h3>\n<p>Prettier는 ESLint의 플러그인 중 하나로 prettier를 적용함으로써 설정한 룰에 포맷팅을 적용할 수 있다. <code class=\"language-text\">prettier</code> 나 <code class=\"language-text\">@typescript-eslint/parser</code> 같이 필수 패키지 등을 제외하고 일부는 개인 취향에 맞춰서 플러그인을 적용할 수 있기 때문에 각자 원하는 스타일에 따라서 플러그인을 가감하여 설치하면 되겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @typescript-eslint/parser @typescript-eslint/eslint-plugin -D</code></pre></div>\n<p><em>create-react-app을 사용하지 않는 경우는 eslint를 추가로 설치해준다.</em></p>\n<p><code class=\"language-text\">@typescript-eslint/parser</code> : TypeScript 코드를 linting할 수 있도록 한다.</p>\n<p><code class=\"language-text\">@typescript-eslint/eslint-plugin</code> : TypeScript를 위한 ESLint 룰을 포함하는 플러그인이다.</p>\n<p>그 다음 프로젝트 루트 디렉토리에 <code class=\"language-text\">.eslintrc.js</code> 파일을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> eslint-plugin-react eslint-config-airbnb eslint-config-airbnb-typescript\neslint-plugin-jsx-a11y eslint-plugin-import prettier eslint-config-prettier eslint-plugin-prettier -D</code></pre></div>\n<ul>\n<li>타입스크립트를 리액트와 함께 사용한다면 <a href=\"https://github.com/yannickcr/eslint-plugin-react\"><code class=\"language-text\">eslint-plugin-react</code></a> dev dependency를 설치해주어야 한다.</li>\n<li><a href=\"https://www.npmjs.com/package/eslint-config-airbnb\"><code class=\"language-text\">eslint-config-airbnb</code></a> :airbnb 의 리액트 관련 규칙을 적용하기 위한 플러그인이다.</li>\n<li><a href=\"https://github.com/iamturns/eslint-config-airbnb-typescript\"><code class=\"language-text\">eslint-config-airbnb-typescript</code></a> :위의 플러그인의 적용 범위를 타입스크립트까지 확대하기 위한 플러그인으로, 별도의 규칙을 갖고 있진 않다.</li>\n<li><code class=\"language-text\">eslint-plugin-jsx-a11y</code> : eslint-config-airbnb와 함께 설치해주어야 하는 플러그인이다(<code class=\"language-text\">eslint-plugin-import</code>, <code class=\"language-text\">eslint-plugin-react</code> 도 마찬가지)</li>\n<li><code class=\"language-text\">prettier</code> : prettier를 적용하기 위한 코어 라이브러리</li>\n<li><code class=\"language-text\">eslint-plugin-prettier</code> : ESLint 룰로 프리티어를 실행한다.</li>\n<li><a href=\"https://github.com/prettier/eslint-config-prettier\"><code class=\"language-text\">eslint-config-prettier</code></a>: prettier와 중복, 충돌되는 ESLint 룰을 비활성화한다. ESLint에도 포맷팅을 하는 기능이 있는데 이것이 prettier와 충돌하여 에러를 발생시킬 수 있으므로 해당 패키지를 통해 이런 오류를 사전에 방지하는 것이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//.eslintrc.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"airbnb\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"airbnb-typescript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"prettier/react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:react/recommended\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// eslint-plugin-react에서 추천하는 리액트 린팅 설정</span>\n    <span class=\"token string\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// @typescript-eslint/recommended의 추천 룰 사용</span>\n    <span class=\"token string\">\"prettier/@typescript-eslint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:prettier/recommended\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 해당 플러그인을 사용할것이라고 등록</span>\n  env<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 프로젝트 사용 환경</span>\n    browser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    es6<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    jest<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  parser<span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// eslint가 TypeScript를 린팅할 수 있도록 parser 지정</span>\n  parserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ecmaFeatures<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      jsx<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// jsx 활성화</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    ecmaVersion<span class=\"token operator\">:</span> <span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// ECMAScript syntax 버젼</span>\n    sourceType<span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// import 사용</span>\n    project<span class=\"token operator\">:</span> <span class=\"token string\">\"./tsconfig.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"no-underscore-dangle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// _언더스코어 식별자 사용 관련 룰 비활성화</span>\n    <span class=\"token string\">\"no-alert\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// alert 자주 사용하므로 비활성화</span>\n    <span class=\"token string\">\"react-hooks/exhaustive-deps\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"warn\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// dependency 관련 에러는 경고(노란줄)로 바꿈</span>\n    <span class=\"token string\">\"react/jsx-filename-extension\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".jsx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".tsx\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// js도 확장자 가능하게끔 설정</span>\n    <span class=\"token string\">\"@typescript-eslint/naming-convention\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// snake_case, camelCase 혼용해서 사용중이므로 비활성화</span>\n    <span class=\"token string\">\"prettier/prettier\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// eslint-plugin-prettier의 룰을 활성화</span>\n    <span class=\"token string\">\"arrow-body-style\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// eslint-plugin-prettier와 충돌하는 ESLint 코어 룰을 비활성화</span>\n    <span class=\"token string\">\"prefer-arrow-callback\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// eslint-plugin-prettier와 충돌하는 ESLint 코어 룰을 비활성화</span>\n    <span class=\"token string\">\"import/no-unresolved\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// src 폴더 밑에 있는 이미지 file을 임포트하는 과정에서 에러로 표기되는 이슈 방지</span>\n    <span class=\"token string\">\"jsx-a11y/anchor-is-valid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"warn\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// a tag에 href 사용하도록 경고하는 룰</span>\n    <span class=\"token string\">\"jsx-a11y/click-events-have-key-events\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 마우스가 아닌 키보드로 컴퓨터를 이용하는 사람들을 위한 접근성 옵션 꺼둠. 추후 적용하고자 하면 제거할 것</span>\n    <span class=\"token string\">\"jsx-a11y/no-static-element-interactions\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// semantic 의미를 갖고 있지 않은 태그 사용을 지양하도록 하는 옵션 꺼둠</span>\n    <span class=\"token string\">\"react/jsx-props-no-spreading\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// jsx에 넘겨주는 props 에 spread 연산자를 사용할 수 있게끔 셋팅</span>\n    <span class=\"token string\">\"react/no-children-prop\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// children 으로 Prop 넘겨줄 수 있도록 설정</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>eslint 설정이 어떻게 된 것인지 설명해보겠다. </p>\n<h3 id=\"extends\" style=\"position:relative;\"><a href=\"#extends\" aria-label=\"extends permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extends</h3>\n<ul>\n<li><code class=\"language-text\">airbnb</code> , <code class=\"language-text\">airbnb-typescript</code>: 에어비엔비 플러그인을 적용하기 위한 설정</li>\n<li><code class=\"language-text\">prettier</code> : eslint-config-prettier의 메인 설정을 활성화하며, prettier와 충돌하는 ESLint 코어 룰을 비활성화한다.</li>\n<li><code class=\"language-text\">prettier/react</code>: plugin을 요구하는 config를 설치하게 되면 적용을 위해 <code class=\"language-text\">prettier/해당플러그인</code> 을 적용해주어야한다. eslint-config-airbnb는 eslint-plugin-react를 peer-dependency로 가지므로 이 설정을 추가한다.</li>\n<li><code class=\"language-text\">plugin:prettier/recommended</code> :eslint-config-prettier, eslint-plugin-prettier 설정을 적용하기 위한 셋팅. 반드시 마지막 익스텐션 순서로 넣어주어야 한다.</li>\n<li><code class=\"language-text\">plugin:@typescript-eslint/recommended</code> : @typescript-eslint/recommended의 추천 룰 사용</li>\n<li><code class=\"language-text\">prettier/@typescript-eslint</code> : prettier와 typescript-eslint를 함께 쓰기 위한 설정이다. 프리티어가 적용하는 포맷팅에 대해 ESLint가 추가로 포맷팅 관련 작업을 하지 않도록 한다. (<a href=\"https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#usage-with-prettier\">참고</a>)</li>\n</ul>\n<h3 id=\"plugins\" style=\"position:relative;\"><a href=\"#plugins\" aria-label=\"plugins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>plugins</h3>\n<ul>\n<li><code class=\"language-text\">prettier</code> , <code class=\"language-text\">react</code>: 해당 플러그인 사용을 등록한다.</li>\n<li><code class=\"language-text\">@typescript-eslint</code> : eslint에게 해당 플러그인 패키지를 로드하라고 전달하는 역할</li>\n</ul>\n<h3 id=\"parseroptions\" style=\"position:relative;\"><a href=\"#parseroptions\" aria-label=\"parseroptions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ParserOptions</h3>\n<p><a href=\"https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser#parseroptionsproject\"><code class=\"language-text\">parserOptions.project</code></a>: eslint-config-airbnb-typescript 를 설치했다면 타입 규칙들이 작용하기 위해 해당 패키지에서 설정하도록 요구하는 항목이다. 해당 옵션을 설정하게되면 프로젝트의 <code class=\"language-text\">tsconfig.json</code> 으로 가는 path를 제공할 수 있다. (해당 옵션의 디폴트 값은 <code class=\"language-text\">undefined</code> 다.)</p>\n<h3 id=\"rules\" style=\"position:relative;\"><a href=\"#rules\" aria-label=\"rules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rules</h3>\n<p>위 예에서 설정한 rule은 개인적으로 프로젝트의 편의에 맞게 내가 설정한 것이며, 꼭 위의 예를 따르지 않고 개발자가 사용하고자 하는 방식대로 옵션을 설정해주면 된다. </p>\n<ul>\n<li><code class=\"language-text\">no-underscore-dangle</code> : 식별자 앞에 _ 언더스코어를 쓰는 경우가 많아서 해당 룰을 비활성화하였다.</li>\n<li><code class=\"language-text\">no-alert</code> : 우리 앱에서는 alert를 자주 사용하기 때문에 해당 룰을 비활성화 해주었다.</li>\n<li><code class=\"language-text\">react-hooks/exhaustive-deps</code> : useEffect 사용 시 dependency 사용이 미진한 부분에 대해서 경고 처리하도록 설정했다.</li>\n<li><code class=\"language-text\">react/jsx-filename-extension</code> : js확장자가 아닌 jsx 확장자만 허용되도록 하는 룰이다. extensions에 위와 같이 설정을 통해 js 확장자도 허용할 수 있다.</li>\n<li><code class=\"language-text\">&quot;prettier/prettier&quot;: &quot;error&quot;</code> eslint-plugin-prettier의 룰을 활성화한다.</li>\n<li><code class=\"language-text\">&quot;arrow-body-style&quot;: &quot;off&quot;</code> 그리고 <code class=\"language-text\">&quot;prefer-arrow-callback&quot;: &quot;off&quot;</code> 는 eslint-plugin-prettier와 충돌하는 ESLint 코어 룰을 비활성화한다. (자세한 이유는 <a href=\"https://github.com/prettier/eslint-plugin-prettier#arrow-body-style-and-prefer-arrow-callback-issue\">여기</a> 참고)</li>\n<li><code class=\"language-text\">import/no-unresolved</code> : eslint는 webpack에 대한 지식이 없어서 src 폴더 밑에 있는 이미지 file을 임포트하는 과정에서 에러로 표기되는 문제가 있었다. 린터는 단순히 현재 폴더 구조를 파악하고 타겟 파일을 찾지 못하면 경고로 표기하기 때문이다. 해당 옵션은 off 처리하였다.</li>\n</ul>\n<p>기타 룰은 각자 프로젝트를 진행하면서 원하는 룰에 맞춰서 취향껏 가감하면 되겠다.</p>\n<h3 id=\"적용된-eslint-rule-리스트-확인하기\" style=\"position:relative;\"><a href=\"#%EC%A0%81%EC%9A%A9%EB%90%9C-eslint-rule-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\" aria-label=\"적용된 eslint rule 리스트 확인하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>적용된 ESLint Rule 리스트 확인하기</h3>\n<ul>\n<li><code class=\"language-text\">plugin:react/recommended</code>: <a href=\"https://eslint.org/docs/rules/\">https://eslint.org/docs/rules/</a></li>\n<li><code class=\"language-text\">@typescript-eslint/eslint-plugin</code> : <a href=\"https://www.npmjs.com/package/@typescript-eslint/eslint-plugin\">https://www.npmjs.com/package/@typescript-eslint/eslint-plugin</a> / <a href=\"https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin/docs/rules\">https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin/docs/rules</a></li>\n<li><code class=\"language-text\">airbnb/hooks</code>: 찾아보니 airbnb/hooks는 리액트에서 제공하는 rooks-of-hooks를 그대로 적용하고 있었다. (<a href=\"https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/react-hooks.js\">https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/react-hooks.js</a>) 이는 CRA에 default로 적용되어 있으므로 생략 가능하다.</li>\n<li><code class=\"language-text\">eslint-config-airbnb</code> : <a href=\"https://github.com/airbnb/javascript/tree/master/react\">https://github.com/airbnb/javascript/tree/master/react</a></li>\n</ul>\n<p>끝으로 prettier 를 실행하기 위해서는 루트 디렉토리에 .prettierrc 파일을 생성해주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// .prettierrc</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"useTabs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"tabWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"trailingComma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>참고 블로그</p>\n<p><a href=\"https://velog.io/@kyusung/eslint-config-2\">https://velog.io/@kyusung/eslint-config-2</a></p>\n<p><a href=\"https://medium.com/@brygrill/create-react-app-with-typescript-eslint-prettier-and-github-actions-f3ce6a571c97\">https://medium.com/@brygrill/create-react-app-with-typescript-eslint-prettier-and-github-actions-f3ce6a571c97</a></p>\n<p><a href=\"https://medium.com/javascript-scene/streamline-code-reviews-with-eslint-prettier-6fb817a6b51d\">https://medium.com/javascript-scene/streamline-code-reviews-with-eslint-prettier-6fb817a6b51d</a></p>\n<p><a href=\"https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project\">https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project</a></p>\n<p><a href=\"https://create-react-app.dev/docs/setting-up-your-editor/\">https://create-react-app.dev/docs/setting-up-your-editor/</a></p>","fields":{"slug":"/posts/configure-eslint-with-typescript-react/","tagSlugs":["/tag/react/","/tag/cra/","/tag/type-script/","/tag/es-lint/","/tag/prettier/","/tag/air-bn-b/"]},"frontmatter":{"date":"2021-01-07","description":"ESLint + Prettier 타입스크립트 기반 리액트 프로젝트에서 설정하기","tags":["React","CRA","TypeScript","ESLint","Prettier","AirBnB"],"title":"ESLint + Prettier + React(CRA) + TypeScript + AirBnB 설정하기"}}},"pageContext":{"slug":"/posts/configure-eslint-with-typescript-react/"}},"staticQueryHashes":["1488695104","251939775","401334301"]}