{"componentChunkName":"component---src-pages-blog-js","path":"/blog/","result":{"data":{"site":{"siteMetadata":{"title":"Yonas Dev Log"}},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/blog/optimizing-rendering-performance/"},"excerpt":"나는 다양한 종류의 input, select 태그를 포함한 form을 다루는 일을 하고 있고, 많은 개발자들이 그렇듯 react-hook-form 라이브러리를 아주 감사하면서 사용하고 있다. React-hook-form의 장점은 ref…","timeToRead":3,"frontmatter":{"date":"July 17, 2023","description":null,"title":"React Hook Form 렌더링 성능 최적화 하기","tags":["optimization","react-hook-form","watch","useWatch","react"]}},{"fields":{"slug":"/blog/improve-react-table-performance/"},"excerpt":"React Table은 Table을 그리는데 필요한 다양한 API와 무엇보다도 useRowSelect…","timeToRead":2,"frontmatter":{"date":"June 10, 2023","description":"가상화 테크닉을 사용하여 과도한 렌더로 빚어지는 react-table의 성능을 개선하자","title":"React Virtuoso를 사용하여 React-table 의 느린 성능 개선하기","tags":["react","table","react-table","react-virtuoso","virtualization"]}},{"fields":{"slug":"/blog/using-proptypes-jsdoc/"},"excerpt":"prop-types는 리액트에서 제공하는 라이브러리라서 따로 설치할 필요가 없다. TypeScript를 사용하지 않는다면 (혹은 사용할 수 없다면) prop-types로 타이핑 서포트가 가능하다. jsdoc은 VS Code…","timeToRead":1,"frontmatter":{"date":"December 15, 2022","description":"TypeScript를 못쓴다면 PropTypes를 활용하자","title":"React CRA에서 prop-types와 jsdoc 함께 사용해서 VS Code의 Auto Suggestion 기능 사용하기","tags":["VS Code","jsdoc","PropTypes","Auto Suggestion","React"]}},{"fields":{"slug":"/blog/encodeURI-vs-encodeURIComponent/"},"excerpt":"함수는 URI의 특정한 문자를 UTF-8로 인코딩해 하나, 둘, 셋, 혹은 네 개의 연속된 이스케이프 문자로 나타낸다.  encodeURI encodeURIComponent URI의 특정한 문자를 UTF-…","timeToRead":3,"frontmatter":{"date":"May 06, 2022","description":null,"title":"encodeURI VS encodeURIComponent","tags":["encode","encoding","encodeURI","encodeURIComponent"]}},{"fields":{"slug":"/blog/handling-date-and-time/"},"excerpt":"Date object 시간을 나타내는 방법은 아주 다양하고 상대적이다. 이 글을 쓰고 있는 현재는 3월 7일 오후 11시지만, 3월 7일 23시라고 나타낼 수도 있다. 또 한국은 현재 오후 11시이지만 영국은 3월 7일 오후…","timeToRead":7,"frontmatter":{"date":"March 09, 2022","description":null,"title":"자바스크립트 Date 오브젝트를 활용해서 시간과 날짜 개념 표현하기","tags":["javascript","date"]}},{"fields":{"slug":"/blog/css-gradients/"},"excerpt":"이 글은 Chris Coyier가 작성한 CSS Gradients에서 상당 내용을 참조했습니다 CSS의 gradient란 ? 두개 혹은 그 이상의 색상을 가지고 점진적으로 옅게 하거나 진하게 처리하여 이미지를 생성하는 것을 말한다. gradient…","timeToRead":6,"frontmatter":{"date":"February 25, 2022","description":null,"title":"CSS Gradients에 대해","tags":["CSS","gradient"]}},{"fields":{"slug":"/blog/debugging/"},"excerpt":"Debugging은 스크립트 내 에러를 검출해 제거하는 일련의 과정을 의미한다. 모던 브라우저와 호스트 환경 대부분은 개발자 도구 안에 UI…","timeToRead":3,"frontmatter":{"date":"February 09, 2022","description":"Chrome 브라우저와 Postman을 이용하여 디버깅 해보기","title":"디버깅(Debugging)","tags":["debugging","chrome"]}},{"fields":{"slug":"/blog/why-we-use-virtual-dom/"},"excerpt":"가상 돔을 왜 쓸까? => 리얼 돔이 비효율적이기 때문에 애초에 DOM은 서버에 의해 렌더링되는 정적인 UI를 염두에 두고 설계되었다. 리얼 돔에서 다음과 같은 스크립트를 통해 DOM에 변경을 가하는 경우를 보자. 브라우저가 HTML…","timeToRead":1,"frontmatter":{"date":"January 04, 2022","description":null,"title":"Virtual DOM을 사용하는 이유","tags":["react","virtualDOM"]}},{"fields":{"slug":"/blog/how-webpage-is-made/"},"excerpt":"22/02/10에 업데이트 되었습니다. 웹페이지가 로드될 때, 웹 클라이언트는 서버에게 리소스(html…","timeToRead":4,"frontmatter":{"date":"December 17, 2021","description":null,"title":"웹페이지가 사용자에게 보여지는 과정","tags":["html","web-development"]}},{"fields":{"slug":"/blog/big-o-explained/"},"excerpt":"유투브 coderbyte 채널의 The Complete Guide to Big O Notation & Complexity Analysis for Algorithms를 듣고 정리 What is Big O? Big-O…","timeToRead":6,"frontmatter":{"date":"December 09, 2021","description":"Big O 표기법은 무엇이고 왜 Big O를 사용하는지","title":"Big O Explained","tags":["programming","algorithm","big-o"]}},{"fields":{"slug":"/blog/what-is-cors/"},"excerpt":"CORS는 Cross—Origin Resource Sharing(교차 출처 리소스 공유)의 약자이다. 브라우저는 보안상의 이유로 웹 애플리케이션이 리소스를 요청할 때 자신의 출처와 동일한 출처의 리소스만 허락한다.  즉, https://www…","timeToRead":6,"frontmatter":{"date":"December 01, 2021","description":null,"title":"CORS란? 그리고 이를 해결하는 방법은?","tags":["network","CORS"]}},{"fields":{"slug":"/blog/javascript-iterable/"},"excerpt":"Iterable은 ES6의 등장과 함께 자바스크립트의 어떤 콜렉션도 for..of loop를 사용하여 반복 가능한 객체로 만들어주는 유용한 기능이다. 객체의  키값에 특정 형태의 함수가 들어있다면, 이를 반복 가능한 객체(iterable object…","timeToRead":2,"frontmatter":{"date":"November 23, 2021","description":"객체에 Symbol.iterator 속성을 적용하여 자바스크립트의 어떤 콜렉션도 반복 가능한 객체로 만들 수 있다.","title":"JavaScript Iterable","tags":["javascript","iterable"]}},{"fields":{"slug":"/blog/react-optimization-using-memoization/"},"excerpt":"React useCallback을 통한 성능 최적화 eslint문법을 적용하고 개발을 하다보면 한번씩 react-hooks/exhaustive-deps 에러를 맞닦뜨리는 경험을 하게 된다. 가  넣으라고 해서 넣었는데, 위 코드는 infinite…","timeToRead":3,"frontmatter":{"date":"November 15, 2021","description":null,"title":"useCallback과 React.memo를 통한 리액트 성능 최적화","tags":["react","optimization"]}},{"fields":{"slug":"/blog/event-bubbling/"},"excerpt":"이벤트 버블링 Event bubbling은 어떤 엘러먼트에서 이벤트가 발생했을때 해당 엘러먼트의 이벤트 핸들러만 호출되고 끝나는게 아니고 그 엘러먼트의 부모 엘러먼트가 지닌 이벤트 핸들러까지 호출되는 현상을 말한다. 이벤트가 DOM…","timeToRead":5,"frontmatter":{"date":"November 03, 2021","description":"event.target과 event.currentTarget의 차이점은 무엇일까?","title":"이벤트 버블링과 캡처링","tags":["event","html"]}},{"fields":{"slug":"/blog/javascript-map-and-set/"},"excerpt":"Map  is similar to . But the main difference is that  allows keys of any type.  – creates the map.  – stores the value by the key…","timeToRead":3,"frontmatter":{"date":"September 05, 2021","description":null,"title":"JavaScript Map and Set","tags":["javascript"]}},{"fields":{"slug":"/blog/using-currying-to-handle-event-handlers-in-react/"},"excerpt":"Suppose we have parent and child component and parent has handler which gets activated when child component’s onChange event is called. The…","timeToRead":3,"frontmatter":{"date":"August 02, 2021","description":null,"title":"Using currying to handle event handlers in React","tags":["functional-programming","react","currying"]}},{"fields":{"slug":"/blog/zsh-bash-set-authority/"},"excerpt":"…","timeToRead":1,"frontmatter":{"date":"July 21, 2021","description":null,"title":"zsh, bash에서 파일의 권한 설정하는방법","tags":["bash"]}},{"fields":{"slug":"/blog/javascript-class-static-method/"},"excerpt":"Static method…","timeToRead":1,"frontmatter":{"date":"July 07, 2021","description":null,"title":"JavaScript 클래스 정적 메서드에 대해 알아보자","tags":["javascript"]}},{"fields":{"slug":"/blog/http-message-method-cache/"},"excerpt":"본 포스트는 O’REILLY 사의 HTTP 완벽가이드를 읽으면서 정리한 내용입니다. HTTP 메시지는 HTTP 애플리케이션 간에 주고받은 데이터의 블록들이다. HTTP가 인터넷의 배달원이라면, HTTP…","timeToRead":12,"frontmatter":{"date":"July 04, 2021","description":"네트워크 공부 - HTTP","title":"HTTP 메시지, 메서드, 캐시","tags":["network"]}},{"fields":{"slug":"/blog/solving-codewars-algorithm-using-reduce-method/"},"excerpt":"최근에 codewars를 통해 알고리즘 문제를 일주일에 한두개씩 풀고 있다. 그 중에 자바스크립트 reduce 메서드를 이용한 기억할만한 문제가 있어서 블로그에 따로 정리하고자 한다. 문제는 아래와 같다. A format for expressing…","timeToRead":3,"frontmatter":{"date":"May 09, 2021","description":"자바스크립트 어레이 reduce 메서드를 활용한 알고리즘 풀이","title":"CodeWars 알고리즘 문제 풀기","tags":["algorithms","javascript"]}},{"fields":{"slug":"/blog/understanding-react-virtual-dom/"},"excerpt":"…","timeToRead":5,"frontmatter":{"date":"January 17, 2021","description":"왜 가상돔이 효율적인지 그리고 리액트의 기본 구조가 어떻게 동작하는지에 대해 정리","title":"React Virtual DOM 이해하기","tags":["react","virtual-dom"]}},{"fields":{"slug":"/blog/javascript-prototype/"},"excerpt":"본 포스팅은 정재남씨의 코어자바스크립트를 읽고 정리한 내용입니다. 자바스크립트와 프로토타입 자바스크립트는 프로토타입(prototype…","timeToRead":3,"frontmatter":{"date":"January 16, 2021","description":"자바스크립트의 함수 원형(prototype)이 어떻게 프로퍼티와 메서드를 인스턴스에 전달하는지에 대해","title":"JavaScript 프로토타입","tags":["prototype","javascript"]}},{"fields":{"slug":"/blog/configuring-eslint-prettier-cra-typescript-airbnb/"},"excerpt":"우선, eslint와 prettier의 기능에 대해서 간단히 짚고 넘어가자 (타입스크립트, 리액트는 이 포스팅의 메인이 아니므로 패스하겠다) ESLint ESLint는 ECMAScript…","timeToRead":4,"frontmatter":{"date":"January 07, 2021","description":"ESLint + Prettier 타입스크립트 기반 리액트 프로젝트에서 설정하기","title":"ESLint + Prettier + React(CRA) + TypeScript + AirBnB 설정하기","tags":["typescript","eslint"]}},{"fields":{"slug":"/blog/this-call-apply-bind-method/"},"excerpt":"본 포스팅은 정재남씨의 코어자바스크립트를 읽고 정리한 내용입니다. This 자바스크립트의 this는 실행 컨텍스트가 생성될 때 함께 결정된다. 실행 컨텍스트는 함수를 호출할 때 생성되므로 결국 this…","timeToRead":5,"frontmatter":{"date":"November 14, 2020","description":"코어 자바스크립트를 읽고 this에 대해 다시 정리해보았다","title":"자바스크립트 This, call / apply / bind 메서드에 대해 정리","tags":["javascript"]}},{"fields":{"slug":"/blog/solving-permission-err-when-accessing-port22/"},"excerpt":"주말에 카페에서 회사 gitlab 리포지토리를 pull 받으려고 했는데 다음과 같은 에러가 떴다. 이 문제를 해결하기 위해 아래의 문서를 참고했다. https://about.gitlab.com/blog/2016/02/18/gitlab-dot-com…","timeToRead":1,"frontmatter":{"date":"September 27, 2020","description":"port 22 차단되었을 때 해결 방법","title":"SSH port 22 gitlab 접속 시 permission error 해결방법","tags":["ssh"]}},{"fields":{"slug":"/blog/understanding-javascript-reduce-method/"},"excerpt":"프론트엔드 개발을 시작한지 1년이 지났지만 아직도 reduce…","timeToRead":2,"frontmatter":{"date":"September 02, 2020","description":"자바스크립트 어레이 메서드 Reduce()를 이해해보자.","title":"자바스크립트 Reduce 메서드 뽀개기","tags":["javascript"]}},{"fields":{"slug":"/blog/typescript-programming-type/"},"excerpt":"…","timeToRead":6,"frontmatter":{"date":"August 25, 2020","description":"타입스크립트 프로그래밍을 읽고 안정적인 자바스크립트 활용을 위한 타입스크립트 활용 방법에 대해 정리하기","title":"TypeScript Programming - 1) 타입","tags":["typescript"]}},{"fields":{"slug":"/blog/understanding-c-programming-1/"},"excerpt":"컴파일링 C언어 상에서  나  같은 명령어를 실행할 때 컴퓨터는 다음과 같은 과정을 거친다. preprocessing (전처리과정) compiling (컴파일) assembling (어셈블) linking (링크) preprocessing…","timeToRead":4,"frontmatter":{"date":"August 21, 2020","description":"C언어 기초 - 소스 코드가 컴파일 되는 과정과 배열에 대해 알아보기","title":"C언어 입문하기 (CS50 MOOC 강의를 듣고 정리) - 2","tags":["C"]}},{"fields":{"slug":"/blog/understanding-c-programming-2/"},"excerpt":"입문 CS50에서 제공하는 샌드박스(sandbox.cs50.io)에서 C언어를 간단히 작성해볼 수 있다. 파일을 하나 생성하여 hello.c라고 명명하고 그 안에 다음과 같은 내용을 작성한다. 대략 Hello, world…","timeToRead":6,"frontmatter":{"date":"August 18, 2020","description":"C언어 기초 - 입문","title":"C언어 입문하기 (CS50 MOOC 강의를 듣고 정리) - 1","tags":["C"]}},{"fields":{"slug":"/blog/why-objects-dont-work-with-inline-styling-react/"},"excerpt":"리액트에서 인라인 스타일링을 할 때 보통 아래처럼 코드를 작성한다. 하지만 위처럼 코드를 작성하게 되면 MyApp이 매번 렌더링 될 때마다 객체인  이 재정의되며, div…","timeToRead":1,"frontmatter":{"date":"July 05, 2020","description":null,"title":"React 인라인 스타일링에 객체를 넣으면 안되는 이유","tags":["react","css"]}},{"fields":{"slug":"/blog/getting-to-know-functional-programming/"},"excerpt":"…","timeToRead":5,"frontmatter":{"date":"April 12, 2020","description":"함수형 프로그래밍은 성공적인 프로그래밍을 위해 순수함수를 만들고  모듈화 수준을 높이는 프로그래밍 패러다임이다.","title":"간단한 예제를 통해 함수형 프로그래밍 알아가기","tags":["javascript","functional-programming"]}},{"fields":{"slug":"/blog/why-we-use-middleware-for-async-function-in-redux/"},"excerpt":"비동기를 redux에서 사용하려면 redux-thunk등의 비동기 처리를 위한 미들웨어를 추가로 사용해주어야 한다. 코드를 예로 들면서 왜 비동기 처리가 redux 미들웨어를 필요로 하는지 차근차근 이해해 보자. API 호출하는 함수를 action…","timeToRead":3,"frontmatter":{"date":"September 22, 2019","description":"Redux에서 비동기 처리를 위해 미들웨어를 사용해야 하는 이유","title":"React-redux) 리액트-리덕스에서 비동기 액션을 처리하는 방법","tags":["react","redux"]}},{"fields":{"slug":"/blog/html5-label-tag/"},"excerpt":"label 태그의 기능 label 태그는  태그와 함께 쓰일 수 있으며, 열거된 태그의 라벨링(이름표) 역할을 한다. label…","timeToRead":2,"frontmatter":{"date":"August 04, 2019","description":"입력 폼을 작성할 때 label 태그를 활용하여 입력 범위를 넓히고 마우스 사용자의 편의를 증진할 수 있다.","title":"HTML5 label 태그 기능 알아보기","tags":["html"]}},{"fields":{"slug":"/blog/lets-use-semantic-ui-in-cra/"},"excerpt":"아름다운 UI 컴포넌트들을 사용할 수 있게 도와주는 Semantic UI를 리액트 (create-react-app)상에서 사용하는 방법을 정리해 보았다. 링크로 접속한다.\nhttps://cdnjs.com/libraries/semantic-ui…","timeToRead":1,"frontmatter":{"date":"August 01, 2019","description":"UI 컴포넌트 라이브러리인 Semantic UI를 create-react-app에서 사용해보자","title":"Semantic UI Create-React-App에서 쉽게 사용하는 법","tags":["react","semantic-ui"]}},{"fields":{"slug":"/blog/execution-context-and-hoisting/"},"excerpt":"실행 문맥 실행 문맥(Execution Context…","timeToRead":4,"frontmatter":{"date":"July 20, 2019","description":"자바스크립트 코드가 실행되는 환경인 실행 컨텍스트와 호이스팅에 대해 정리","title":"TIL - 자바스크립트 실행 컨텍스트(Execution Context)와 호이스팅(Hoisting)","tags":["javascript"]}},{"fields":{"slug":"/blog/javascript-scope/"},"excerpt":"Scope…","timeToRead":2,"frontmatter":{"date":"July 18, 2019","description":"스코프란 자바스크립트 런타임 내의 코드에 있는 변수나 함수 혹은 객체에 대한 접근성을 일컫는다.","title":"TIL - 자바스크립트 스코프(Scope)","tags":["javascript","scope"]}},{"fields":{"slug":"/blog/delivering-toggle-effect-using-react-hooks/"},"excerpt":"리액트 최신기능 Hooks를 이용하여 네비게이션 바 토글 기능 구현해보자! 기존에는 이벤트에 따라 버튼의 상태를 바꾸거나 메뉴바를 보였다가 사라지게 할 때 this.state를 이용해왔었다. 그러다가 이번에 React Hooks…","timeToRead":1,"frontmatter":{"date":"July 02, 2019","description":"클래스형 컴포넌트에서만 가능하던 state 기능을 Hooks를 이용하여 함수형 컴포넌트에서 구현할 수 있다.","title":"리액트 최신기능 Hooks를 이용하여 네비게이션 바 토글 기능 구현하기","tags":["react","hooks"]}},{"fields":{"slug":"/blog/applying-css-effect-on-mouse-hover/"},"excerpt":"CSS3 transition 속성을 활용하여 hover…","timeToRead":1,"frontmatter":{"date":"June 19, 2019","description":"CSS Transition 속성을 활용하여 마우스 hover에 따라 달라지는 효과 적용","title":"CSS3 - 마우스 hover에 따라 그래픽적인 효과 줘보기","tags":["css","html"]}},{"fields":{"slug":"/blog/understanding-this-in-javascript/"},"excerpt":"자바스크립트와 This 자바스크립트는 컴파일 과정을 필요로 하지 않는 스크립트 언어이다. 인터프러터(웹 브라우저 등)가 코드를 읽고 행 by 행으로 자바스크립트를 실행 시킨다. 이 때 각각의 코드가 실행되는 환경-aka scope…","timeToRead":2,"frontmatter":{"date":"June 18, 2019","description":null,"title":"자바스크립트 This 이해하기","tags":["javascript"]}},{"fields":{"slug":"/blog/making-password-form-with-react/"},"excerpt":"회원가입 시 필수적으로 넣는 기능인 비밀번호 재확인 기능을 리액트로 구현해보자. Yimage 기본적으로 위 화면 처럼 초기 비밀번호를 넣는 input field, 재확인 비밀번호를 넣는 input field…","timeToRead":3,"frontmatter":{"date":"May 27, 2019","description":"사이트의 회원가입 시 자주 보게 되는 비밀번호 재확인 기능을 리액트로 구현해보자","title":"React - Password Validation -리액트로 비밀번호 재입력 폼 만들기","tags":["react"]}},{"fields":{"slug":"/blog/passing-data-from-child-to-parent-react/"},"excerpt":"부모 컴포넌트 (페이지) 안에 자식 컴포넌트 (캘린더)가 있고 사용자가 선택한 체크인-체크아웃 날짜를 부모 컴포넌트에게 전달 하고 싶다면? 부모-자식 컴포넌트 관계를 이해하기 위해 필수적으로 선행되어야 하는 것은 콜백함수에 대한 이해다. event…","timeToRead":2,"frontmatter":{"date":"April 17, 2019","description":"부모 컴포넌트에게 자식 컴포넌트의 데이터를 전달하고 싶다면?","title":"React - 자식 컴포넌트(Child Component) 값을 부모 컴포넌트(Parent Component)에게 전달하기","tags":["react"]}}]}},"pageContext":{}},"staticQueryHashes":["2555585279","2841359383","3159585216"]}