{"componentChunkName":"component---src-templates-post-template-js","path":"/blog/javascript-class-static-method/","result":{"data":{"markdownRemark":{"excerpt":"Static method(정적 메서드) 정적 메서드는 프로토타입이 아닌 함수 자체에 메서드를 설정하는 것이다. 아래처럼 인스턴스를 통해 호출할 경우 에러가 난다. 인스턴스에서 메서드를 호출하지 않고 클래스 내부에서 메서드를 호출하는 경우 사용될 수 있다. 유의해야 할 것은 static…","html":"<h3>Static method(정적 메서드)</h3>\n<p>정적 메서드는 <strong>프로토타입이 아닌 함수 자체에 메서드를 설정</strong>하는 것이다. 아래처럼 인스턴스를 통해 호출할 경우 에러가 난다. 인스턴스에서 메서드를 호출하지 않고 클래스 내부에서 메서드를 호출하는 경우 사용될 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">sayBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bye!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yeonha'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Uncaught TypeError: user.sayBye is not a function</span></code></pre></div>\n<p>유의해야 할 것은 static 메서드에서 this를 통해 상위 오브젝트에 접근할 수 없다는 점이다. static 메서드인 <code class=\"language-text\">selectLang</code> 은 함수 내부에서 <code class=\"language-text\">this.country</code> 로 국가명을 받아오지 않고 <code class=\"language-text\">sayHi</code> 함수 내에서 호출되면서 넘겨받은 아규먼트로 분기처리를 진행하고 있다. </p>\n<p>(static 메서드가 아닌) 일반 메서드에서 static 메서드에 접근하려면 인스턴스가 아닌 <em>클래스명.정적메서드</em> 로 접근하거나 아래처럼 <em>this.constructor.정적메서드</em> 형식을 사용해서 접근가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> country</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>country <span class=\"token operator\">=</span> country<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span><span class=\"token function\">selectLang</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// User.selectLang(this.country)도 동일</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">static</span> <span class=\"token function\">selectLang</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">country</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>country <span class=\"token operator\">===</span> <span class=\"token string\">'korea'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'안녕하세요!'</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'Hi!'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yeonha'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'korea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '안녕하세요!'</span></code></pre></div>\n<p>동일한 클래스 내에서는 정적 메서드 내에서 this를 사용하여 다른 정적 메서드에 접근 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> country</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>country <span class=\"token operator\">=</span> country<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span><span class=\"token function\">selectLang</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">static</span> <span class=\"token function\">selectLang</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">country</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>country <span class=\"token operator\">===</span> <span class=\"token string\">'korea'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'안녕하세요!'</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>country <span class=\"token operator\">===</span> <span class=\"token string\">'USA'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'Hi!'</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sayBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">static</span> <span class=\"token function\">sayBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Bye!'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yeonha'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'japan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Bye!'</span></code></pre></div>","frontmatter":{"title":"JavaScript 클래스 정적 메서드에 대해 알아보자","tags":["javascript"],"date":"July 07, 2021","description":null}},"prev":{"frontmatter":{"title":"zsh, bash에서 파일의 권한 설정하는방법"},"fields":{"slug":"/blog/zsh-bash-set-authority/"}},"next":{"frontmatter":{"title":"HTTP 메시지, 메서드, 캐시"},"fields":{"slug":"/blog/http-message-method-cache/"}}},"pageContext":{"slug":"/blog/javascript-class-static-method/","prevSlug":"/blog/zsh-bash-set-authority/","nextSlug":"/blog/http-message-method-cache/"}},"staticQueryHashes":["2555585279","2841359383","3159585216"]}